ARM GAS  /tmp/ccEZ8umi.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32f3xx_hal_rcc.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  22              		.align	2
  23              		.global	HAL_RCC_DeInit
  24              		.thumb
  25              		.thumb_func
  27              	HAL_RCC_DeInit:
  28              	.LFB124:
  29              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @file    stm32f3xx_hal_rcc.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *       
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @verbatim                
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]  
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (HSI 8MHz) with Flash 0 wait state, Flash prefetch buffer is enabled, 
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       and all peripherals are off except internal SRAM, Flash and JTAG.
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) buses;
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..] Once the device started from reset, the user application has to:
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings  
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the AHB and APB buses prescalers
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
ARM GAS  /tmp/ccEZ8umi.s 			page 2


  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals whose clocks are not
  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           derived from the System clock (RTC, ADC, I2C, I2S, TIM, USB FS)
  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                       ##### RCC Limitations #####
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ==============================================================================
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]  
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write 
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       from/to registers.
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]  
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       Workarounds:
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @endverbatim
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ******************************************************************************
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @attention
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * are permitted provided that the following conditions are met:
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer.
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer in the documentation
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      and/or other materials provided with the distribution.
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      may be used to endorse or promote products derived from this software
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      without specific prior written permission.
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ******************************************************************************  
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** */
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #include "stm32f3xx_hal.h"
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @addtogroup STM32F3xx_HAL_Driver
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC RCC
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** * @brief RCC HAL module driver
ARM GAS  /tmp/ccEZ8umi.s 			page 3


  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  * @{
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  */
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Bits position in  in the CFGR register */
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define RCC_CFGR_HPRE_BITNUMBER           POSITION_VAL(RCC_CFGR_HPRE)
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define RCC_CFGR_PPRE1_BITNUMBER          POSITION_VAL(RCC_CFGR_PPRE1)
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define RCC_CFGR_PPRE2_BITNUMBER          POSITION_VAL(RCC_CFGR_PPRE2)
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                                        10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                                          9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Exported functions ---------------------------------------------------------*/
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions 
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions 
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @verbatim    
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]
ARM GAS  /tmp/ccEZ8umi.s 			page 4


 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, AHB, APB1
 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       and APB2).
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) HSI (high-speed internal), 8 MHz factory-trimmed RC used directly or through
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           the PLL as System clock source.
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           The HSI clock can be used also to clock the USART and I2C peripherals.
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) LSI (low-speed internal), ~40 KHz low consumption RC used as IWDG and/or RTC
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           clock source.
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) HSE (high-speed external), 4 to 32 MHz crystal oscillator used directly or
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) PLL (clocked by HSI or HSE), featuring different output clocks:
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The first output is used to generate the high speed system clock (up to 72 MHz)
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The second output is used to generate the clock for the USB FS (48 MHz)
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The third output may be used to generate the clock for the ADC peripherals (up to 72 M
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The fourth output may be used to generate the clock for the TIM peripherals (144 MHz)
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           and if a HSE clock failure occurs(HSE used directly or through PLL as System 
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           clock source), the System clocks automatically switched to HSI and an interrupt
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           is generated if enabled. The interrupt is linked to the Cortex-M4 NMI 
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           (Non-Maskable Interrupt) exception vector.   
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) MCO (microcontroller clock output), used to output SYSCLK, HSI, HSE, LSI, LSE or PLL
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           clock (divided by 2) output on pin (such as PA8 pin).
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           HSE and PLL.
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           from AHB clock through configurable prescalers and used to clock
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           the peripherals mapped on these buses. You can use
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           "@ref HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) All the peripheral clocks are derived from the System clock (SYSCLK) except:
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The FLASH program/erase clock  which is always HSI 8MHz clock.
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The USB 48 MHz clock which is derived from the PLL VCO clock.
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The USART clock which can be derived as well from HSI 8MHz, LSI or LSE.
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The I2C clock which can be derived as well from HSI 8MHz clock.
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The ADC clock which is derived from PLL output.
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The RTC clock which is derived from the LSE, LSI or 1 MHz HSE_RTC
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              (HSE divided by a programmable prescaler). The System clock (SYSCLK)
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              frequency must be higher or equal to the RTC clock frequency.
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) IWDG clock which is always the LSI clock.
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****          (#) For the STM32F3xx devices, the maximum frequency of the SYSCLK, HCLK, PCLK1 and PCLK2 
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              Depending on the SYSCLK frequency, the flash latency should be adapted accordingly.
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****          (#) After reset, the System clock source is the HSI (8 MHz) with 0 WS and
ARM GAS  /tmp/ccEZ8umi.s 			page 5


 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              prefetch is disabled.
 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @endverbatim
 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /*
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   Additional consideration on the SYSCLK based on Latency settings:
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         +-----------------------------------------------+
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         | Latency       | SYSCLK clock frequency (MHz)  |
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |---------------|-------------------------------|
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |0WS(1CPU cycle)|       0 < SYSCLK <= 24        |
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |---------------|-------------------------------|
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |1WS(2CPU cycle)|      24 < SYSCLK <= 48        |
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |---------------|-------------------------------|
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |2WS(3CPU cycle)|      48 < SYSCLK <= 72        |
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         +-----------------------------------------------+
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - HSE and PLL OFF
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - CSS and MCO1 OFF
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - All interrupts disabled
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   This function does not modify the configuration of the
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - Peripheral clocks
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_DeInit(void)
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
  30              		.loc 1 233 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set HSION bit, HSITRIM[4:0] bits to the reset value*/
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION | RCC_CR_HSITRIM_4); 
  35              		.loc 1 235 0
  36 0000 0D4B     		ldr	r3, .L2
  37 0002 1A68     		ldr	r2, [r3]
  38 0004 42F08102 		orr	r2, r2, #129
  39 0008 1A60     		str	r2, [r3]
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset SW[1:0], HPRE[3:0], PPRE1[2:0], PPRE2[2:0] and MCOSEL[2:0] bits */
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_BIT(RCC->CFGR, RCC_CFGR_SW | RCC_CFGR_HPRE | RCC_CFGR_PPRE1 | RCC_CFGR_PPRE2 | RCC_CFGR_MCO
  40              		.loc 1 238 0
  41 000a 5968     		ldr	r1, [r3, #4]
  42 000c 0B4A     		ldr	r2, .L2+4
  43 000e 0A40     		ands	r2, r2, r1
  44 0010 5A60     		str	r2, [r3, #4]
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset HSEON, CSSON, PLLON bits */
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON | RCC_CR_CSSON | RCC_CR_HSEON);
  45              		.loc 1 241 0
ARM GAS  /tmp/ccEZ8umi.s 			page 6


  46 0012 1A68     		ldr	r2, [r3]
  47 0014 22F08472 		bic	r2, r2, #17301504
  48 0018 22F48032 		bic	r2, r2, #65536
  49 001c 1A60     		str	r2, [r3]
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
  50              		.loc 1 244 0
  51 001e 1A68     		ldr	r2, [r3]
  52 0020 22F48022 		bic	r2, r2, #262144
  53 0024 1A60     		str	r2, [r3]
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset CFGR register */
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
  54              		.loc 1 247 0
  55 0026 0022     		movs	r2, #0
  56 0028 5A60     		str	r2, [r3, #4]
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset CFGR2 register */
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR2);
  57              		.loc 1 250 0
  58 002a DA62     		str	r2, [r3, #44]
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset CFGR3 register */
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR3);
  59              		.loc 1 253 0
  60 002c 1A63     		str	r2, [r3, #48]
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Disable all interrupts */
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CIR);
  61              		.loc 1 256 0
  62 002e 9A60     		str	r2, [r3, #8]
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
  63              		.loc 1 259 0
  64 0030 034A     		ldr	r2, .L2+8
  65 0032 044B     		ldr	r3, .L2+12
  66 0034 1A60     		str	r2, [r3]
  67 0036 7047     		bx	lr
  68              	.L3:
  69              		.align	2
  70              	.L2:
  71 0038 00100240 		.word	1073876992
  72 003c 0CC0FFF8 		.word	-117456884
  73 0040 00127A00 		.word	8000000
  74 0044 00000000 		.word	SystemCoreClock
  75              		.cfi_endproc
  76              	.LFE124:
  78              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
  79              		.align	2
  80              		.global	HAL_RCC_OscConfig
  81              		.thumb
  82              		.thumb_func
  84              	HAL_RCC_OscConfig:
  85              	.LFB125:
 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
ARM GAS  /tmp/ccEZ8umi.s 			page 7


 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HAL status
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
  86              		.loc 1 277 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 8
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              	.LVL0:
  91 0000 70B5     		push	{r4, r5, r6, lr}
  92              	.LCFI0:
  93              		.cfi_def_cfa_offset 16
  94              		.cfi_offset 4, -16
  95              		.cfi_offset 5, -12
  96              		.cfi_offset 6, -8
  97              		.cfi_offset 14, -4
  98 0002 82B0     		sub	sp, sp, #8
  99              	.LCFI1:
 100              		.cfi_def_cfa_offset 24
 101 0004 0446     		mov	r4, r0
 102              	.LVL1:
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****    uint32_t tickstart = 0U;
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 103              		.loc 1 285 0
 104 0006 0368     		ldr	r3, [r0]
 105 0008 13F0010F 		tst	r3, #1
 106 000c 00F09880 		beq	.L5
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 107              		.loc 1 291 0
 108 0010 B54B     		ldr	r3, .L95
 109 0012 5B68     		ldr	r3, [r3, #4]
 110 0014 03F00C03 		and	r3, r3, #12
 111 0018 042B     		cmp	r3, #4
ARM GAS  /tmp/ccEZ8umi.s 			page 8


 112 001a 0CD0     		beq	.L6
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 113              		.loc 1 292 0
 114 001c B24B     		ldr	r3, .L95
 115 001e 5B68     		ldr	r3, [r3, #4]
 116 0020 03F00C03 		and	r3, r3, #12
 117 0024 082B     		cmp	r3, #8
 118 0026 1DD1     		bne	.L7
 119              		.loc 1 292 0 is_stmt 0 discriminator 1
 120 0028 AF4B     		ldr	r3, .L95
 121 002a 5B68     		ldr	r3, [r3, #4]
 122 002c 03F4C033 		and	r3, r3, #98304
 123 0030 B3F5803F 		cmp	r3, #65536
 124 0034 16D1     		bne	.L7
 125              	.L6:
 126              	.LVL2:
 127              	.LBB166:
 128              	.LBB167:
 129              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
ARM GAS  /tmp/ccEZ8umi.s 			page 9


  39:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccEZ8umi.s 			page 10


  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
ARM GAS  /tmp/ccEZ8umi.s 			page 11


 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
ARM GAS  /tmp/ccEZ8umi.s 			page 12


 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccEZ8umi.s 			page 13


 267:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 301:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/ccEZ8umi.s 			page 14


 324:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 352:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 379:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
ARM GAS  /tmp/ccEZ8umi.s 			page 15


 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:Drivers/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 408:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 409:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccEZ8umi.s 			page 16


 438:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 455:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 463:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 467:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 475:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 478:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 479:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 482:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 483:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 488:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t result;
 490:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccEZ8umi.s 			page 17


 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Number of Bits to rotate
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 505:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 526:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 528:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U) || (__CORTEX_SC >= 300U)
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 130              		.loc 2 531 0 is_stmt 1
 131 0036 4FF40033 		mov	r3, #131072
 132              		.syntax unified
 133              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 134 003a 93FAA3F3 		rbit r3, r3
 135              	@ 0 "" 2
 136              	.LVL3:
 137              		.thumb
 138              		.syntax unified
 139              	.LBE167:
 140              	.LBE166:
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 141              		.loc 1 294 0
 142 003e AA4B     		ldr	r3, .L95
 143 0040 1968     		ldr	r1, [r3]
 144              	.LVL4:
 145              	.LBB168:
 146              	.LBB169:
 147              		.loc 2 531 0
ARM GAS  /tmp/ccEZ8umi.s 			page 18


 148 0042 4FF40033 		mov	r3, #131072
 149              		.syntax unified
 150              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 151 0046 93FAA3F3 		rbit r3, r3
 152              	@ 0 "" 2
 153              	.LVL5:
 154              		.thumb
 155              		.syntax unified
 156              	.LBE169:
 157              	.LBE168:
 158              		.loc 1 294 0
 159 004a B3FA83F3 		clz	r3, r3
 160 004e 03F01F03 		and	r3, r3, #31
 161 0052 0122     		movs	r2, #1
 162 0054 02FA03F3 		lsl	r3, r2, r3
 163 0058 1942     		tst	r1, r3
 164 005a 71D0     		beq	.L5
 165              		.loc 1 294 0 is_stmt 0 discriminator 13
 166 005c 6368     		ldr	r3, [r4, #4]
 167 005e 002B     		cmp	r3, #0
 168 0060 6ED1     		bne	.L5
 169 0062 BAE2     		b	.L77
 170              	.L7:
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 171              		.loc 1 302 0 is_stmt 1
 172 0064 6368     		ldr	r3, [r4, #4]
 173 0066 B3F5803F 		cmp	r3, #65536
 174 006a 05D1     		bne	.L11
 175              		.loc 1 302 0 is_stmt 0 discriminator 1
 176 006c 9E4A     		ldr	r2, .L95
 177 006e 1368     		ldr	r3, [r2]
 178 0070 43F48033 		orr	r3, r3, #65536
 179 0074 1360     		str	r3, [r2]
 180 0076 26E0     		b	.L12
 181              	.L11:
 182              		.loc 1 302 0 discriminator 2
 183 0078 63B9     		cbnz	r3, .L13
 184              		.loc 1 302 0 discriminator 3
 185 007a 03F18043 		add	r3, r3, #1073741824
 186 007e 03F50433 		add	r3, r3, #135168
 187 0082 1A68     		ldr	r2, [r3]
 188 0084 22F48032 		bic	r2, r2, #65536
 189 0088 1A60     		str	r2, [r3]
 190 008a 1A68     		ldr	r2, [r3]
 191 008c 22F48022 		bic	r2, r2, #262144
 192 0090 1A60     		str	r2, [r3]
 193 0092 18E0     		b	.L12
 194              	.L13:
 195              		.loc 1 302 0 discriminator 4
 196 0094 B3F5A02F 		cmp	r3, #327680
ARM GAS  /tmp/ccEZ8umi.s 			page 19


 197 0098 0CD1     		bne	.L14
 198              		.loc 1 302 0 discriminator 5
 199 009a 03F18043 		add	r3, r3, #1073741824
 200 009e A3F53C33 		sub	r3, r3, #192512
 201 00a2 1A68     		ldr	r2, [r3]
 202 00a4 42F48022 		orr	r2, r2, #262144
 203 00a8 1A60     		str	r2, [r3]
 204 00aa 1A68     		ldr	r2, [r3]
 205 00ac 42F48032 		orr	r2, r2, #65536
 206 00b0 1A60     		str	r2, [r3]
 207 00b2 08E0     		b	.L12
 208              	.L14:
 209              		.loc 1 302 0 discriminator 6
 210 00b4 8C4B     		ldr	r3, .L95
 211 00b6 1A68     		ldr	r2, [r3]
 212 00b8 22F48032 		bic	r2, r2, #65536
 213 00bc 1A60     		str	r2, [r3]
 214 00be 1A68     		ldr	r2, [r3]
 215 00c0 22F48022 		bic	r2, r2, #262144
 216 00c4 1A60     		str	r2, [r3]
 217              	.L12:
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Configure the HSE predivision factor --------------------------------*/
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_DIV2 */
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        /* Check the HSE State */
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 218              		.loc 1 310 0 is_stmt 1
 219 00c6 6368     		ldr	r3, [r4, #4]
 220 00c8 EBB1     		cbz	r3, .L15
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 221              		.loc 1 313 0
 222 00ca FFF7FEFF 		bl	HAL_GetTick
 223              	.LVL6:
 224 00ce 0546     		mov	r5, r0
 225              	.LVL7:
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSE is ready */
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 226              		.loc 1 316 0
 227 00d0 05E0     		b	.L16
 228              	.LVL8:
 229              	.L19:
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 230              		.loc 1 318 0
 231 00d2 FFF7FEFF 		bl	HAL_GetTick
 232              	.LVL9:
 233 00d6 401B     		subs	r0, r0, r5
 234 00d8 6428     		cmp	r0, #100
 235 00da 00F28082 		bhi	.L78
 236              	.L16:
 237              	.LVL10:
ARM GAS  /tmp/ccEZ8umi.s 			page 20


 238              	.LBB170:
 239              	.LBB171:
 240              		.loc 2 531 0
 241 00de 4FF40033 		mov	r3, #131072
 242              		.syntax unified
 243              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 244 00e2 93FAA3F3 		rbit r3, r3
 245              	@ 0 "" 2
 246              	.LVL11:
 247              		.thumb
 248              		.syntax unified
 249              	.LBE171:
 250              	.LBE170:
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 251              		.loc 1 316 0
 252 00e6 804B     		ldr	r3, .L95
 253 00e8 1968     		ldr	r1, [r3]
 254              	.LVL12:
 255              	.LBB172:
 256              	.LBB173:
 257              		.loc 2 531 0
 258 00ea 4FF40033 		mov	r3, #131072
 259              		.syntax unified
 260              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 261 00ee 93FAA3F3 		rbit r3, r3
 262              	@ 0 "" 2
 263              	.LVL13:
 264              		.thumb
 265              		.syntax unified
 266              	.LBE173:
 267              	.LBE172:
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 268              		.loc 1 316 0
 269 00f2 B3FA83F3 		clz	r3, r3
 270 00f6 03F01F03 		and	r3, r3, #31
 271 00fa 0122     		movs	r2, #1
 272 00fc 02FA03F3 		lsl	r3, r2, r3
 273 0100 1942     		tst	r1, r3
 274 0102 E6D0     		beq	.L19
 275 0104 1CE0     		b	.L5
 276              	.LVL14:
 277              	.L15:
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 278              		.loc 1 327 0
 279 0106 FFF7FEFF 		bl	HAL_GetTick
 280              	.LVL15:
 281 010a 0546     		mov	r5, r0
 282              	.LVL16:
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
ARM GAS  /tmp/ccEZ8umi.s 			page 21


 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 283              		.loc 1 330 0
 284 010c 05E0     		b	.L20
 285              	.LVL17:
 286              	.L23:
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 287              		.loc 1 332 0
 288 010e FFF7FEFF 		bl	HAL_GetTick
 289              	.LVL18:
 290 0112 401B     		subs	r0, r0, r5
 291 0114 6428     		cmp	r0, #100
 292 0116 00F26482 		bhi	.L79
 293              	.L20:
 294              	.LVL19:
 295              	.LBB174:
 296              	.LBB175:
 297              		.loc 2 531 0
 298 011a 4FF40033 		mov	r3, #131072
 299              		.syntax unified
 300              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 301 011e 93FAA3F3 		rbit r3, r3
 302              	@ 0 "" 2
 303              	.LVL20:
 304              		.thumb
 305              		.syntax unified
 306              	.LBE175:
 307              	.LBE174:
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 308              		.loc 1 330 0
 309 0122 714B     		ldr	r3, .L95
 310 0124 1968     		ldr	r1, [r3]
 311              	.LVL21:
 312              	.LBB176:
 313              	.LBB177:
 314              		.loc 2 531 0
 315 0126 4FF40033 		mov	r3, #131072
 316              		.syntax unified
 317              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 318 012a 93FAA3F3 		rbit r3, r3
 319              	@ 0 "" 2
 320              	.LVL22:
 321              		.thumb
 322              		.syntax unified
 323              	.LBE177:
 324              	.LBE176:
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 325              		.loc 1 330 0
 326 012e B3FA83F3 		clz	r3, r3
 327 0132 03F01F03 		and	r3, r3, #31
 328 0136 0122     		movs	r2, #1
 329 0138 02FA03F3 		lsl	r3, r2, r3
 330 013c 1942     		tst	r1, r3
 331 013e E6D1     		bne	.L23
 332              	.LVL23:
 333              	.L5:
ARM GAS  /tmp/ccEZ8umi.s 			page 22


 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 334              		.loc 1 341 0
 335 0140 2368     		ldr	r3, [r4]
 336 0142 13F0020F 		tst	r3, #2
 337 0146 00F09280 		beq	.L24
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 338              		.loc 1 348 0
 339 014a 674B     		ldr	r3, .L95
 340 014c 5B68     		ldr	r3, [r3, #4]
 341 014e 13F00C0F 		tst	r3, #12
 342 0152 0CD0     		beq	.L25
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 343              		.loc 1 349 0
 344 0154 644B     		ldr	r3, .L95
 345 0156 5B68     		ldr	r3, [r3, #4]
 346 0158 03F00C03 		and	r3, r3, #12
 347 015c 082B     		cmp	r3, #8
 348 015e 29D1     		bne	.L26
 349              		.loc 1 349 0 is_stmt 0 discriminator 1
 350 0160 614B     		ldr	r3, .L95
 351 0162 5B68     		ldr	r3, [r3, #4]
 352 0164 03F4C033 		and	r3, r3, #98304
 353 0168 B3F5004F 		cmp	r3, #32768
 354 016c 22D1     		bne	.L26
 355              	.L25:
 356              	.LVL24:
 357              	.LBB178:
 358              	.LBB179:
 359              		.loc 2 531 0 is_stmt 1
 360 016e 0223     		movs	r3, #2
 361              		.syntax unified
 362              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 363 0170 93FAA3F3 		rbit r3, r3
 364              	@ 0 "" 2
 365              	.LVL25:
 366              		.thumb
 367              		.syntax unified
 368              	.LBE179:
 369              	.LBE178:
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 370              		.loc 1 352 0
ARM GAS  /tmp/ccEZ8umi.s 			page 23


 371 0174 5C4B     		ldr	r3, .L95
 372 0176 1968     		ldr	r1, [r3]
 373              	.LVL26:
 374              	.LBB180:
 375              	.LBB181:
 376              		.loc 2 531 0
 377 0178 0223     		movs	r3, #2
 378              		.syntax unified
 379              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 380 017a 93FAA3F3 		rbit r3, r3
 381              	@ 0 "" 2
 382              	.LVL27:
 383              		.thumb
 384              		.syntax unified
 385              	.LBE181:
 386              	.LBE180:
 387              		.loc 1 352 0
 388 017e B3FA83F3 		clz	r3, r3
 389 0182 03F01F03 		and	r3, r3, #31
 390 0186 0122     		movs	r2, #1
 391 0188 02FA03F3 		lsl	r3, r2, r3
 392 018c 1942     		tst	r1, r3
 393 018e 03D0     		beq	.L29
 394              		.loc 1 352 0 is_stmt 0 discriminator 13
 395 0190 E368     		ldr	r3, [r4, #12]
 396 0192 9342     		cmp	r3, r2
 397 0194 40F02782 		bne	.L80
 398              	.L29:
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 399              		.loc 1 360 0 is_stmt 1
 400 0198 5348     		ldr	r0, .L95
 401 019a 0368     		ldr	r3, [r0]
 402 019c 23F0F801 		bic	r1, r3, #248
 403 01a0 2369     		ldr	r3, [r4, #16]
 404              	.LVL28:
 405              	.LBB182:
 406              	.LBB183:
 407              		.loc 2 531 0
 408 01a2 F822     		movs	r2, #248
 409              		.syntax unified
 410              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 411 01a4 92FAA2F2 		rbit r2, r2
 412              	@ 0 "" 2
 413              	.LVL29:
 414              		.thumb
 415              		.syntax unified
 416              	.LBE183:
 417              	.LBE182:
 418              		.loc 1 360 0
 419 01a8 B2FA82F2 		clz	r2, r2
ARM GAS  /tmp/ccEZ8umi.s 			page 24


 420 01ac 9340     		lsls	r3, r3, r2
 421 01ae 0B43     		orrs	r3, r3, r1
 422 01b0 0360     		str	r3, [r0]
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 423              		.loc 1 352 0
 424 01b2 5CE0     		b	.L24
 425              	.L26:
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the HSI State */
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 426              		.loc 1 366 0
 427 01b4 E368     		ldr	r3, [r4, #12]
 428 01b6 9BB3     		cbz	r3, .L30
 429              	.LVL30:
 430              	.LBB184:
 431              	.LBB185:
 432              		.loc 2 531 0
 433 01b8 0122     		movs	r2, #1
 434              		.syntax unified
 435              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 436 01ba 92FAA2F3 		rbit r3, r2
 437              	@ 0 "" 2
 438              	.LVL31:
 439              		.thumb
 440              		.syntax unified
 441              	.LBE185:
 442              	.LBE184:
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        /* Enable the Internal High Speed oscillator (HSI). */
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 443              		.loc 1 369 0
 444 01be B3FA83F3 		clz	r3, r3
 445 01c2 03F18453 		add	r3, r3, #276824064
 446 01c6 03F58413 		add	r3, r3, #1081344
 447 01ca 9B00     		lsls	r3, r3, #2
 448 01cc 1A60     		str	r2, [r3]
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 449              		.loc 1 372 0
 450 01ce FFF7FEFF 		bl	HAL_GetTick
 451              	.LVL32:
 452 01d2 0546     		mov	r5, r0
 453              	.LVL33:
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSI is ready */
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 454              		.loc 1 375 0
 455 01d4 05E0     		b	.L31
 456              	.LVL34:
 457              	.L34:
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 458              		.loc 1 377 0
ARM GAS  /tmp/ccEZ8umi.s 			page 25


 459 01d6 FFF7FEFF 		bl	HAL_GetTick
 460              	.LVL35:
 461 01da 401B     		subs	r0, r0, r5
 462 01dc 0228     		cmp	r0, #2
 463 01de 00F20482 		bhi	.L81
 464              	.L31:
 465              	.LVL36:
 466              	.LBB186:
 467              	.LBB187:
 468              		.loc 2 531 0
 469 01e2 0223     		movs	r3, #2
 470              		.syntax unified
 471              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 472 01e4 93FAA3F3 		rbit r3, r3
 473              	@ 0 "" 2
 474              	.LVL37:
 475              		.thumb
 476              		.syntax unified
 477              	.LBE187:
 478              	.LBE186:
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 479              		.loc 1 375 0
 480 01e8 3F4B     		ldr	r3, .L95
 481 01ea 1968     		ldr	r1, [r3]
 482              	.LVL38:
 483              	.LBB188:
 484              	.LBB189:
 485              		.loc 2 531 0
 486 01ec 0223     		movs	r3, #2
 487              		.syntax unified
 488              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 489 01ee 93FAA3F3 		rbit r3, r3
 490              	@ 0 "" 2
 491              	.LVL39:
 492              		.thumb
 493              		.syntax unified
 494              	.LBE189:
 495              	.LBE188:
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 496              		.loc 1 375 0
 497 01f2 B3FA83F3 		clz	r3, r3
 498 01f6 03F01F03 		and	r3, r3, #31
 499 01fa 0122     		movs	r2, #1
 500 01fc 02FA03F3 		lsl	r3, r2, r3
 501 0200 1942     		tst	r1, r3
 502 0202 E8D0     		beq	.L34
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                 
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 503              		.loc 1 384 0
 504 0204 3848     		ldr	r0, .L95
 505 0206 0368     		ldr	r3, [r0]
 506 0208 23F0F801 		bic	r1, r3, #248
ARM GAS  /tmp/ccEZ8umi.s 			page 26


 507 020c 2369     		ldr	r3, [r4, #16]
 508              	.LVL40:
 509              	.LBB190:
 510              	.LBB191:
 511              		.loc 2 531 0
 512 020e F822     		movs	r2, #248
 513              		.syntax unified
 514              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 515 0210 92FAA2F2 		rbit r2, r2
 516              	@ 0 "" 2
 517              	.LVL41:
 518              		.thumb
 519              		.syntax unified
 520              	.LBE191:
 521              	.LBE190:
 522              		.loc 1 384 0
 523 0214 B2FA82F2 		clz	r2, r2
 524 0218 9340     		lsls	r3, r3, r2
 525 021a 0B43     		orrs	r3, r3, r1
 526 021c 0360     		str	r3, [r0]
 527 021e 26E0     		b	.L24
 528              	.LVL42:
 529              	.L30:
 530              	.LBB192:
 531              	.LBB193:
 532              		.loc 2 531 0
 533 0220 0123     		movs	r3, #1
 534              		.syntax unified
 535              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 536 0222 93FAA3F3 		rbit r3, r3
 537              	@ 0 "" 2
 538              	.LVL43:
 539              		.thumb
 540              		.syntax unified
 541              	.LBE193:
 542              	.LBE192:
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 543              		.loc 1 389 0
 544 0226 B3FA83F3 		clz	r3, r3
 545 022a 03F18453 		add	r3, r3, #276824064
 546 022e 03F58413 		add	r3, r3, #1081344
 547 0232 9B00     		lsls	r3, r3, #2
 548 0234 0022     		movs	r2, #0
 549 0236 1A60     		str	r2, [r3]
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 550              		.loc 1 392 0
 551 0238 FFF7FEFF 		bl	HAL_GetTick
 552              	.LVL44:
 553 023c 0546     		mov	r5, r0
 554              	.LVL45:
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
ARM GAS  /tmp/ccEZ8umi.s 			page 27


 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 555              		.loc 1 395 0
 556 023e 05E0     		b	.L35
 557              	.LVL46:
 558              	.L38:
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 559              		.loc 1 397 0
 560 0240 FFF7FEFF 		bl	HAL_GetTick
 561              	.LVL47:
 562 0244 401B     		subs	r0, r0, r5
 563 0246 0228     		cmp	r0, #2
 564 0248 00F2D181 		bhi	.L82
 565              	.L35:
 566              	.LVL48:
 567              	.LBB194:
 568              	.LBB195:
 569              		.loc 2 531 0
 570 024c 0223     		movs	r3, #2
 571              		.syntax unified
 572              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 573 024e 93FAA3F3 		rbit r3, r3
 574              	@ 0 "" 2
 575              	.LVL49:
 576              		.thumb
 577              		.syntax unified
 578              	.LBE195:
 579              	.LBE194:
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 580              		.loc 1 395 0
 581 0252 254B     		ldr	r3, .L95
 582 0254 1968     		ldr	r1, [r3]
 583              	.LVL50:
 584              	.LBB196:
 585              	.LBB197:
 586              		.loc 2 531 0
 587 0256 0223     		movs	r3, #2
 588              		.syntax unified
 589              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 590 0258 93FAA3F3 		rbit r3, r3
 591              	@ 0 "" 2
 592              	.LVL51:
 593              		.thumb
 594              		.syntax unified
 595              	.LBE197:
 596              	.LBE196:
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 597              		.loc 1 395 0
 598 025c B3FA83F3 		clz	r3, r3
 599 0260 03F01F03 		and	r3, r3, #31
 600 0264 0122     		movs	r2, #1
 601 0266 02FA03F3 		lsl	r3, r2, r3
 602 026a 1942     		tst	r1, r3
 603 026c E8D1     		bne	.L38
 604              	.LVL52:
 605              	.L24:
ARM GAS  /tmp/ccEZ8umi.s 			page 28


 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 606              		.loc 1 406 0
 607 026e 2368     		ldr	r3, [r4]
 608 0270 13F0080F 		tst	r3, #8
 609 0274 56D0     		beq	.L39
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSI State */
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 610              		.loc 1 412 0
 611 0276 6369     		ldr	r3, [r4, #20]
 612 0278 3BB3     		cbz	r3, .L40
 613              	.LVL53:
 614              	.LBB198:
 615              	.LBB199:
 616              		.loc 2 531 0
 617 027a 0121     		movs	r1, #1
 618              		.syntax unified
 619              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 620 027c 91FAA1F2 		rbit r2, r1
 621              	@ 0 "" 2
 622              	.LVL54:
 623              		.thumb
 624              		.syntax unified
 625              	.LBE199:
 626              	.LBE198:
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 627              		.loc 1 415 0
 628 0280 B2FA82F2 		clz	r2, r2
 629 0284 194B     		ldr	r3, .L95+4
 630 0286 1344     		add	r3, r3, r2
 631 0288 9B00     		lsls	r3, r3, #2
 632 028a 1960     		str	r1, [r3]
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 633              		.loc 1 418 0
 634 028c FFF7FEFF 		bl	HAL_GetTick
 635              	.LVL55:
 636 0290 0546     		mov	r5, r0
 637              	.LVL56:
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSI is ready */  
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 638              		.loc 1 421 0
ARM GAS  /tmp/ccEZ8umi.s 			page 29


 639 0292 05E0     		b	.L41
 640              	.LVL57:
 641              	.L42:
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 642              		.loc 1 423 0
 643 0294 FFF7FEFF 		bl	HAL_GetTick
 644              	.LVL58:
 645 0298 401B     		subs	r0, r0, r5
 646 029a 0228     		cmp	r0, #2
 647 029c 00F2A981 		bhi	.L83
 648              	.L41:
 649              	.LVL59:
 650              	.LBB200:
 651              	.LBB201:
 652              		.loc 2 531 0
 653 02a0 0223     		movs	r3, #2
 654              		.syntax unified
 655              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 656 02a2 93FAA3F2 		rbit r2, r3
 657              	@ 0 "" 2
 658              	.LVL60:
 659              		.thumb
 660              		.syntax unified
 661              	.LBE201:
 662              	.LBE200:
 663              	.LBB202:
 664              	.LBB203:
 665              		.syntax unified
 666              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 667 02a6 93FAA3F2 		rbit r2, r3
 668              	@ 0 "" 2
 669              	.LVL61:
 670              		.thumb
 671              		.syntax unified
 672              	.LBE203:
 673              	.LBE202:
 674              	.LBB204:
 675              	.LBB205:
 676              		.syntax unified
 677              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 678 02aa 93FAA3F2 		rbit r2, r3
 679              	@ 0 "" 2
 680              	.LVL62:
 681              		.thumb
 682              		.syntax unified
 683              	.LBE205:
 684              	.LBE204:
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 685              		.loc 1 421 0
 686 02ae 0E4A     		ldr	r2, .L95
 687 02b0 516A     		ldr	r1, [r2, #36]
 688              	.LVL63:
 689              	.LBB206:
 690              	.LBB207:
 691              		.loc 2 531 0
 692              		.syntax unified
ARM GAS  /tmp/ccEZ8umi.s 			page 30


 693              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 694 02b2 93FAA3F3 		rbit r3, r3
 695              	@ 0 "" 2
 696              	.LVL64:
 697              		.thumb
 698              		.syntax unified
 699              	.LBE207:
 700              	.LBE206:
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 701              		.loc 1 421 0
 702 02b6 B3FA83F3 		clz	r3, r3
 703 02ba 03F01F03 		and	r3, r3, #31
 704 02be 0122     		movs	r2, #1
 705 02c0 02FA03F3 		lsl	r3, r2, r3
 706 02c4 1942     		tst	r1, r3
 707 02c6 E5D0     		beq	.L42
 708 02c8 2CE0     		b	.L39
 709              	.LVL65:
 710              	.L40:
 711              	.LBB208:
 712              	.LBB209:
 713              		.loc 2 531 0
 714 02ca 0122     		movs	r2, #1
 715              		.syntax unified
 716              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 717 02cc 92FAA2F2 		rbit r2, r2
 718              	@ 0 "" 2
 719              	.LVL66:
 720              		.thumb
 721              		.syntax unified
 722              	.LBE209:
 723              	.LBE208:
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 724              		.loc 1 432 0
 725 02d0 B2FA82F2 		clz	r2, r2
 726 02d4 054B     		ldr	r3, .L95+4
 727 02d6 1344     		add	r3, r3, r2
 728 02d8 9B00     		lsls	r3, r3, #2
 729 02da 0022     		movs	r2, #0
 730 02dc 1A60     		str	r2, [r3]
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 731              		.loc 1 435 0
 732 02de FFF7FEFF 		bl	HAL_GetTick
 733              	.LVL67:
 734 02e2 0546     		mov	r5, r0
 735              	.LVL68:
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
ARM GAS  /tmp/ccEZ8umi.s 			page 31


 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSI is disabled */  
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 736              		.loc 1 438 0
 737 02e4 0AE0     		b	.L43
 738              	.L96:
 739 02e6 00BF     		.align	2
 740              	.L95:
 741 02e8 00100240 		.word	1073876992
 742 02ec 20819010 		.word	277905696
 743              	.LVL69:
 744              	.L44:
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 745              		.loc 1 440 0
 746 02f0 FFF7FEFF 		bl	HAL_GetTick
 747              	.LVL70:
 748 02f4 401B     		subs	r0, r0, r5
 749 02f6 0228     		cmp	r0, #2
 750 02f8 00F27D81 		bhi	.L84
 751              	.L43:
 752              	.LVL71:
 753              	.LBB210:
 754              	.LBB211:
 755              		.loc 2 531 0
 756 02fc 0223     		movs	r3, #2
 757              		.syntax unified
 758              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 759 02fe 93FAA3F2 		rbit r2, r3
 760              	@ 0 "" 2
 761              	.LVL72:
 762              		.thumb
 763              		.syntax unified
 764              	.LBE211:
 765              	.LBE210:
 766              	.LBB212:
 767              	.LBB213:
 768              		.syntax unified
 769              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 770 0302 93FAA3F2 		rbit r2, r3
 771              	@ 0 "" 2
 772              	.LVL73:
 773              		.thumb
 774              		.syntax unified
 775              	.LBE213:
 776              	.LBE212:
 777              	.LBB214:
 778              	.LBB215:
 779              		.syntax unified
 780              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 781 0306 93FAA3F2 		rbit r2, r3
 782              	@ 0 "" 2
 783              	.LVL74:
 784              		.thumb
 785              		.syntax unified
 786              	.LBE215:
 787              	.LBE214:
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
ARM GAS  /tmp/ccEZ8umi.s 			page 32


 788              		.loc 1 438 0
 789 030a BE4A     		ldr	r2, .L97
 790 030c 516A     		ldr	r1, [r2, #36]
 791              	.LVL75:
 792              	.LBB216:
 793              	.LBB217:
 794              		.loc 2 531 0
 795              		.syntax unified
 796              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 797 030e 93FAA3F3 		rbit r3, r3
 798              	@ 0 "" 2
 799              	.LVL76:
 800              		.thumb
 801              		.syntax unified
 802              	.LBE217:
 803              	.LBE216:
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 804              		.loc 1 438 0
 805 0312 B3FA83F3 		clz	r3, r3
 806 0316 03F01F03 		and	r3, r3, #31
 807 031a 0122     		movs	r2, #1
 808 031c 02FA03F3 		lsl	r3, r2, r3
 809 0320 1942     		tst	r1, r3
 810 0322 E5D1     		bne	.L44
 811              	.LVL77:
 812              	.L39:
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 813              		.loc 1 448 0
 814 0324 2368     		ldr	r3, [r4]
 815 0326 13F0040F 		tst	r3, #4
 816 032a 00F0BA80 		beq	.L45
 817              	.LVL78:
 818              	.LBB218:
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 819              		.loc 1 457 0
 820 032e B54B     		ldr	r3, .L97
 821 0330 DB69     		ldr	r3, [r3, #28]
 822 0332 13F0805F 		tst	r3, #268435456
 823 0336 0BD1     		bne	.L85
 824              	.LBB219:
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
ARM GAS  /tmp/ccEZ8umi.s 			page 33


 825              		.loc 1 459 0
 826 0338 B24B     		ldr	r3, .L97
 827 033a DA69     		ldr	r2, [r3, #28]
 828 033c 42F08052 		orr	r2, r2, #268435456
 829 0340 DA61     		str	r2, [r3, #28]
 830 0342 DB69     		ldr	r3, [r3, #28]
 831 0344 03F08053 		and	r3, r3, #268435456
 832 0348 0193     		str	r3, [sp, #4]
 833 034a 019B     		ldr	r3, [sp, #4]
 834              	.LVL79:
 835              	.LBE219:
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       pwrclkchanged = SET;
 836              		.loc 1 460 0
 837 034c 0125     		movs	r5, #1
 838 034e 00E0     		b	.L46
 839              	.LVL80:
 840              	.L85:
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 841              		.loc 1 450 0
 842 0350 0025     		movs	r5, #0
 843              	.LVL81:
 844              	.L46:
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 845              		.loc 1 463 0
 846 0352 AD4B     		ldr	r3, .L97+4
 847 0354 1B68     		ldr	r3, [r3]
 848 0356 13F4807F 		tst	r3, #256
 849 035a 13D1     		bne	.L47
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 850              		.loc 1 466 0
 851 035c AA4A     		ldr	r2, .L97+4
 852 035e 1368     		ldr	r3, [r2]
 853 0360 43F48073 		orr	r3, r3, #256
 854 0364 1360     		str	r3, [r2]
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 855              		.loc 1 469 0
 856 0366 FFF7FEFF 		bl	HAL_GetTick
 857              	.LVL82:
 858 036a 0646     		mov	r6, r0
 859              	.LVL83:
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 860              		.loc 1 471 0
 861 036c 05E0     		b	.L48
 862              	.LVL84:
 863              	.L49:
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 864              		.loc 1 473 0
 865 036e FFF7FEFF 		bl	HAL_GetTick
 866              	.LVL85:
ARM GAS  /tmp/ccEZ8umi.s 			page 34


 867 0372 801B     		subs	r0, r0, r6
 868 0374 6428     		cmp	r0, #100
 869 0376 00F24081 		bhi	.L86
 870              	.L48:
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 871              		.loc 1 471 0
 872 037a A34B     		ldr	r3, .L97+4
 873 037c 1B68     		ldr	r3, [r3]
 874 037e 13F4807F 		tst	r3, #256
 875 0382 F4D0     		beq	.L49
 876              	.LVL86:
 877              	.L47:
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 878              		.loc 1 481 0
 879 0384 A368     		ldr	r3, [r4, #8]
 880 0386 012B     		cmp	r3, #1
 881 0388 05D1     		bne	.L50
 882              		.loc 1 481 0 is_stmt 0 discriminator 1
 883 038a 9E4A     		ldr	r2, .L97
 884 038c 136A     		ldr	r3, [r2, #32]
 885 038e 43F00103 		orr	r3, r3, #1
 886 0392 1362     		str	r3, [r2, #32]
 887 0394 22E0     		b	.L51
 888              	.L50:
 889              		.loc 1 481 0 discriminator 2
 890 0396 63B9     		cbnz	r3, .L52
 891              		.loc 1 481 0 discriminator 3
 892 0398 03F18043 		add	r3, r3, #1073741824
 893 039c 03F50433 		add	r3, r3, #135168
 894 03a0 1A6A     		ldr	r2, [r3, #32]
 895 03a2 22F00102 		bic	r2, r2, #1
 896 03a6 1A62     		str	r2, [r3, #32]
 897 03a8 1A6A     		ldr	r2, [r3, #32]
 898 03aa 22F00402 		bic	r2, r2, #4
 899 03ae 1A62     		str	r2, [r3, #32]
 900 03b0 14E0     		b	.L51
 901              	.L52:
 902              		.loc 1 481 0 discriminator 4
 903 03b2 052B     		cmp	r3, #5
 904 03b4 09D1     		bne	.L53
 905              		.loc 1 481 0 discriminator 5
 906 03b6 934B     		ldr	r3, .L97
 907 03b8 1A6A     		ldr	r2, [r3, #32]
 908 03ba 42F00402 		orr	r2, r2, #4
 909 03be 1A62     		str	r2, [r3, #32]
 910 03c0 1A6A     		ldr	r2, [r3, #32]
 911 03c2 42F00102 		orr	r2, r2, #1
 912 03c6 1A62     		str	r2, [r3, #32]
 913 03c8 08E0     		b	.L51
 914              	.L53:
ARM GAS  /tmp/ccEZ8umi.s 			page 35


 915              		.loc 1 481 0 discriminator 6
 916 03ca 8E4B     		ldr	r3, .L97
 917 03cc 1A6A     		ldr	r2, [r3, #32]
 918 03ce 22F00102 		bic	r2, r2, #1
 919 03d2 1A62     		str	r2, [r3, #32]
 920 03d4 1A6A     		ldr	r2, [r3, #32]
 921 03d6 22F00402 		bic	r2, r2, #4
 922 03da 1A62     		str	r2, [r3, #32]
 923              	.L51:
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSE State */
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 924              		.loc 1 483 0 is_stmt 1
 925 03dc A368     		ldr	r3, [r4, #8]
 926 03de 6BB3     		cbz	r3, .L54
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 927              		.loc 1 486 0
 928 03e0 FFF7FEFF 		bl	HAL_GetTick
 929              	.LVL87:
 930 03e4 0646     		mov	r6, r0
 931              	.LVL88:
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSE is ready */  
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 932              		.loc 1 489 0
 933 03e6 07E0     		b	.L55
 934              	.LVL89:
 935              	.L58:
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 936              		.loc 1 491 0
 937 03e8 FFF7FEFF 		bl	HAL_GetTick
 938              	.LVL90:
 939 03ec 801B     		subs	r0, r0, r6
 940 03ee 41F28833 		movw	r3, #5000
 941 03f2 9842     		cmp	r0, r3
 942 03f4 00F20381 		bhi	.L87
 943              	.L55:
 944              	.LVL91:
 945              	.LBB220:
 946              	.LBB221:
 947              		.loc 2 531 0
 948 03f8 0223     		movs	r3, #2
 949              		.syntax unified
 950              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 951 03fa 93FAA3F2 		rbit r2, r3
 952              	@ 0 "" 2
 953              	.LVL92:
 954              		.thumb
 955              		.syntax unified
 956              	.LBE221:
 957              	.LBE220:
 958              	.LBB222:
 959              	.LBB223:
 960              		.syntax unified
 961              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccEZ8umi.s 			page 36


 962 03fe 93FAA3F3 		rbit r3, r3
 963              	@ 0 "" 2
 964              	.LVL93:
 965              		.thumb
 966              		.syntax unified
 967              	.LBE223:
 968              	.LBE222:
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 969              		.loc 1 489 0
 970 0402 B3FA83F3 		clz	r3, r3
 971 0406 5B09     		lsrs	r3, r3, #5
 972 0408 43F00203 		orr	r3, r3, #2
 973 040c DBB2     		uxtb	r3, r3
 974 040e 022B     		cmp	r3, #2
 975 0410 02D1     		bne	.L56
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 976              		.loc 1 489 0 is_stmt 0 discriminator 4
 977 0412 7C4B     		ldr	r3, .L97
 978 0414 196A     		ldr	r1, [r3, #32]
 979 0416 04E0     		b	.L57
 980              	.L56:
 981              	.LVL94:
 982              	.LBB224:
 983              	.LBB225:
 984              		.loc 2 531 0 is_stmt 1
 985 0418 0223     		movs	r3, #2
 986              		.syntax unified
 987              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 988 041a 93FAA3F3 		rbit r3, r3
 989              	@ 0 "" 2
 990              	.LVL95:
 991              		.thumb
 992              		.syntax unified
 993              	.LBE225:
 994              	.LBE224:
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 995              		.loc 1 489 0
 996 041e 794B     		ldr	r3, .L97
 997 0420 596A     		ldr	r1, [r3, #36]
 998              	.L57:
 999              	.LVL96:
 1000              	.LBB226:
 1001              	.LBB227:
 1002              		.loc 2 531 0 discriminator 11
 1003 0422 0223     		movs	r3, #2
 1004              		.syntax unified
 1005              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1006 0424 93FAA3F3 		rbit r3, r3
 1007              	@ 0 "" 2
 1008              	.LVL97:
 1009              		.thumb
 1010              		.syntax unified
 1011              	.LBE227:
 1012              	.LBE226:
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1013              		.loc 1 489 0 discriminator 11
 1014 0428 B3FA83F3 		clz	r3, r3
ARM GAS  /tmp/ccEZ8umi.s 			page 37


 1015 042c 03F01F03 		and	r3, r3, #31
 1016 0430 0122     		movs	r2, #1
 1017 0432 02FA03F3 		lsl	r3, r2, r3
 1018 0436 1942     		tst	r1, r3
 1019 0438 D6D0     		beq	.L58
 1020 043a 2CE0     		b	.L59
 1021              	.LVL98:
 1022              	.L54:
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1023              		.loc 1 500 0
 1024 043c FFF7FEFF 		bl	HAL_GetTick
 1025              	.LVL99:
 1026 0440 0646     		mov	r6, r0
 1027              	.LVL100:
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSE is disabled */  
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 1028              		.loc 1 503 0
 1029 0442 07E0     		b	.L60
 1030              	.LVL101:
 1031              	.L63:
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 1032              		.loc 1 505 0
 1033 0444 FFF7FEFF 		bl	HAL_GetTick
 1034              	.LVL102:
 1035 0448 801B     		subs	r0, r0, r6
 1036 044a 41F28833 		movw	r3, #5000
 1037 044e 9842     		cmp	r0, r3
 1038 0450 00F2DC80 		bhi	.L88
 1039              	.L60:
 1040              	.LVL103:
 1041              	.LBB228:
 1042              	.LBB229:
 1043              		.loc 2 531 0
 1044 0454 0223     		movs	r3, #2
 1045              		.syntax unified
 1046              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1047 0456 93FAA3F2 		rbit r2, r3
 1048              	@ 0 "" 2
 1049              	.LVL104:
 1050              		.thumb
 1051              		.syntax unified
 1052              	.LBE229:
 1053              	.LBE228:
 1054              	.LBB230:
 1055              	.LBB231:
 1056              		.syntax unified
 1057              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccEZ8umi.s 			page 38


 1058 045a 93FAA3F3 		rbit r3, r3
 1059              	@ 0 "" 2
 1060              	.LVL105:
 1061              		.thumb
 1062              		.syntax unified
 1063              	.LBE231:
 1064              	.LBE230:
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1065              		.loc 1 503 0
 1066 045e B3FA83F3 		clz	r3, r3
 1067 0462 5B09     		lsrs	r3, r3, #5
 1068 0464 43F00203 		orr	r3, r3, #2
 1069 0468 DBB2     		uxtb	r3, r3
 1070 046a 022B     		cmp	r3, #2
 1071 046c 02D1     		bne	.L61
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1072              		.loc 1 503 0 is_stmt 0 discriminator 4
 1073 046e 654B     		ldr	r3, .L97
 1074 0470 196A     		ldr	r1, [r3, #32]
 1075 0472 04E0     		b	.L62
 1076              	.L61:
 1077              	.LVL106:
 1078              	.LBB232:
 1079              	.LBB233:
 1080              		.loc 2 531 0 is_stmt 1
 1081 0474 0223     		movs	r3, #2
 1082              		.syntax unified
 1083              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1084 0476 93FAA3F3 		rbit r3, r3
 1085              	@ 0 "" 2
 1086              	.LVL107:
 1087              		.thumb
 1088              		.syntax unified
 1089              	.LBE233:
 1090              	.LBE232:
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1091              		.loc 1 503 0
 1092 047a 624B     		ldr	r3, .L97
 1093 047c 596A     		ldr	r1, [r3, #36]
 1094              	.L62:
 1095              	.LVL108:
 1096              	.LBB234:
 1097              	.LBB235:
 1098              		.loc 2 531 0 discriminator 11
 1099 047e 0223     		movs	r3, #2
 1100              		.syntax unified
 1101              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1102 0480 93FAA3F3 		rbit r3, r3
 1103              	@ 0 "" 2
 1104              	.LVL109:
 1105              		.thumb
 1106              		.syntax unified
 1107              	.LBE235:
 1108              	.LBE234:
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1109              		.loc 1 503 0 discriminator 11
 1110 0484 B3FA83F3 		clz	r3, r3
ARM GAS  /tmp/ccEZ8umi.s 			page 39


 1111 0488 03F01F03 		and	r3, r3, #31
 1112 048c 0122     		movs	r2, #1
 1113 048e 02FA03F3 		lsl	r3, r2, r3
 1114 0492 1942     		tst	r1, r3
 1115 0494 D6D1     		bne	.L63
 1116              	.L59:
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Require to disable power clock if necessary */
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 1117              		.loc 1 513 0
 1118 0496 25B1     		cbz	r5, .L45
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 1119              		.loc 1 515 0
 1120 0498 5A4A     		ldr	r2, .L97
 1121 049a D369     		ldr	r3, [r2, #28]
 1122 049c 23F08053 		bic	r3, r3, #268435456
 1123 04a0 D361     		str	r3, [r2, #28]
 1124              	.LVL110:
 1125              	.L45:
 1126              	.LBE218:
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 1127              		.loc 1 522 0
 1128 04a2 A369     		ldr	r3, [r4, #24]
 1129 04a4 002B     		cmp	r3, #0
 1130 04a6 00F0B380 		beq	.L89
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 1131              		.loc 1 525 0
 1132 04aa 564A     		ldr	r2, .L97
 1133 04ac 5268     		ldr	r2, [r2, #4]
 1134 04ae 02F00C02 		and	r2, r2, #12
 1135 04b2 082A     		cmp	r2, #8
 1136 04b4 00F0AE80 		beq	.L90
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     { 
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 1137              		.loc 1 527 0
 1138 04b8 022B     		cmp	r3, #2
 1139 04ba 63D1     		bne	.L64
 1140              	.LVL111:
 1141              	.LBB236:
 1142              	.LBB237:
 1143              		.loc 2 531 0
 1144 04bc 4FF08073 		mov	r3, #16777216
 1145              		.syntax unified
ARM GAS  /tmp/ccEZ8umi.s 			page 40


 1146              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1147 04c0 93FAA3F3 		rbit r3, r3
 1148              	@ 0 "" 2
 1149              	.LVL112:
 1150              		.thumb
 1151              		.syntax unified
 1152              	.LBE237:
 1153              	.LBE236:
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Check the parameters */
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Disable the main PLL. */
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1154              		.loc 1 537 0
 1155 04c4 B3FA83F3 		clz	r3, r3
 1156 04c8 03F18453 		add	r3, r3, #276824064
 1157 04cc 03F58413 		add	r3, r3, #1081344
 1158 04d0 9B00     		lsls	r3, r3, #2
 1159 04d2 0022     		movs	r2, #0
 1160 04d4 1A60     		str	r2, [r3]
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1161              		.loc 1 540 0
 1162 04d6 FFF7FEFF 		bl	HAL_GetTick
 1163              	.LVL113:
 1164 04da 0546     		mov	r5, r0
 1165              	.LVL114:
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 1166              		.loc 1 543 0
 1167 04dc 05E0     		b	.L65
 1168              	.LVL115:
 1169              	.L68:
 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1170              		.loc 1 545 0
 1171 04de FFF7FEFF 		bl	HAL_GetTick
 1172              	.LVL116:
 1173 04e2 401B     		subs	r0, r0, r5
 1174 04e4 0228     		cmp	r0, #2
 1175 04e6 00F29780 		bhi	.L91
 1176              	.L65:
 1177              	.LVL117:
 1178              	.LBB238:
 1179              	.LBB239:
 1180              		.loc 2 531 0
 1181 04ea 4FF00073 		mov	r3, #33554432
 1182              		.syntax unified
 1183              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1184 04ee 93FAA3F3 		rbit r3, r3
ARM GAS  /tmp/ccEZ8umi.s 			page 41


 1185              	@ 0 "" 2
 1186              	.LVL118:
 1187              		.thumb
 1188              		.syntax unified
 1189              	.LBE239:
 1190              	.LBE238:
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1191              		.loc 1 543 0
 1192 04f2 444B     		ldr	r3, .L97
 1193 04f4 1968     		ldr	r1, [r3]
 1194              	.LVL119:
 1195              	.LBB240:
 1196              	.LBB241:
 1197              		.loc 2 531 0
 1198 04f6 4FF00073 		mov	r3, #33554432
 1199              		.syntax unified
 1200              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1201 04fa 93FAA3F3 		rbit r3, r3
 1202              	@ 0 "" 2
 1203              	.LVL120:
 1204              		.thumb
 1205              		.syntax unified
 1206              	.LBE241:
 1207              	.LBE240:
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1208              		.loc 1 543 0
 1209 04fe B3FA83F3 		clz	r3, r3
 1210 0502 03F01F03 		and	r3, r3, #31
 1211 0506 0122     		movs	r2, #1
 1212 0508 02FA03F3 		lsl	r3, r2, r3
 1213 050c 1942     		tst	r1, r3
 1214 050e E6D1     		bne	.L68
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Configure the main PLL clock source, predivider and multiplication factor. */
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 1215              		.loc 1 553 0
 1216 0510 3C49     		ldr	r1, .L97
 1217 0512 CB6A     		ldr	r3, [r1, #44]
 1218 0514 23F00F02 		bic	r2, r3, #15
 1219 0518 636A     		ldr	r3, [r4, #36]
 1220 051a 1343     		orrs	r3, r3, r2
 1221 051c CB62     		str	r3, [r1, #44]
 1222 051e 4B68     		ldr	r3, [r1, #4]
 1223 0520 23F47610 		bic	r0, r3, #4030464
 1224 0524 236A     		ldr	r3, [r4, #32]
 1225 0526 E269     		ldr	r2, [r4, #28]
 1226 0528 1343     		orrs	r3, r3, r2
 1227 052a 0343     		orrs	r3, r3, r0
 1228 052c 4B60     		str	r3, [r1, #4]
 1229              	.LVL121:
 1230              	.LBB242:
 1231              	.LBB243:
ARM GAS  /tmp/ccEZ8umi.s 			page 42


 1232              		.loc 2 531 0
 1233 052e 4FF08073 		mov	r3, #16777216
 1234              		.syntax unified
 1235              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1236 0532 93FAA3F3 		rbit r3, r3
 1237              	@ 0 "" 2
 1238              	.LVL122:
 1239              		.thumb
 1240              		.syntax unified
 1241              	.LBE243:
 1242              	.LBE242:
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Configure the main PLL clock source and multiplication factor. */
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                            RCC_OscInitStruct->PLL.PLLMUL);
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_PREDIV */
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Enable the main PLL. */
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 1243              		.loc 1 562 0
 1244 0536 B3FA83F3 		clz	r3, r3
 1245 053a 03F18453 		add	r3, r3, #276824064
 1246 053e 03F58413 		add	r3, r3, #1081344
 1247 0542 9B00     		lsls	r3, r3, #2
 1248 0544 0122     		movs	r2, #1
 1249 0546 1A60     		str	r2, [r3]
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1250              		.loc 1 565 0
 1251 0548 FFF7FEFF 		bl	HAL_GetTick
 1252              	.LVL123:
 1253 054c 0446     		mov	r4, r0
 1254              	.LVL124:
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till PLL is ready */
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 1255              		.loc 1 568 0
 1256 054e 04E0     		b	.L69
 1257              	.LVL125:
 1258              	.L72:
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1259              		.loc 1 570 0
 1260 0550 FFF7FEFF 		bl	HAL_GetTick
 1261              	.LVL126:
 1262 0554 001B     		subs	r0, r0, r4
 1263 0556 0228     		cmp	r0, #2
 1264 0558 60D8     		bhi	.L92
 1265              	.L69:
 1266              	.LVL127:
 1267              	.LBB244:
 1268              	.LBB245:
 1269              		.loc 2 531 0
 1270 055a 4FF00073 		mov	r3, #33554432
 1271              		.syntax unified
ARM GAS  /tmp/ccEZ8umi.s 			page 43


 1272              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1273 055e 93FAA3F3 		rbit r3, r3
 1274              	@ 0 "" 2
 1275              	.LVL128:
 1276              		.thumb
 1277              		.syntax unified
 1278              	.LBE245:
 1279              	.LBE244:
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1280              		.loc 1 568 0
 1281 0562 284B     		ldr	r3, .L97
 1282 0564 1968     		ldr	r1, [r3]
 1283              	.LVL129:
 1284              	.LBB246:
 1285              	.LBB247:
 1286              		.loc 2 531 0
 1287 0566 4FF00073 		mov	r3, #33554432
 1288              		.syntax unified
 1289              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1290 056a 93FAA3F3 		rbit r3, r3
 1291              	@ 0 "" 2
 1292              	.LVL130:
 1293              		.thumb
 1294              		.syntax unified
 1295              	.LBE247:
 1296              	.LBE246:
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1297              		.loc 1 568 0
 1298 056e B3FA83F3 		clz	r3, r3
 1299 0572 03F01F03 		and	r3, r3, #31
 1300 0576 0122     		movs	r2, #1
 1301 0578 02FA03F3 		lsl	r3, r2, r3
 1302 057c 1942     		tst	r1, r3
 1303 057e E7D0     		beq	.L72
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Disable the main PLL. */
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till PLL is disabled */  
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
ARM GAS  /tmp/ccEZ8umi.s 			page 44


 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_ERROR;
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return HAL_OK;
 1304              		.loc 1 600 0
 1305 0580 0020     		movs	r0, #0
 1306 0582 4EE0     		b	.L10
 1307              	.LVL131:
 1308              	.L64:
 1309              	.LBB248:
 1310              	.LBB249:
 1311              		.loc 2 531 0
 1312 0584 4FF08073 		mov	r3, #16777216
 1313              		.syntax unified
 1314              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1315 0588 93FAA3F3 		rbit r3, r3
 1316              	@ 0 "" 2
 1317              	.LVL132:
 1318              		.thumb
 1319              		.syntax unified
 1320              	.LBE249:
 1321              	.LBE248:
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  
 1322              		.loc 1 579 0
 1323 058c B3FA83F3 		clz	r3, r3
 1324 0590 03F18453 		add	r3, r3, #276824064
 1325 0594 03F58413 		add	r3, r3, #1081344
 1326 0598 9B00     		lsls	r3, r3, #2
 1327 059a 0022     		movs	r2, #0
 1328 059c 1A60     		str	r2, [r3]
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 1329              		.loc 1 582 0
 1330 059e FFF7FEFF 		bl	HAL_GetTick
 1331              	.LVL133:
 1332 05a2 0446     		mov	r4, r0
 1333              	.LVL134:
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1334              		.loc 1 585 0
 1335 05a4 04E0     		b	.L73
 1336              	.LVL135:
 1337              	.L76:
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 1338              		.loc 1 587 0
 1339 05a6 FFF7FEFF 		bl	HAL_GetTick
 1340              	.LVL136:
 1341 05aa 001B     		subs	r0, r0, r4
 1342 05ac 0228     		cmp	r0, #2
 1343 05ae 37D8     		bhi	.L93
 1344              	.L73:
 1345              	.LVL137:
 1346              	.LBB250:
 1347              	.LBB251:
 1348              		.loc 2 531 0
 1349 05b0 4FF00073 		mov	r3, #33554432
ARM GAS  /tmp/ccEZ8umi.s 			page 45


 1350              		.syntax unified
 1351              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1352 05b4 93FAA3F3 		rbit r3, r3
 1353              	@ 0 "" 2
 1354              	.LVL138:
 1355              		.thumb
 1356              		.syntax unified
 1357              	.LBE251:
 1358              	.LBE250:
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1359              		.loc 1 585 0
 1360 05b8 124B     		ldr	r3, .L97
 1361 05ba 1968     		ldr	r1, [r3]
 1362              	.LVL139:
 1363              	.LBB252:
 1364              	.LBB253:
 1365              		.loc 2 531 0
 1366 05bc 4FF00073 		mov	r3, #33554432
 1367              		.syntax unified
 1368              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1369 05c0 93FAA3F3 		rbit r3, r3
 1370              	@ 0 "" 2
 1371              	.LVL140:
 1372              		.thumb
 1373              		.syntax unified
 1374              	.LBE253:
 1375              	.LBE252:
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1376              		.loc 1 585 0
 1377 05c4 B3FA83F3 		clz	r3, r3
 1378 05c8 03F01F03 		and	r3, r3, #31
 1379 05cc 0122     		movs	r2, #1
 1380 05ce 02FA03F3 		lsl	r3, r2, r3
 1381 05d2 1942     		tst	r1, r3
 1382 05d4 E7D1     		bne	.L76
 1383              		.loc 1 600 0
 1384 05d6 0020     		movs	r0, #0
 1385 05d8 23E0     		b	.L10
 1386              	.LVL141:
 1387              	.L77:
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 1388              		.loc 1 296 0
 1389 05da 0120     		movs	r0, #1
 1390              	.LVL142:
 1391 05dc 21E0     		b	.L10
 1392              	.LVL143:
 1393              	.L78:
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1394              		.loc 1 320 0
 1395 05de 0320     		movs	r0, #3
 1396 05e0 1FE0     		b	.L10
 1397              	.L79:
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1398              		.loc 1 334 0
 1399 05e2 0320     		movs	r0, #3
 1400 05e4 1DE0     		b	.L10
 1401              	.LVL144:
ARM GAS  /tmp/ccEZ8umi.s 			page 46


 1402              	.L80:
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 1403              		.loc 1 354 0
 1404 05e6 0120     		movs	r0, #1
 1405 05e8 1BE0     		b	.L10
 1406              	.LVL145:
 1407              	.L81:
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1408              		.loc 1 379 0
 1409 05ea 0320     		movs	r0, #3
 1410 05ec 19E0     		b	.L10
 1411              	.L82:
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1412              		.loc 1 399 0
 1413 05ee 0320     		movs	r0, #3
 1414 05f0 17E0     		b	.L10
 1415              	.L83:
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1416              		.loc 1 425 0
 1417 05f2 0320     		movs	r0, #3
 1418 05f4 15E0     		b	.L10
 1419              	.L84:
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1420              		.loc 1 442 0
 1421 05f6 0320     		movs	r0, #3
 1422 05f8 13E0     		b	.L10
 1423              	.LVL146:
 1424              	.L86:
 1425              	.LBB254:
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1426              		.loc 1 475 0
 1427 05fa 0320     		movs	r0, #3
 1428 05fc 11E0     		b	.L10
 1429              	.L87:
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1430              		.loc 1 493 0
 1431 05fe 0320     		movs	r0, #3
 1432 0600 0FE0     		b	.L10
 1433              	.L98:
 1434 0602 00BF     		.align	2
 1435              	.L97:
 1436 0604 00100240 		.word	1073876992
 1437 0608 00700040 		.word	1073770496
 1438              	.L88:
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1439              		.loc 1 507 0
 1440 060c 0320     		movs	r0, #3
 1441 060e 08E0     		b	.L10
 1442              	.LVL147:
 1443              	.L89:
 1444              	.LBE254:
 1445              		.loc 1 600 0
 1446 0610 0020     		movs	r0, #0
 1447 0612 06E0     		b	.L10
 1448              	.L90:
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 1449              		.loc 1 596 0
ARM GAS  /tmp/ccEZ8umi.s 			page 47


 1450 0614 0120     		movs	r0, #1
 1451 0616 04E0     		b	.L10
 1452              	.LVL148:
 1453              	.L91:
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1454              		.loc 1 547 0
 1455 0618 0320     		movs	r0, #3
 1456 061a 02E0     		b	.L10
 1457              	.LVL149:
 1458              	.L92:
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1459              		.loc 1 572 0
 1460 061c 0320     		movs	r0, #3
 1461 061e 00E0     		b	.L10
 1462              	.L93:
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1463              		.loc 1 589 0
 1464 0620 0320     		movs	r0, #3
 1465              	.LVL150:
 1466              	.L10:
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 1467              		.loc 1 601 0
 1468 0622 02B0     		add	sp, sp, #8
 1469              	.LCFI2:
 1470              		.cfi_def_cfa_offset 16
 1471              		@ sp needed
 1472 0624 70BD     		pop	{r4, r5, r6, pc}
 1473              		.cfi_endproc
 1474              	.LFE125:
 1476 0626 00BF     		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1477              		.align	2
 1478              		.global	HAL_RCC_MCOConfig
 1479              		.thumb
 1480              		.thumb_func
 1482              	HAL_RCC_MCOConfig:
 1483              	.LFB127:
 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  FLatency FLASH Latency                   
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          The value of this parameter depend on device used within the same series
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         occur when the clock source will be ready. 
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
ARM GAS  /tmp/ccEZ8umi.s 			page 48


 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         currently used as system clock source.
 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HAL status
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   must be correctly programmed according to the frequency of the CPU clock 
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     (HCLK) of the device. */
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_ERROR;
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the HSE ready flag */  
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the PLL ready flag */  
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
ARM GAS  /tmp/ccEZ8umi.s 			page 49


 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the HSI ready flag */  
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Get Start Tick */
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }      
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }    
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(FLatency < (FLASH->ACR & FLASH_ACR_LATENCY))
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
ARM GAS  /tmp/ccEZ8umi.s 			page 50


 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_ERROR;
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }    
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/ 
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return HAL_OK;
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *  @brief   RCC clocks control functions
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @verbatim   
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                   ##### Peripheral Control functions #####
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================  
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks 
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     frequencies.
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @endverbatim
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_MCOPRE)
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected
ARM GAS  /tmp/ccEZ8umi.s 			page 51


 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System Clock selected as MCO clock
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1   no division applied to MCO clock
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_2   division by 2 applied to MCO clock
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_4   division by 4 applied to MCO clock
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_8   division by 8 applied to MCO clock
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_16  division by 16 applied to MCO clock
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_32  division by 32 applied to MCO clock
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_64  division by 64 applied to MCO clock
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_128 division by 128 applied to MCO clock
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected as MCO clock
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System clock selected as MCO clock
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1 no division applied to MCO clock
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1484              		.loc 1 836 0
 1485              		.cfi_startproc
 1486              		@ args = 0, pretend = 0, frame = 24
 1487              		@ frame_needed = 0, uses_anonymous_args = 0
 1488              	.LVL151:
 1489 0000 70B5     		push	{r4, r5, r6, lr}
 1490              	.LCFI3:
 1491              		.cfi_def_cfa_offset 16
 1492              		.cfi_offset 4, -16
 1493              		.cfi_offset 5, -12
 1494              		.cfi_offset 6, -8
 1495              		.cfi_offset 14, -4
 1496 0002 86B0     		sub	sp, sp, #24
 1497              	.LCFI4:
ARM GAS  /tmp/ccEZ8umi.s 			page 52


 1498              		.cfi_def_cfa_offset 40
 1499 0004 0E46     		mov	r6, r1
 1500 0006 1546     		mov	r5, r2
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   GPIO_InitTypeDef gpio;
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the MCO1 pin in alternate function mode */
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Mode      = GPIO_MODE_AF_PP;
 1501              		.loc 1 845 0
 1502 0008 0223     		movs	r3, #2
 1503 000a 0293     		str	r3, [sp, #8]
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
 1504              		.loc 1 846 0
 1505 000c 0323     		movs	r3, #3
 1506 000e 0493     		str	r3, [sp, #16]
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
 1507              		.loc 1 847 0
 1508 0010 0023     		movs	r3, #0
 1509 0012 0393     		str	r3, [sp, #12]
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Pin       = MCO1_PIN;
 1510              		.loc 1 848 0
 1511 0014 4FF48072 		mov	r2, #256
 1512              	.LVL152:
 1513 0018 0192     		str	r2, [sp, #4]
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Alternate = GPIO_AF0_MCO;
 1514              		.loc 1 849 0
 1515 001a 0593     		str	r3, [sp, #20]
 1516              	.LBB255:
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* MCO1 Clock Enable */
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   MCO1_CLK_ENABLE();
 1517              		.loc 1 852 0
 1518 001c 0B4C     		ldr	r4, .L101
 1519 001e 6369     		ldr	r3, [r4, #20]
 1520 0020 43F40033 		orr	r3, r3, #131072
 1521 0024 6361     		str	r3, [r4, #20]
 1522 0026 6369     		ldr	r3, [r4, #20]
 1523 0028 03F40033 		and	r3, r3, #131072
 1524 002c 0093     		str	r3, [sp]
 1525 002e 009B     		ldr	r3, [sp]
 1526              	.LBE255:
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &gpio);
 1527              		.loc 1 854 0
 1528 0030 01A9     		add	r1, sp, #4
 1529              	.LVL153:
 1530 0032 4FF09040 		mov	r0, #1207959552
 1531              	.LVL154:
 1532 0036 FFF7FEFF 		bl	HAL_GPIO_Init
 1533              	.LVL155:
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the MCO clock source */
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   __HAL_RCC_MCO1_CONFIG(RCC_MCOSource, RCC_MCODiv);
ARM GAS  /tmp/ccEZ8umi.s 			page 53


 1534              		.loc 1 857 0
 1535 003a 6368     		ldr	r3, [r4, #4]
 1536 003c 23F0EE43 		bic	r3, r3, #1996488704
 1537 0040 3543     		orrs	r5, r5, r6
 1538              	.LVL156:
 1539 0042 1D43     		orrs	r5, r5, r3
 1540 0044 6560     		str	r5, [r4, #4]
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 1541              		.loc 1 858 0
 1542 0046 06B0     		add	sp, sp, #24
 1543              	.LCFI5:
 1544              		.cfi_def_cfa_offset 16
 1545              		@ sp needed
 1546 0048 70BD     		pop	{r4, r5, r6, pc}
 1547              	.LVL157:
 1548              	.L102:
 1549 004a 00BF     		.align	2
 1550              	.L101:
 1551 004c 00100240 		.word	1073876992
 1552              		.cfi_endproc
 1553              	.LFE127:
 1555              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1556              		.align	2
 1557              		.global	HAL_RCC_EnableCSS
 1558              		.thumb
 1559              		.thumb_func
 1561              	HAL_RCC_EnableCSS:
 1562              	.LFB128:
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.  
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1563              		.loc 1 870 0
 1564              		.cfi_startproc
 1565              		@ args = 0, pretend = 0, frame = 0
 1566              		@ frame_needed = 0, uses_anonymous_args = 0
 1567              		@ link register save eliminated.
 1568              	.LVL158:
 1569              	.LBB256:
 1570              	.LBB257:
 1571              		.loc 2 531 0
 1572 0000 4FF40023 		mov	r3, #524288
 1573              		.syntax unified
 1574              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1575 0004 93FAA3F3 		rbit r3, r3
 1576              	@ 0 "" 2
 1577              	.LVL159:
 1578              		.thumb
 1579              		.syntax unified
ARM GAS  /tmp/ccEZ8umi.s 			page 54


 1580              	.LBE257:
 1581              	.LBE256:
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 1582              		.loc 1 871 0
 1583 0008 B3FA83F3 		clz	r3, r3
 1584 000c 03F18453 		add	r3, r3, #276824064
 1585 0010 03F58413 		add	r3, r3, #1081344
 1586 0014 9B00     		lsls	r3, r3, #2
 1587 0016 0122     		movs	r2, #1
 1588 0018 1A60     		str	r2, [r3]
 1589 001a 7047     		bx	lr
 1590              		.cfi_endproc
 1591              	.LFE128:
 1593              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1594              		.align	2
 1595              		.global	HAL_RCC_DisableCSS
 1596              		.thumb
 1597              		.thumb_func
 1599              	HAL_RCC_DisableCSS:
 1600              	.LFB129:
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1601              		.loc 1 879 0
 1602              		.cfi_startproc
 1603              		@ args = 0, pretend = 0, frame = 0
 1604              		@ frame_needed = 0, uses_anonymous_args = 0
 1605              		@ link register save eliminated.
 1606              	.LVL160:
 1607              	.LBB258:
 1608              	.LBB259:
 1609              		.loc 2 531 0
 1610 0000 4FF40023 		mov	r3, #524288
 1611              		.syntax unified
 1612              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1613 0004 93FAA3F3 		rbit r3, r3
 1614              	@ 0 "" 2
 1615              	.LVL161:
 1616              		.thumb
 1617              		.syntax unified
 1618              	.LBE259:
 1619              	.LBE258:
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 1620              		.loc 1 880 0
 1621 0008 B3FA83F3 		clz	r3, r3
 1622 000c 03F18453 		add	r3, r3, #276824064
 1623 0010 03F58413 		add	r3, r3, #1081344
 1624 0014 9B00     		lsls	r3, r3, #2
 1625 0016 0022     		movs	r2, #0
 1626 0018 1A60     		str	r2, [r3]
 1627 001a 7047     		bx	lr
 1628              		.cfi_endproc
ARM GAS  /tmp/ccEZ8umi.s 			page 55


 1629              	.LFE129:
 1631              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1632              		.align	2
 1633              		.global	HAL_RCC_GetSysClockFreq
 1634              		.thumb
 1635              		.thumb_func
 1637              	HAL_RCC_GetSysClockFreq:
 1638              	.LFB130:
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency     
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real 
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         constant and the selected clock source:
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns a value based on HSE_VALUE
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           divided by PREDIV factor(**)
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns a value based on HSE_VALUE
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           divided by PREDIV factor(**) or HSI_VALUE(*) multiplied by the PLL factor.
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f3xx_hal_conf.h file (default value
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *               8 MHz) but the real value may vary depending on the variations
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *               in voltage and temperature.
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f3xx_hal_conf.h file (default value
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                have wrong result.
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                  
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         value for HSE crystal.
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the 
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         baud-rate for the communication peripherals or configure other parameters.
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval SYSCLK frequency
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1639              		.loc 1 913 0
 1640              		.cfi_startproc
 1641              		@ args = 0, pretend = 0, frame = 0
 1642              		@ frame_needed = 0, uses_anonymous_args = 0
 1643              		@ link register save eliminated.
 1644              	.LVL162:
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   tmpreg = RCC->CFGR;
 1645              		.loc 1 917 0
 1646 0000 174B     		ldr	r3, .L111
 1647 0002 5B68     		ldr	r3, [r3, #4]
 1648              	.LVL163:
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
ARM GAS  /tmp/ccEZ8umi.s 			page 56


 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   switch (tmpreg & RCC_CFGR_SWS)
 1649              		.loc 1 920 0
 1650 0004 03F00C02 		and	r2, r3, #12
 1651 0008 082A     		cmp	r2, #8
 1652 000a 27D1     		bne	.L110
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> POSITION_VAL(RCC_CFGR_PLL
 1653              		.loc 1 929 0
 1654 000c 03F47011 		and	r1, r3, #3932160
 1655              	.LVL164:
 1656              	.LBB260:
 1657              	.LBB261:
 1658              		.loc 2 531 0
 1659 0010 4FF47012 		mov	r2, #3932160
 1660              		.syntax unified
 1661              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1662 0014 92FAA2F2 		rbit r2, r2
 1663              	@ 0 "" 2
 1664              	.LVL165:
 1665              		.thumb
 1666              		.syntax unified
 1667              	.LBE261:
 1668              	.LBE260:
 1669              		.loc 1 929 0
 1670 0018 B2FA82F2 		clz	r2, r2
 1671 001c 21FA02F2 		lsr	r2, r1, r2
 1672 0020 1049     		ldr	r1, .L111+4
 1673 0022 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 1674              	.LVL166:
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> POSITION_VAL(RCC_CFG
 1675              		.loc 1 930 0
 1676 0024 0E49     		ldr	r1, .L111
 1677 0026 C96A     		ldr	r1, [r1, #44]
 1678 0028 01F00F00 		and	r0, r1, #15
 1679              	.LVL167:
 1680              	.LBB262:
 1681              	.LBB263:
 1682              		.loc 2 531 0
 1683 002c 0F21     		movs	r1, #15
 1684              		.syntax unified
 1685              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1686 002e 91FAA1F1 		rbit r1, r1
 1687              	@ 0 "" 2
 1688              	.LVL168:
 1689              		.thumb
 1690              		.syntax unified
 1691              	.LBE263:
 1692              	.LBE262:
 1693              		.loc 1 930 0
 1694 0032 B1FA81F1 		clz	r1, r1
ARM GAS  /tmp/ccEZ8umi.s 			page 57


 1695 0036 20FA01F1 		lsr	r1, r0, r1
 1696 003a 0B48     		ldr	r0, .L111+8
 1697 003c 405C     		ldrb	r0, [r0, r1]	@ zero_extendqisi2
 1698              	.LVL169:
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI)
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (HSE_VALUE / prediv) * pllmul;
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (HSI_VALUE >> 1U) * pllmul;
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC_HSE_PREDIV) == RCC_CFGR_PLLSRC_HSE_PREDIV)
 1699              		.loc 1 943 0
 1700 003e 13F4803F 		tst	r3, #65536
 1701 0042 05D0     		beq	.L108
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (HSE_VALUE / prediv) * pllmul;
 1702              		.loc 1 946 0
 1703 0044 094B     		ldr	r3, .L111+12
 1704              	.LVL170:
 1705 0046 B3FBF0F0 		udiv	r0, r3, r0
 1706              	.LVL171:
 1707 004a 00FB02F0 		mul	r0, r0, r2
 1708              	.LVL172:
 1709 004e 7047     		bx	lr
 1710              	.LVL173:
 1711              	.L108:
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (HSI_VALUE / prediv) * pllmul;
 1712              		.loc 1 951 0
 1713 0050 064B     		ldr	r3, .L111+12
 1714              	.LVL174:
 1715 0052 B3FBF0F0 		udiv	r0, r3, r0
 1716              	.LVL175:
 1717 0056 00FB02F0 		mul	r0, r0, r2
 1718              	.LVL176:
 1719 005a 7047     		bx	lr
 1720              	.LVL177:
 1721              	.L110:
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 1722              		.loc 1 924 0
 1723 005c 0348     		ldr	r0, .L111+12
 1724              	.LVL178:
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_DIV2 */
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = pllclk;
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
ARM GAS  /tmp/ccEZ8umi.s 			page 58


 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     default: /* HSI used as system clock */
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return sysclockfreq;
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 1725              		.loc 1 965 0
 1726 005e 7047     		bx	lr
 1727              	.L112:
 1728              		.align	2
 1729              	.L111:
 1730 0060 00100240 		.word	1073876992
 1731 0064 00000000 		.word	.LANCHOR0
 1732 0068 00000000 		.word	.LANCHOR1
 1733 006c 00127A00 		.word	8000000
 1734              		.cfi_endproc
 1735              	.LFE130:
 1737              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1738              		.align	2
 1739              		.global	HAL_RCC_ClockConfig
 1740              		.thumb
 1741              		.thumb_func
 1743              	HAL_RCC_ClockConfig:
 1744              	.LFB126:
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 1745              		.loc 1 627 0
 1746              		.cfi_startproc
 1747              		@ args = 0, pretend = 0, frame = 0
 1748              		@ frame_needed = 0, uses_anonymous_args = 0
 1749              	.LVL179:
 1750 0000 70B5     		push	{r4, r5, r6, lr}
 1751              	.LCFI6:
 1752              		.cfi_def_cfa_offset 16
 1753              		.cfi_offset 4, -16
 1754              		.cfi_offset 5, -12
 1755              		.cfi_offset 6, -8
 1756              		.cfi_offset 14, -4
 1757              	.LVL180:
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 1758              		.loc 1 640 0
 1759 0002 744B     		ldr	r3, .L147
 1760 0004 1B68     		ldr	r3, [r3]
 1761 0006 03F00703 		and	r3, r3, #7
 1762 000a 8B42     		cmp	r3, r1
 1763 000c 0BD2     		bcs	.L114
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 1764              		.loc 1 643 0
 1765 000e 714A     		ldr	r2, .L147
 1766 0010 1368     		ldr	r3, [r2]
 1767 0012 23F00703 		bic	r3, r3, #7
 1768 0016 0B43     		orrs	r3, r3, r1
 1769 0018 1360     		str	r3, [r2]
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 1770              		.loc 1 647 0
ARM GAS  /tmp/ccEZ8umi.s 			page 59


 1771 001a 1368     		ldr	r3, [r2]
 1772 001c 03F00703 		and	r3, r3, #7
 1773 0020 9942     		cmp	r1, r3
 1774 0022 40F0C680 		bne	.L137
 1775              	.L114:
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 1776              		.loc 1 654 0
 1777 0026 0368     		ldr	r3, [r0]
 1778 0028 13F0020F 		tst	r3, #2
 1779 002c 06D0     		beq	.L116
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 1780              		.loc 1 657 0
 1781 002e 6A4C     		ldr	r4, .L147+4
 1782 0030 6368     		ldr	r3, [r4, #4]
 1783 0032 23F0F002 		bic	r2, r3, #240
 1784 0036 8368     		ldr	r3, [r0, #8]
 1785 0038 1343     		orrs	r3, r3, r2
 1786 003a 6360     		str	r3, [r4, #4]
 1787              	.L116:
 1788 003c 0D46     		mov	r5, r1
 1789 003e 0446     		mov	r4, r0
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 1790              		.loc 1 661 0
 1791 0040 0368     		ldr	r3, [r0]
 1792 0042 13F0010F 		tst	r3, #1
 1793 0046 75D0     		beq	.L117
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 1794              		.loc 1 666 0
 1795 0048 4268     		ldr	r2, [r0, #4]
 1796 004a 012A     		cmp	r2, #1
 1797 004c 13D1     		bne	.L118
 1798              	.LVL181:
 1799              	.LBB264:
 1800              	.LBB265:
 1801              		.loc 2 531 0
 1802 004e 4FF40033 		mov	r3, #131072
 1803              		.syntax unified
 1804              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1805 0052 93FAA3F3 		rbit r3, r3
 1806              	@ 0 "" 2
 1807              	.LVL182:
 1808              		.thumb
 1809              		.syntax unified
 1810              	.LBE265:
 1811              	.LBE264:
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1812              		.loc 1 669 0
 1813 0056 604B     		ldr	r3, .L147+4
 1814 0058 1868     		ldr	r0, [r3]
 1815              	.LVL183:
 1816              	.LBB266:
 1817              	.LBB267:
 1818              		.loc 2 531 0
 1819 005a 4FF40033 		mov	r3, #131072
 1820              		.syntax unified
 1821              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1822 005e 93FAA3F3 		rbit r3, r3
ARM GAS  /tmp/ccEZ8umi.s 			page 60


 1823              	@ 0 "" 2
 1824              	.LVL184:
 1825              		.thumb
 1826              		.syntax unified
 1827              	.LBE267:
 1828              	.LBE266:
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1829              		.loc 1 669 0
 1830 0062 B3FA83F3 		clz	r3, r3
 1831 0066 03F01F03 		and	r3, r3, #31
 1832 006a 0121     		movs	r1, #1
 1833              	.LVL185:
 1834 006c 01FA03F3 		lsl	r3, r1, r3
 1835 0070 1842     		tst	r0, r3
 1836 0072 27D1     		bne	.L121
 1837 0074 9FE0     		b	.L138
 1838              	.LVL186:
 1839              	.L118:
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 1840              		.loc 1 675 0
 1841 0076 022A     		cmp	r2, #2
 1842 0078 13D1     		bne	.L122
 1843              	.LVL187:
 1844              	.LBB268:
 1845              	.LBB269:
 1846              		.loc 2 531 0
 1847 007a 4FF00073 		mov	r3, #33554432
 1848              		.syntax unified
 1849              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1850 007e 93FAA3F3 		rbit r3, r3
 1851              	@ 0 "" 2
 1852              	.LVL188:
 1853              		.thumb
 1854              		.syntax unified
 1855              	.LBE269:
 1856              	.LBE268:
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1857              		.loc 1 678 0
 1858 0082 554B     		ldr	r3, .L147+4
 1859 0084 1868     		ldr	r0, [r3]
 1860              	.LVL189:
 1861              	.LBB270:
 1862              	.LBB271:
 1863              		.loc 2 531 0
 1864 0086 4FF00073 		mov	r3, #33554432
 1865              		.syntax unified
 1866              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1867 008a 93FAA3F3 		rbit r3, r3
 1868              	@ 0 "" 2
 1869              	.LVL190:
 1870              		.thumb
 1871              		.syntax unified
 1872              	.LBE271:
 1873              	.LBE270:
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1874              		.loc 1 678 0
 1875 008e B3FA83F3 		clz	r3, r3
ARM GAS  /tmp/ccEZ8umi.s 			page 61


 1876 0092 03F01F03 		and	r3, r3, #31
 1877 0096 0121     		movs	r1, #1
 1878              	.LVL191:
 1879 0098 01FA03F3 		lsl	r3, r1, r3
 1880 009c 1842     		tst	r0, r3
 1881 009e 11D1     		bne	.L121
 1882 00a0 8BE0     		b	.L139
 1883              	.LVL192:
 1884              	.L122:
 1885              	.LBB272:
 1886              	.LBB273:
 1887              		.loc 2 531 0
 1888 00a2 0223     		movs	r3, #2
 1889              		.syntax unified
 1890              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1891 00a4 93FAA3F3 		rbit r3, r3
 1892              	@ 0 "" 2
 1893              	.LVL193:
 1894              		.thumb
 1895              		.syntax unified
 1896              	.LBE273:
 1897              	.LBE272:
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1898              		.loc 1 687 0
 1899 00a8 4B4B     		ldr	r3, .L147+4
 1900 00aa 1868     		ldr	r0, [r3]
 1901              	.LVL194:
 1902              	.LBB274:
 1903              	.LBB275:
 1904              		.loc 2 531 0
 1905 00ac 0223     		movs	r3, #2
 1906              		.syntax unified
 1907              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1908 00ae 93FAA3F3 		rbit r3, r3
 1909              	@ 0 "" 2
 1910              	.LVL195:
 1911              		.thumb
 1912              		.syntax unified
 1913              	.LBE275:
 1914              	.LBE274:
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1915              		.loc 1 687 0
 1916 00b2 B3FA83F3 		clz	r3, r3
 1917 00b6 03F01F03 		and	r3, r3, #31
 1918 00ba 0121     		movs	r1, #1
 1919              	.LVL196:
 1920 00bc 01FA03F3 		lsl	r3, r1, r3
 1921 00c0 1842     		tst	r0, r3
 1922 00c2 7CD0     		beq	.L140
 1923              	.L121:
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 1924              		.loc 1 692 0
 1925 00c4 4449     		ldr	r1, .L147+4
 1926 00c6 4B68     		ldr	r3, [r1, #4]
 1927 00c8 23F00303 		bic	r3, r3, #3
 1928 00cc 1343     		orrs	r3, r3, r2
 1929 00ce 4B60     		str	r3, [r1, #4]
ARM GAS  /tmp/ccEZ8umi.s 			page 62


 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 1930              		.loc 1 695 0
 1931 00d0 FFF7FEFF 		bl	HAL_GetTick
 1932              	.LVL197:
 1933 00d4 0646     		mov	r6, r0
 1934              	.LVL198:
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 1935              		.loc 1 697 0
 1936 00d6 6368     		ldr	r3, [r4, #4]
 1937 00d8 012B     		cmp	r3, #1
 1938 00da 0ED1     		bne	.L145
 1939 00dc 06E0     		b	.L127
 1940              	.LVL199:
 1941              	.L129:
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1942              		.loc 1 701 0
 1943 00de FFF7FEFF 		bl	HAL_GetTick
 1944              	.LVL200:
 1945 00e2 801B     		subs	r0, r0, r6
 1946 00e4 41F28833 		movw	r3, #5000
 1947 00e8 9842     		cmp	r0, r3
 1948 00ea 6AD8     		bhi	.L141
 1949              	.L127:
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1950              		.loc 1 699 0
 1951 00ec 3A4B     		ldr	r3, .L147+4
 1952 00ee 5B68     		ldr	r3, [r3, #4]
 1953 00f0 03F00C03 		and	r3, r3, #12
 1954 00f4 042B     		cmp	r3, #4
 1955 00f6 F2D1     		bne	.L129
 1956 00f8 1CE0     		b	.L117
 1957              	.LVL201:
 1958              	.L145:
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 1959              		.loc 1 707 0
 1960 00fa 022B     		cmp	r3, #2
 1961 00fc 15D1     		bne	.L131
 1962 00fe 06E0     		b	.L130
 1963              	.LVL202:
 1964              	.L132:
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1965              		.loc 1 711 0
 1966 0100 FFF7FEFF 		bl	HAL_GetTick
 1967              	.LVL203:
 1968 0104 801B     		subs	r0, r0, r6
 1969 0106 41F28833 		movw	r3, #5000
 1970 010a 9842     		cmp	r0, r3
 1971 010c 5BD8     		bhi	.L142
 1972              	.L130:
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1973              		.loc 1 709 0
 1974 010e 324B     		ldr	r3, .L147+4
 1975 0110 5B68     		ldr	r3, [r3, #4]
 1976 0112 03F00C03 		and	r3, r3, #12
 1977 0116 082B     		cmp	r3, #8
 1978 0118 F2D1     		bne	.L132
 1979 011a 0BE0     		b	.L117
ARM GAS  /tmp/ccEZ8umi.s 			page 63


 1980              	.L133:
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1981              		.loc 1 721 0
 1982 011c FFF7FEFF 		bl	HAL_GetTick
 1983              	.LVL204:
 1984 0120 801B     		subs	r0, r0, r6
 1985 0122 41F28833 		movw	r3, #5000
 1986 0126 9842     		cmp	r0, r3
 1987 0128 4FD8     		bhi	.L143
 1988              	.L131:
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1989              		.loc 1 719 0
 1990 012a 2B4B     		ldr	r3, .L147+4
 1991 012c 5B68     		ldr	r3, [r3, #4]
 1992 012e 13F00C0F 		tst	r3, #12
 1993 0132 F3D1     		bne	.L133
 1994              	.LVL205:
 1995              	.L117:
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 1996              		.loc 1 729 0
 1997 0134 274B     		ldr	r3, .L147
 1998 0136 1B68     		ldr	r3, [r3]
 1999 0138 03F00703 		and	r3, r3, #7
 2000 013c 9D42     		cmp	r5, r3
 2001 013e 0AD2     		bcs	.L134
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 2002              		.loc 1 732 0
 2003 0140 244A     		ldr	r2, .L147
 2004 0142 1368     		ldr	r3, [r2]
 2005 0144 23F00703 		bic	r3, r3, #7
 2006 0148 2B43     		orrs	r3, r3, r5
 2007 014a 1360     		str	r3, [r2]
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 2008              		.loc 1 736 0
 2009 014c 1368     		ldr	r3, [r2]
 2010 014e 03F00703 		and	r3, r3, #7
 2011 0152 9D42     		cmp	r5, r3
 2012 0154 3BD1     		bne	.L144
 2013              	.L134:
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 2014              		.loc 1 743 0
 2015 0156 2368     		ldr	r3, [r4]
 2016 0158 13F0040F 		tst	r3, #4
 2017 015c 06D0     		beq	.L135
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2018              		.loc 1 746 0
 2019 015e 1E49     		ldr	r1, .L147+4
 2020 0160 4B68     		ldr	r3, [r1, #4]
 2021 0162 23F4E062 		bic	r2, r3, #1792
 2022 0166 E368     		ldr	r3, [r4, #12]
 2023 0168 1343     		orrs	r3, r3, r2
 2024 016a 4B60     		str	r3, [r1, #4]
 2025              	.L135:
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 2026              		.loc 1 750 0
 2027 016c 2368     		ldr	r3, [r4]
 2028 016e 13F0080F 		tst	r3, #8
ARM GAS  /tmp/ccEZ8umi.s 			page 64


 2029 0172 07D0     		beq	.L136
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2030              		.loc 1 753 0
 2031 0174 184A     		ldr	r2, .L147+4
 2032 0176 5368     		ldr	r3, [r2, #4]
 2033 0178 23F46053 		bic	r3, r3, #14336
 2034 017c 2169     		ldr	r1, [r4, #16]
 2035 017e 43EAC103 		orr	r3, r3, r1, lsl #3
 2036 0182 5360     		str	r3, [r2, #4]
 2037              	.L136:
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2038              		.loc 1 757 0
 2039 0184 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2040              	.LVL206:
 2041 0188 134B     		ldr	r3, .L147+4
 2042 018a 5B68     		ldr	r3, [r3, #4]
 2043 018c 03F0F002 		and	r2, r3, #240
 2044              	.LVL207:
 2045              	.LBB276:
 2046              	.LBB277:
 2047              		.loc 2 531 0
 2048 0190 F023     		movs	r3, #240
 2049              		.syntax unified
 2050              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2051 0192 93FAA3F3 		rbit r3, r3
 2052              	@ 0 "" 2
 2053              	.LVL208:
 2054              		.thumb
 2055              		.syntax unified
 2056              	.LBE277:
 2057              	.LBE276:
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2058              		.loc 1 757 0
 2059 0196 B3FA83F3 		clz	r3, r3
 2060 019a 22FA03F3 		lsr	r3, r2, r3
 2061 019e 0F4A     		ldr	r2, .L147+8
 2062 01a0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2063 01a2 D840     		lsrs	r0, r0, r3
 2064 01a4 0E4B     		ldr	r3, .L147+12
 2065 01a6 1860     		str	r0, [r3]
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 2066              		.loc 1 760 0
 2067 01a8 0020     		movs	r0, #0
 2068 01aa FFF7FEFF 		bl	HAL_InitTick
 2069              	.LVL209:
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 2070              		.loc 1 762 0
 2071 01ae 0020     		movs	r0, #0
 2072 01b0 70BD     		pop	{r4, r5, r6, pc}
 2073              	.LVL210:
 2074              	.L137:
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 2075              		.loc 1 649 0
 2076 01b2 0120     		movs	r0, #1
 2077              	.LVL211:
 2078 01b4 70BD     		pop	{r4, r5, r6, pc}
 2079              	.LVL212:
ARM GAS  /tmp/ccEZ8umi.s 			page 65


 2080              	.L138:
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 2081              		.loc 1 671 0
 2082 01b6 0120     		movs	r0, #1
 2083 01b8 70BD     		pop	{r4, r5, r6, pc}
 2084              	.LVL213:
 2085              	.L139:
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 2086              		.loc 1 680 0
 2087 01ba 0120     		movs	r0, #1
 2088 01bc 70BD     		pop	{r4, r5, r6, pc}
 2089              	.LVL214:
 2090              	.L140:
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 2091              		.loc 1 689 0
 2092 01be 0120     		movs	r0, #1
 2093 01c0 70BD     		pop	{r4, r5, r6, pc}
 2094              	.LVL215:
 2095              	.L141:
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 2096              		.loc 1 703 0
 2097 01c2 0320     		movs	r0, #3
 2098 01c4 70BD     		pop	{r4, r5, r6, pc}
 2099              	.LVL216:
 2100              	.L142:
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 2101              		.loc 1 713 0
 2102 01c6 0320     		movs	r0, #3
 2103 01c8 70BD     		pop	{r4, r5, r6, pc}
 2104              	.LVL217:
 2105              	.L143:
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 2106              		.loc 1 723 0
 2107 01ca 0320     		movs	r0, #3
 2108 01cc 70BD     		pop	{r4, r5, r6, pc}
 2109              	.LVL218:
 2110              	.L144:
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 2111              		.loc 1 738 0
 2112 01ce 0120     		movs	r0, #1
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2113              		.loc 1 763 0
 2114 01d0 70BD     		pop	{r4, r5, r6, pc}
 2115              	.LVL219:
 2116              	.L148:
 2117 01d2 00BF     		.align	2
 2118              	.L147:
 2119 01d4 00200240 		.word	1073881088
 2120 01d8 00100240 		.word	1073876992
 2121 01dc 00000000 		.word	AHBPrescTable
 2122 01e0 00000000 		.word	SystemCoreClock
 2123              		.cfi_endproc
 2124              	.LFE126:
 2126              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 2127              		.align	2
 2128              		.global	HAL_RCC_GetHCLKFreq
 2129              		.thumb
ARM GAS  /tmp/ccEZ8umi.s 			page 66


 2130              		.thumb_func
 2132              	HAL_RCC_GetHCLKFreq:
 2133              	.LFB131:
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency     
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * 
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         and updated within this function
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HCLK frequency
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2134              		.loc 1 977 0
 2135              		.cfi_startproc
 2136              		@ args = 0, pretend = 0, frame = 0
 2137              		@ frame_needed = 0, uses_anonymous_args = 0
 2138              		@ link register save eliminated.
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return SystemCoreClock;
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 2139              		.loc 1 979 0
 2140 0000 014B     		ldr	r3, .L150
 2141 0002 1868     		ldr	r0, [r3]
 2142 0004 7047     		bx	lr
 2143              	.L151:
 2144 0006 00BF     		.align	2
 2145              	.L150:
 2146 0008 00000000 		.word	SystemCoreClock
 2147              		.cfi_endproc
 2148              	.LFE131:
 2150              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 2151              		.align	2
 2152              		.global	HAL_RCC_GetPCLK1Freq
 2153              		.thumb
 2154              		.thumb_func
 2156              	HAL_RCC_GetPCLK1Freq:
 2157              	.LFB132:
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency     
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval PCLK1 frequency
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2158              		.loc 1 988 0
 2159              		.cfi_startproc
 2160              		@ args = 0, pretend = 0, frame = 0
 2161              		@ frame_needed = 0, uses_anonymous_args = 0
 2162 0000 08B5     		push	{r3, lr}
 2163              	.LCFI7:
 2164              		.cfi_def_cfa_offset 8
 2165              		.cfi_offset 3, -8
 2166              		.cfi_offset 14, -4
ARM GAS  /tmp/ccEZ8umi.s 			page 67


 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_BIT
 2167              		.loc 1 990 0
 2168 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2169              	.LVL220:
 2170 0006 084B     		ldr	r3, .L154
 2171 0008 5B68     		ldr	r3, [r3, #4]
 2172 000a 03F4E062 		and	r2, r3, #1792
 2173              	.LVL221:
 2174              	.LBB278:
 2175              	.LBB279:
 2176              		.loc 2 531 0
 2177 000e 4FF4E063 		mov	r3, #1792
 2178              		.syntax unified
 2179              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2180 0012 93FAA3F3 		rbit r3, r3
 2181              	@ 0 "" 2
 2182              	.LVL222:
 2183              		.thumb
 2184              		.syntax unified
 2185              	.LBE279:
 2186              	.LBE278:
 2187              		.loc 1 990 0
 2188 0016 B3FA83F3 		clz	r3, r3
 2189 001a 22FA03F3 		lsr	r3, r2, r3
 2190 001e 034A     		ldr	r2, .L154+4
 2191 0020 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }    
 2192              		.loc 1 991 0
 2193 0022 D840     		lsrs	r0, r0, r3
 2194 0024 08BD     		pop	{r3, pc}
 2195              	.L155:
 2196 0026 00BF     		.align	2
 2197              	.L154:
 2198 0028 00100240 		.word	1073876992
 2199 002c 00000000 		.word	APBPrescTable
 2200              		.cfi_endproc
 2201              	.LFE132:
 2203              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 2204              		.align	2
 2205              		.global	HAL_RCC_GetPCLK2Freq
 2206              		.thumb
 2207              		.thumb_func
 2209              	HAL_RCC_GetPCLK2Freq:
 2210              	.LFB133:
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency     
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval PCLK2 frequency
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2211              		.loc 1 1000 0
 2212              		.cfi_startproc
 2213              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccEZ8umi.s 			page 68


 2214              		@ frame_needed = 0, uses_anonymous_args = 0
 2215 0000 08B5     		push	{r3, lr}
 2216              	.LCFI8:
 2217              		.cfi_def_cfa_offset 8
 2218              		.cfi_offset 3, -8
 2219              		.cfi_offset 14, -4
1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_BITN
 2220              		.loc 1 1002 0
 2221 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2222              	.LVL223:
 2223 0006 084B     		ldr	r3, .L158
 2224 0008 5B68     		ldr	r3, [r3, #4]
 2225 000a 03F46052 		and	r2, r3, #14336
 2226              	.LVL224:
 2227              	.LBB280:
 2228              	.LBB281:
 2229              		.loc 2 531 0
 2230 000e 4FF46053 		mov	r3, #14336
 2231              		.syntax unified
 2232              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2233 0012 93FAA3F3 		rbit r3, r3
 2234              	@ 0 "" 2
 2235              	.LVL225:
 2236              		.thumb
 2237              		.syntax unified
 2238              	.LBE281:
 2239              	.LBE280:
 2240              		.loc 1 1002 0
 2241 0016 B3FA83F3 		clz	r3, r3
 2242 001a 22FA03F3 		lsr	r3, r2, r3
 2243 001e 034A     		ldr	r2, .L158+4
 2244 0020 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** } 
 2245              		.loc 1 1003 0
 2246 0022 D840     		lsrs	r0, r0, r3
 2247 0024 08BD     		pop	{r3, pc}
 2248              	.L159:
 2249 0026 00BF     		.align	2
 2250              	.L158:
 2251 0028 00100240 		.word	1073876992
 2252 002c 00000000 		.word	APBPrescTable
 2253              		.cfi_endproc
 2254              	.LFE133:
 2256              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 2257              		.align	2
 2258              		.global	HAL_RCC_GetOscConfig
 2259              		.thumb
 2260              		.thumb_func
 2262              	HAL_RCC_GetOscConfig:
 2263              	.LFB134:
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal 
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * RCC configuration registers.
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that 
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * will be configured.
ARM GAS  /tmp/ccEZ8umi.s 			page 69


1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2264              		.loc 1 1013 0
 2265              		.cfi_startproc
 2266              		@ args = 0, pretend = 0, frame = 0
 2267              		@ frame_needed = 0, uses_anonymous_args = 0
 2268              		@ link register save eliminated.
 2269              	.LVL226:
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI  \
 2270              		.loc 1 1018 0
 2271 0000 0F23     		movs	r3, #15
 2272 0002 0360     		str	r3, [r0]
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                   | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI;
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 2273              		.loc 1 1023 0
 2274 0004 2E4B     		ldr	r3, .L173
 2275 0006 1B68     		ldr	r3, [r3]
 2276 0008 13F4802F 		tst	r3, #262144
 2277 000c 03D0     		beq	.L161
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 2278              		.loc 1 1025 0
 2279 000e 4FF4A023 		mov	r3, #327680
 2280 0012 4360     		str	r3, [r0, #4]
 2281 0014 0AE0     		b	.L162
 2282              	.L161:
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
 2283              		.loc 1 1027 0
 2284 0016 2A4B     		ldr	r3, .L173
 2285 0018 1B68     		ldr	r3, [r3]
 2286 001a 13F4803F 		tst	r3, #65536
 2287 001e 03D0     		beq	.L163
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 2288              		.loc 1 1029 0
 2289 0020 4FF48033 		mov	r3, #65536
 2290 0024 4360     		str	r3, [r0, #4]
 2291 0026 01E0     		b	.L162
 2292              	.L163:
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 2293              		.loc 1 1033 0
 2294 0028 0023     		movs	r3, #0
 2295 002a 4360     		str	r3, [r0, #4]
 2296              	.L162:
ARM GAS  /tmp/ccEZ8umi.s 			page 70


1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->HSEPredivValue = __HAL_RCC_HSE_GET_PREDIV();
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 2297              		.loc 1 1040 0
 2298 002c 244B     		ldr	r3, .L173
 2299 002e 1B68     		ldr	r3, [r3]
 2300 0030 13F0010F 		tst	r3, #1
 2301 0034 02D0     		beq	.L164
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 2302              		.loc 1 1042 0
 2303 0036 0123     		movs	r3, #1
 2304 0038 C360     		str	r3, [r0, #12]
 2305 003a 01E0     		b	.L165
 2306              	.L164:
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 2307              		.loc 1 1046 0
 2308 003c 0023     		movs	r3, #0
 2309 003e C360     		str	r3, [r0, #12]
 2310              	.L165:
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR & RCC_CR_HSITRIM) >> POSITION_VAL(RC
 2311              		.loc 1 1049 0
 2312 0040 1F49     		ldr	r1, .L173
 2313 0042 0B68     		ldr	r3, [r1]
 2314 0044 03F0F802 		and	r2, r3, #248
 2315              	.LVL227:
 2316              	.LBB282:
 2317              	.LBB283:
 2318              		.loc 2 531 0
 2319 0048 F823     		movs	r3, #248
 2320              		.syntax unified
 2321              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2322 004a 93FAA3F3 		rbit r3, r3
 2323              	@ 0 "" 2
 2324              	.LVL228:
 2325              		.thumb
 2326              		.syntax unified
 2327              	.LBE283:
 2328              	.LBE282:
 2329              		.loc 1 1049 0
 2330 004e B3FA83F3 		clz	r3, r3
 2331 0052 22FA03F3 		lsr	r3, r2, r3
 2332 0056 0361     		str	r3, [r0, #16]
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 2333              		.loc 1 1052 0
 2334 0058 0B6A     		ldr	r3, [r1, #32]
ARM GAS  /tmp/ccEZ8umi.s 			page 71


 2335 005a 13F0040F 		tst	r3, #4
 2336 005e 02D0     		beq	.L166
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 2337              		.loc 1 1054 0
 2338 0060 0523     		movs	r3, #5
 2339 0062 8360     		str	r3, [r0, #8]
 2340 0064 09E0     		b	.L167
 2341              	.L166:
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 2342              		.loc 1 1056 0
 2343 0066 164B     		ldr	r3, .L173
 2344 0068 1B6A     		ldr	r3, [r3, #32]
 2345 006a 13F0010F 		tst	r3, #1
 2346 006e 02D0     		beq	.L168
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 2347              		.loc 1 1058 0
 2348 0070 0123     		movs	r3, #1
 2349 0072 8360     		str	r3, [r0, #8]
 2350 0074 01E0     		b	.L167
 2351              	.L168:
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 2352              		.loc 1 1062 0
 2353 0076 0023     		movs	r3, #0
 2354 0078 8360     		str	r3, [r0, #8]
 2355              	.L167:
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 2356              		.loc 1 1066 0
 2357 007a 114B     		ldr	r3, .L173
 2358 007c 5B6A     		ldr	r3, [r3, #36]
 2359 007e 13F0010F 		tst	r3, #1
 2360 0082 02D0     		beq	.L169
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 2361              		.loc 1 1068 0
 2362 0084 0123     		movs	r3, #1
 2363 0086 4361     		str	r3, [r0, #20]
 2364 0088 01E0     		b	.L170
 2365              	.L169:
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 2366              		.loc 1 1072 0
 2367 008a 0023     		movs	r3, #0
 2368 008c 4361     		str	r3, [r0, #20]
 2369              	.L170:
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
ARM GAS  /tmp/ccEZ8umi.s 			page 72


1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 2370              		.loc 1 1077 0
 2371 008e 0C4B     		ldr	r3, .L173
 2372 0090 1B68     		ldr	r3, [r3]
 2373 0092 13F0807F 		tst	r3, #16777216
 2374 0096 02D0     		beq	.L171
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 2375              		.loc 1 1079 0
 2376 0098 0223     		movs	r3, #2
 2377 009a 8361     		str	r3, [r0, #24]
 2378 009c 01E0     		b	.L172
 2379              	.L171:
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 2380              		.loc 1 1083 0
 2381 009e 0123     		movs	r3, #1
 2382 00a0 8361     		str	r3, [r0, #24]
 2383              	.L172:
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLSRC);
 2384              		.loc 1 1085 0
 2385 00a2 074B     		ldr	r3, .L173
 2386 00a4 5A68     		ldr	r2, [r3, #4]
 2387 00a6 02F4C032 		and	r2, r2, #98304
 2388 00aa C261     		str	r2, [r0, #28]
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMUL);
 2389              		.loc 1 1086 0
 2390 00ac 5A68     		ldr	r2, [r3, #4]
 2391 00ae 02F47012 		and	r2, r2, #3932160
 2392 00b2 0262     		str	r2, [r0, #32]
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PREDIV = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV);
 2393              		.loc 1 1088 0
 2394 00b4 DB6A     		ldr	r3, [r3, #44]
 2395 00b6 03F00F03 		and	r3, r3, #15
 2396 00ba 4362     		str	r3, [r0, #36]
 2397 00bc 7047     		bx	lr
 2398              	.L174:
 2399 00be 00BF     		.align	2
 2400              	.L173:
 2401 00c0 00100240 		.word	1073876992
 2402              		.cfi_endproc
 2403              	.LFE134:
 2405              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2406              		.align	2
 2407              		.global	HAL_RCC_GetClockConfig
 2408              		.thumb
 2409              		.thumb_func
 2411              	HAL_RCC_GetClockConfig:
 2412              	.LFB135:
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_PREDIV */
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
ARM GAS  /tmp/ccEZ8umi.s 			page 73


1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Get the RCC_ClkInitStruct according to the internal 
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * RCC configuration registers.
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that 
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * contains the current clock configuration.
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2413              		.loc 1 1101 0
 2414              		.cfi_startproc
 2415              		@ args = 0, pretend = 0, frame = 0
 2416              		@ frame_needed = 0, uses_anonymous_args = 0
 2417              		@ link register save eliminated.
 2418              	.LVL229:
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(pFLatency != NULL);
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 2419              		.loc 1 1107 0
 2420 0000 0F23     		movs	r3, #15
 2421 0002 0360     		str	r3, [r0]
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/ 
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 2422              		.loc 1 1110 0
 2423 0004 0B4B     		ldr	r3, .L176
 2424 0006 5A68     		ldr	r2, [r3, #4]
 2425 0008 02F00302 		and	r2, r2, #3
 2426 000c 4260     		str	r2, [r0, #4]
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/ 
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE); 
 2427              		.loc 1 1113 0
 2428 000e 5A68     		ldr	r2, [r3, #4]
 2429 0010 02F0F002 		and	r2, r2, #240
 2430 0014 8260     		str	r2, [r0, #8]
1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/ 
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);   
 2431              		.loc 1 1116 0
 2432 0016 5A68     		ldr	r2, [r3, #4]
 2433 0018 02F4E062 		and	r2, r2, #1792
 2434 001c C260     		str	r2, [r0, #12]
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/ 
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 2435              		.loc 1 1119 0
 2436 001e 5B68     		ldr	r3, [r3, #4]
 2437 0020 DB08     		lsrs	r3, r3, #3
 2438 0022 03F4E063 		and	r3, r3, #1792
 2439 0026 0361     		str	r3, [r0, #16]
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
ARM GAS  /tmp/ccEZ8umi.s 			page 74


1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/   
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY); 
 2440              		.loc 1 1122 0
 2441 0028 034B     		ldr	r3, .L176+4
 2442 002a 1B68     		ldr	r3, [r3]
 2443 002c 03F00703 		and	r3, r3, #7
 2444 0030 0B60     		str	r3, [r1]
 2445 0032 7047     		bx	lr
 2446              	.L177:
 2447              		.align	2
 2448              	.L176:
 2449 0034 00100240 		.word	1073876992
 2450 0038 00200240 		.word	1073881088
 2451              		.cfi_endproc
 2452              	.LFE135:
 2454              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2455              		.align	2
 2456              		.weak	HAL_RCC_CSSCallback
 2457              		.thumb
 2458              		.thumb_func
 2460              	HAL_RCC_CSSCallback:
 2461              	.LFB137:
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval none
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2462              		.loc 1 1148 0
 2463              		.cfi_startproc
 2464              		@ args = 0, pretend = 0, frame = 0
 2465              		@ frame_needed = 0, uses_anonymous_args = 0
 2466              		@ link register save eliminated.
 2467 0000 7047     		bx	lr
 2468              		.cfi_endproc
 2469              	.LFE137:
 2471 0002 00BF     		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
ARM GAS  /tmp/ccEZ8umi.s 			page 75


 2472              		.align	2
 2473              		.global	HAL_RCC_NMI_IRQHandler
 2474              		.thumb
 2475              		.thumb_func
 2477              	HAL_RCC_NMI_IRQHandler:
 2478              	.LFB136:
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 2479              		.loc 1 1131 0
 2480              		.cfi_startproc
 2481              		@ args = 0, pretend = 0, frame = 0
 2482              		@ frame_needed = 0, uses_anonymous_args = 0
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 2483              		.loc 1 1131 0
 2484 0000 08B5     		push	{r3, lr}
 2485              	.LCFI9:
 2486              		.cfi_def_cfa_offset 8
 2487              		.cfi_offset 3, -8
 2488              		.cfi_offset 14, -4
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 2489              		.loc 1 1133 0
 2490 0002 054B     		ldr	r3, .L182
 2491 0004 9B68     		ldr	r3, [r3, #8]
 2492 0006 13F0800F 		tst	r3, #128
 2493 000a 04D0     		beq	.L179
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 2494              		.loc 1 1136 0
 2495 000c FFF7FEFF 		bl	HAL_RCC_CSSCallback
 2496              	.LVL230:
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2497              		.loc 1 1139 0
 2498 0010 8022     		movs	r2, #128
 2499 0012 024B     		ldr	r3, .L182+4
 2500 0014 1A70     		strb	r2, [r3]
 2501              	.L179:
 2502 0016 08BD     		pop	{r3, pc}
 2503              	.L183:
 2504              		.align	2
 2505              	.L182:
 2506 0018 00100240 		.word	1073876992
 2507 001c 0A100240 		.word	1073877002
 2508              		.cfi_endproc
 2509              	.LFE136:
 2511              		.global	aPredivFactorTable
 2512              		.global	aPLLMULFactorTable
 2513              		.section	.rodata.aPredivFactorTable,"a",%progbits
 2514              		.align	2
 2515              		.set	.LANCHOR1,. + 0
 2518              	aPredivFactorTable:
 2519 0000 01       		.byte	1
 2520 0001 02       		.byte	2
 2521 0002 03       		.byte	3
 2522 0003 04       		.byte	4
 2523 0004 05       		.byte	5
 2524 0005 06       		.byte	6
 2525 0006 07       		.byte	7
 2526 0007 08       		.byte	8
 2527 0008 09       		.byte	9
ARM GAS  /tmp/ccEZ8umi.s 			page 76


 2528 0009 0A       		.byte	10
 2529 000a 0B       		.byte	11
 2530 000b 0C       		.byte	12
 2531 000c 0D       		.byte	13
 2532 000d 0E       		.byte	14
 2533 000e 0F       		.byte	15
 2534 000f 10       		.byte	16
 2535              		.section	.rodata.aPLLMULFactorTable,"a",%progbits
 2536              		.align	2
 2537              		.set	.LANCHOR0,. + 0
 2540              	aPLLMULFactorTable:
 2541 0000 02       		.byte	2
 2542 0001 03       		.byte	3
 2543 0002 04       		.byte	4
 2544 0003 05       		.byte	5
 2545 0004 06       		.byte	6
 2546 0005 07       		.byte	7
 2547 0006 08       		.byte	8
 2548 0007 09       		.byte	9
 2549 0008 0A       		.byte	10
 2550 0009 0B       		.byte	11
 2551 000a 0C       		.byte	12
 2552 000b 0D       		.byte	13
 2553 000c 0E       		.byte	14
 2554 000d 0F       		.byte	15
 2555 000e 10       		.byte	16
 2556 000f 10       		.byte	16
 2557              		.text
 2558              	.Letext0:
 2559              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 2560              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 2561              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 2562              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 2563              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 2564              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 2565              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 2566              		.file 10 "Drivers/CMSIS/Include/core_cm4.h"
 2567              		.file 11 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 2568              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /tmp/ccEZ8umi.s 			page 77


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f3xx_hal_rcc.c
     /tmp/ccEZ8umi.s:22     .text.HAL_RCC_DeInit:00000000 $t
     /tmp/ccEZ8umi.s:27     .text.HAL_RCC_DeInit:00000000 HAL_RCC_DeInit
     /tmp/ccEZ8umi.s:71     .text.HAL_RCC_DeInit:00000038 $d
     /tmp/ccEZ8umi.s:79     .text.HAL_RCC_OscConfig:00000000 $t
     /tmp/ccEZ8umi.s:84     .text.HAL_RCC_OscConfig:00000000 HAL_RCC_OscConfig
     /tmp/ccEZ8umi.s:741    .text.HAL_RCC_OscConfig:000002e8 $d
     /tmp/ccEZ8umi.s:746    .text.HAL_RCC_OscConfig:000002f0 $t
     /tmp/ccEZ8umi.s:1436   .text.HAL_RCC_OscConfig:00000604 $d
     /tmp/ccEZ8umi.s:1440   .text.HAL_RCC_OscConfig:0000060c $t
     /tmp/ccEZ8umi.s:1477   .text.HAL_RCC_MCOConfig:00000000 $t
     /tmp/ccEZ8umi.s:1482   .text.HAL_RCC_MCOConfig:00000000 HAL_RCC_MCOConfig
     /tmp/ccEZ8umi.s:1551   .text.HAL_RCC_MCOConfig:0000004c $d
     /tmp/ccEZ8umi.s:1556   .text.HAL_RCC_EnableCSS:00000000 $t
     /tmp/ccEZ8umi.s:1561   .text.HAL_RCC_EnableCSS:00000000 HAL_RCC_EnableCSS
     /tmp/ccEZ8umi.s:1594   .text.HAL_RCC_DisableCSS:00000000 $t
     /tmp/ccEZ8umi.s:1599   .text.HAL_RCC_DisableCSS:00000000 HAL_RCC_DisableCSS
     /tmp/ccEZ8umi.s:1632   .text.HAL_RCC_GetSysClockFreq:00000000 $t
     /tmp/ccEZ8umi.s:1637   .text.HAL_RCC_GetSysClockFreq:00000000 HAL_RCC_GetSysClockFreq
     /tmp/ccEZ8umi.s:1730   .text.HAL_RCC_GetSysClockFreq:00000060 $d
     /tmp/ccEZ8umi.s:1738   .text.HAL_RCC_ClockConfig:00000000 $t
     /tmp/ccEZ8umi.s:1743   .text.HAL_RCC_ClockConfig:00000000 HAL_RCC_ClockConfig
     /tmp/ccEZ8umi.s:2119   .text.HAL_RCC_ClockConfig:000001d4 $d
     /tmp/ccEZ8umi.s:2127   .text.HAL_RCC_GetHCLKFreq:00000000 $t
     /tmp/ccEZ8umi.s:2132   .text.HAL_RCC_GetHCLKFreq:00000000 HAL_RCC_GetHCLKFreq
     /tmp/ccEZ8umi.s:2146   .text.HAL_RCC_GetHCLKFreq:00000008 $d
     /tmp/ccEZ8umi.s:2151   .text.HAL_RCC_GetPCLK1Freq:00000000 $t
     /tmp/ccEZ8umi.s:2156   .text.HAL_RCC_GetPCLK1Freq:00000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccEZ8umi.s:2198   .text.HAL_RCC_GetPCLK1Freq:00000028 $d
     /tmp/ccEZ8umi.s:2204   .text.HAL_RCC_GetPCLK2Freq:00000000 $t
     /tmp/ccEZ8umi.s:2209   .text.HAL_RCC_GetPCLK2Freq:00000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccEZ8umi.s:2251   .text.HAL_RCC_GetPCLK2Freq:00000028 $d
     /tmp/ccEZ8umi.s:2257   .text.HAL_RCC_GetOscConfig:00000000 $t
     /tmp/ccEZ8umi.s:2262   .text.HAL_RCC_GetOscConfig:00000000 HAL_RCC_GetOscConfig
     /tmp/ccEZ8umi.s:2401   .text.HAL_RCC_GetOscConfig:000000c0 $d
     /tmp/ccEZ8umi.s:2406   .text.HAL_RCC_GetClockConfig:00000000 $t
     /tmp/ccEZ8umi.s:2411   .text.HAL_RCC_GetClockConfig:00000000 HAL_RCC_GetClockConfig
     /tmp/ccEZ8umi.s:2449   .text.HAL_RCC_GetClockConfig:00000034 $d
     /tmp/ccEZ8umi.s:2455   .text.HAL_RCC_CSSCallback:00000000 $t
     /tmp/ccEZ8umi.s:2460   .text.HAL_RCC_CSSCallback:00000000 HAL_RCC_CSSCallback
     /tmp/ccEZ8umi.s:2472   .text.HAL_RCC_NMI_IRQHandler:00000000 $t
     /tmp/ccEZ8umi.s:2477   .text.HAL_RCC_NMI_IRQHandler:00000000 HAL_RCC_NMI_IRQHandler
     /tmp/ccEZ8umi.s:2506   .text.HAL_RCC_NMI_IRQHandler:00000018 $d
     /tmp/ccEZ8umi.s:2518   .rodata.aPredivFactorTable:00000000 aPredivFactorTable
     /tmp/ccEZ8umi.s:2540   .rodata.aPLLMULFactorTable:00000000 aPLLMULFactorTable
     /tmp/ccEZ8umi.s:2514   .rodata.aPredivFactorTable:00000000 $d
     /tmp/ccEZ8umi.s:2536   .rodata.aPLLMULFactorTable:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_GPIO_Init
HAL_InitTick
AHBPrescTable
APBPrescTable
ARM GAS  /tmp/ccEZ8umi.s 			page 78


