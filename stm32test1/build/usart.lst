ARM GAS  /tmp/cc7PPYB5.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"usart.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
  22              		.align	2
  23              		.global	MX_USART2_UART_Init
  24              		.thumb
  25              		.thumb_func
  27              	MX_USART2_UART_Init:
  28              	.LFB124:
  29              		.file 1 "Src/usart.c"
   1:Src/usart.c   **** /**
   2:Src/usart.c   ****   ******************************************************************************
   3:Src/usart.c   ****   * File Name          : USART.c
   4:Src/usart.c   ****   * Description        : This file provides code for the configuration
   5:Src/usart.c   ****   *                      of the USART instances.
   6:Src/usart.c   ****   ******************************************************************************
   7:Src/usart.c   ****   ** This notice applies to any and all portions of this file
   8:Src/usart.c   ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/usart.c   ****   * USER CODE END. Other portions of this file, whether 
  10:Src/usart.c   ****   * inserted by the user or by software development tools
  11:Src/usart.c   ****   * are owned by their respective copyright owners.
  12:Src/usart.c   ****   *
  13:Src/usart.c   ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/usart.c   ****   *
  15:Src/usart.c   ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/usart.c   ****   * are permitted provided that the following conditions are met:
  17:Src/usart.c   ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/usart.c   ****   *      this list of conditions and the following disclaimer.
  19:Src/usart.c   ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/usart.c   ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/usart.c   ****   *      and/or other materials provided with the distribution.
  22:Src/usart.c   ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/usart.c   ****   *      may be used to endorse or promote products derived from this software
  24:Src/usart.c   ****   *      without specific prior written permission.
  25:Src/usart.c   ****   *
  26:Src/usart.c   ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/usart.c   ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/usart.c   ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/usart.c   ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
ARM GAS  /tmp/cc7PPYB5.s 			page 2


  30:Src/usart.c   ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/usart.c   ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/usart.c   ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/usart.c   ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/usart.c   ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/usart.c   ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/usart.c   ****   *
  37:Src/usart.c   ****   ******************************************************************************
  38:Src/usart.c   ****   */
  39:Src/usart.c   **** 
  40:Src/usart.c   **** /* Includes ------------------------------------------------------------------*/
  41:Src/usart.c   **** #include "usart.h"
  42:Src/usart.c   **** 
  43:Src/usart.c   **** #include "gpio.h"
  44:Src/usart.c   **** 
  45:Src/usart.c   **** /* USER CODE BEGIN 0 */
  46:Src/usart.c   **** 
  47:Src/usart.c   **** /* USER CODE END 0 */
  48:Src/usart.c   **** 
  49:Src/usart.c   **** UART_HandleTypeDef huart2;
  50:Src/usart.c   **** 
  51:Src/usart.c   **** /* USART2 init function */
  52:Src/usart.c   **** 
  53:Src/usart.c   **** void MX_USART2_UART_Init(void)
  54:Src/usart.c   **** {
  30              		.loc 1 54 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34 0000 08B5     		push	{r3, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
  55:Src/usart.c   **** 
  56:Src/usart.c   ****   huart2.Instance = USART2;
  39              		.loc 1 56 0
  40 0002 0C48     		ldr	r0, .L4
  41 0004 0C4B     		ldr	r3, .L4+4
  42 0006 0360     		str	r3, [r0]
  57:Src/usart.c   ****   huart2.Init.BaudRate = 115200;
  43              		.loc 1 57 0
  44 0008 4FF4E133 		mov	r3, #115200
  45 000c 4360     		str	r3, [r0, #4]
  58:Src/usart.c   ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
  46              		.loc 1 58 0
  47 000e 0023     		movs	r3, #0
  48 0010 8360     		str	r3, [r0, #8]
  59:Src/usart.c   ****   huart2.Init.StopBits = UART_STOPBITS_1;
  49              		.loc 1 59 0
  50 0012 C360     		str	r3, [r0, #12]
  60:Src/usart.c   ****   huart2.Init.Parity = UART_PARITY_NONE;
  51              		.loc 1 60 0
  52 0014 0361     		str	r3, [r0, #16]
  61:Src/usart.c   ****   huart2.Init.Mode = UART_MODE_TX_RX;
  53              		.loc 1 61 0
  54 0016 0C22     		movs	r2, #12
ARM GAS  /tmp/cc7PPYB5.s 			page 3


  55 0018 4261     		str	r2, [r0, #20]
  62:Src/usart.c   ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  56              		.loc 1 62 0
  57 001a 8361     		str	r3, [r0, #24]
  63:Src/usart.c   ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
  58              		.loc 1 63 0
  59 001c C361     		str	r3, [r0, #28]
  64:Src/usart.c   ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
  60              		.loc 1 64 0
  61 001e 0362     		str	r3, [r0, #32]
  65:Src/usart.c   ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
  62              		.loc 1 65 0
  63 0020 4362     		str	r3, [r0, #36]
  66:Src/usart.c   ****   if (HAL_UART_Init(&huart2) != HAL_OK)
  64              		.loc 1 66 0
  65 0022 FFF7FEFF 		bl	HAL_UART_Init
  66              	.LVL0:
  67 0026 18B1     		cbz	r0, .L1
  67:Src/usart.c   ****   {
  68:Src/usart.c   ****     _Error_Handler(__FILE__, __LINE__);
  68              		.loc 1 68 0
  69 0028 4421     		movs	r1, #68
  70 002a 0448     		ldr	r0, .L4+8
  71 002c FFF7FEFF 		bl	_Error_Handler
  72              	.LVL1:
  73              	.L1:
  74 0030 08BD     		pop	{r3, pc}
  75              	.L5:
  76 0032 00BF     		.align	2
  77              	.L4:
  78 0034 00000000 		.word	huart2
  79 0038 00440040 		.word	1073759232
  80 003c 00000000 		.word	.LC0
  81              		.cfi_endproc
  82              	.LFE124:
  84              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  85              		.align	2
  86              		.global	HAL_UART_MspInit
  87              		.thumb
  88              		.thumb_func
  90              	HAL_UART_MspInit:
  91              	.LFB125:
  69:Src/usart.c   ****   }
  70:Src/usart.c   **** 
  71:Src/usart.c   **** }
  72:Src/usart.c   **** 
  73:Src/usart.c   **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  74:Src/usart.c   **** {
  92              		.loc 1 74 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 24
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96              	.LVL2:
  75:Src/usart.c   **** 
  76:Src/usart.c   ****   GPIO_InitTypeDef GPIO_InitStruct;
  77:Src/usart.c   ****   if(uartHandle->Instance==USART2)
  97              		.loc 1 77 0
ARM GAS  /tmp/cc7PPYB5.s 			page 4


  98 0000 0268     		ldr	r2, [r0]
  99 0002 114B     		ldr	r3, .L10
 100 0004 9A42     		cmp	r2, r3
 101 0006 1DD1     		bne	.L9
  74:Src/usart.c   **** 
 102              		.loc 1 74 0
 103 0008 00B5     		push	{lr}
 104              	.LCFI1:
 105              		.cfi_def_cfa_offset 4
 106              		.cfi_offset 14, -4
 107 000a 87B0     		sub	sp, sp, #28
 108              	.LCFI2:
 109              		.cfi_def_cfa_offset 32
 110              	.LBB2:
  78:Src/usart.c   ****   {
  79:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspInit 0 */
  80:Src/usart.c   **** 
  81:Src/usart.c   ****   /* USER CODE END USART2_MspInit 0 */
  82:Src/usart.c   ****     /* USART2 clock enable */
  83:Src/usart.c   ****     __HAL_RCC_USART2_CLK_ENABLE();
 111              		.loc 1 83 0
 112 000c 03F5E633 		add	r3, r3, #117760
 113 0010 DA69     		ldr	r2, [r3, #28]
 114 0012 42F40032 		orr	r2, r2, #131072
 115 0016 DA61     		str	r2, [r3, #28]
 116 0018 DB69     		ldr	r3, [r3, #28]
 117 001a 03F40033 		and	r3, r3, #131072
 118 001e 0093     		str	r3, [sp]
 119 0020 009B     		ldr	r3, [sp]
 120              	.LBE2:
  84:Src/usart.c   ****   
  85:Src/usart.c   ****     /**USART2 GPIO Configuration    
  86:Src/usart.c   ****     PA2     ------> USART2_TX
  87:Src/usart.c   ****     PA3     ------> USART2_RX 
  88:Src/usart.c   ****     */
  89:Src/usart.c   ****     GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 121              		.loc 1 89 0
 122 0022 0C23     		movs	r3, #12
 123 0024 0193     		str	r3, [sp, #4]
  90:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 124              		.loc 1 90 0
 125 0026 0223     		movs	r3, #2
 126 0028 0293     		str	r3, [sp, #8]
  91:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 127              		.loc 1 91 0
 128 002a 0023     		movs	r3, #0
 129 002c 0393     		str	r3, [sp, #12]
  92:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 130              		.loc 1 92 0
 131 002e 0493     		str	r3, [sp, #16]
  93:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 132              		.loc 1 93 0
 133 0030 0723     		movs	r3, #7
 134 0032 0593     		str	r3, [sp, #20]
  94:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 135              		.loc 1 94 0
 136 0034 01A9     		add	r1, sp, #4
ARM GAS  /tmp/cc7PPYB5.s 			page 5


 137 0036 4FF09040 		mov	r0, #1207959552
 138              	.LVL3:
 139 003a FFF7FEFF 		bl	HAL_GPIO_Init
 140              	.LVL4:
  95:Src/usart.c   **** 
  96:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspInit 1 */
  97:Src/usart.c   **** 
  98:Src/usart.c   ****   /* USER CODE END USART2_MspInit 1 */
  99:Src/usart.c   ****   }
 100:Src/usart.c   **** }
 141              		.loc 1 100 0
 142 003e 07B0     		add	sp, sp, #28
 143              	.LCFI3:
 144              		.cfi_def_cfa_offset 4
 145              		@ sp needed
 146 0040 5DF804FB 		ldr	pc, [sp], #4
 147              	.LVL5:
 148              	.L9:
 149              	.LCFI4:
 150              		.cfi_def_cfa_offset 0
 151              		.cfi_restore 14
 152 0044 7047     		bx	lr
 153              	.L11:
 154 0046 00BF     		.align	2
 155              	.L10:
 156 0048 00440040 		.word	1073759232
 157              		.cfi_endproc
 158              	.LFE125:
 160              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 161              		.align	2
 162              		.global	HAL_UART_MspDeInit
 163              		.thumb
 164              		.thumb_func
 166              	HAL_UART_MspDeInit:
 167              	.LFB126:
 101:Src/usart.c   **** 
 102:Src/usart.c   **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 103:Src/usart.c   **** {
 168              		.loc 1 103 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              	.LVL6:
 173 0000 08B5     		push	{r3, lr}
 174              	.LCFI5:
 175              		.cfi_def_cfa_offset 8
 176              		.cfi_offset 3, -8
 177              		.cfi_offset 14, -4
 104:Src/usart.c   **** 
 105:Src/usart.c   ****   if(uartHandle->Instance==USART2)
 178              		.loc 1 105 0
 179 0002 0268     		ldr	r2, [r0]
 180 0004 064B     		ldr	r3, .L15
 181 0006 9A42     		cmp	r2, r3
 182 0008 09D1     		bne	.L12
 106:Src/usart.c   ****   {
 107:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspDeInit 0 */
ARM GAS  /tmp/cc7PPYB5.s 			page 6


 108:Src/usart.c   **** 
 109:Src/usart.c   ****   /* USER CODE END USART2_MspDeInit 0 */
 110:Src/usart.c   ****     /* Peripheral clock disable */
 111:Src/usart.c   ****     __HAL_RCC_USART2_CLK_DISABLE();
 183              		.loc 1 111 0
 184 000a 064A     		ldr	r2, .L15+4
 185 000c D369     		ldr	r3, [r2, #28]
 186 000e 23F40033 		bic	r3, r3, #131072
 187 0012 D361     		str	r3, [r2, #28]
 112:Src/usart.c   ****   
 113:Src/usart.c   ****     /**USART2 GPIO Configuration    
 114:Src/usart.c   ****     PA2     ------> USART2_TX
 115:Src/usart.c   ****     PA3     ------> USART2_RX 
 116:Src/usart.c   ****     */
 117:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOA, USART_TX_Pin|USART_RX_Pin);
 188              		.loc 1 117 0
 189 0014 0C21     		movs	r1, #12
 190 0016 4FF09040 		mov	r0, #1207959552
 191              	.LVL7:
 192 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 193              	.LVL8:
 194              	.L12:
 195 001e 08BD     		pop	{r3, pc}
 196              	.L16:
 197              		.align	2
 198              	.L15:
 199 0020 00440040 		.word	1073759232
 200 0024 00100240 		.word	1073876992
 201              		.cfi_endproc
 202              	.LFE126:
 204              		.comm	huart2,112,4
 205              		.section	.rodata.str1.4,"aMS",%progbits,1
 206              		.align	2
 207              	.LC0:
 208 0000 5372632F 		.ascii	"Src/usart.c\000"
 208      75736172 
 208      742E6300 
 209              		.text
 210              	.Letext0:
 211              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 212              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 213              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 214              		.file 5 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 215              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 216              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 217              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 218              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 219              		.file 10 "Inc/usart.h"
ARM GAS  /tmp/cc7PPYB5.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 usart.c
     /tmp/cc7PPYB5.s:22     .text.MX_USART2_UART_Init:00000000 $t
     /tmp/cc7PPYB5.s:27     .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
     /tmp/cc7PPYB5.s:78     .text.MX_USART2_UART_Init:00000034 $d
                            *COM*:00000070 huart2
     /tmp/cc7PPYB5.s:85     .text.HAL_UART_MspInit:00000000 $t
     /tmp/cc7PPYB5.s:90     .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
     /tmp/cc7PPYB5.s:156    .text.HAL_UART_MspInit:00000048 $d
     /tmp/cc7PPYB5.s:161    .text.HAL_UART_MspDeInit:00000000 $t
     /tmp/cc7PPYB5.s:166    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
     /tmp/cc7PPYB5.s:199    .text.HAL_UART_MspDeInit:00000020 $d
     /tmp/cc7PPYB5.s:206    .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_UART_Init
_Error_Handler
HAL_GPIO_Init
HAL_GPIO_DeInit
