ARM GAS  /tmp/ccfc96Pv.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32f3xx_hal_uart.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	UART_EndTxTransfer:
  27              	.LFB167:
  28              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @file    stm32f3xx_hal_uart.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   [..]
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) UART interrupts handling:
ARM GAS  /tmp/ccfc96Pv.s 			page 2


  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                 RXNE interrupt and Error Interrupts) are managed using the macros
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                 __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit and receive 
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         the HAL_UART_Init() API.
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    [..]
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (@) These APIs (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_MultiProcessor_Init(),
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         also configure the low level Hardware (GPIO, CLOCK, CORTEX...etc) by
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    [..]
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    [..] Three operation modes are available within this driver :
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      *** Polling mode IO operation ***
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      =================================
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      *** Interrupt mode IO operation ***
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      ===================================
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT()
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT()
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
ARM GAS  /tmp/ccfc96Pv.s 			page 3


  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      *** DMA mode IO operation ***
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      ==============================
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA()
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA()
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      *** UART HAL driver macros list ***
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      =============================================
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      [..]
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   @endverbatim
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @attention
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *      without specific prior written permission.
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
ARM GAS  /tmp/ccfc96Pv.s 			page 4


 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #include "stm32f3xx_hal.h"
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @addtogroup STM32F3xx_HAL_Driver
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART UART
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief UART HAL module driver
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #define UART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8)) /*!< UART or U
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
ARM GAS  /tmp/ccfc96Pv.s 			page 5


 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** ===============================================================================
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     in asynchronous mode.
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Baud Rate
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Word Length
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Stop Bit
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Parity
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Hardware flow control
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Receiver/transmitter modes
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Over Sampling Method
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) One-Bit Sampling Method
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) data logical level inversion
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) RX and TX pins swap
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) RX overrun detection disabling
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) DMA disabling on RX error
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) MSB first on communication line
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) auto Baud rate detection
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init()
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     API follow respectively the UART asynchronous, UART Half duplex, UART LIN mode and
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     multiprocessor configuration procedures (details for the procedures are available in reference 
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /*
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   Additional Table: If the parity is enabled, then the MSB bit of the data written
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     in the data register is transmitted but is changed by the parity bit.
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     According to device capability (support or not of 7-bit word length),
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     frame length is either defined by the M bit (8-bits or 9-bits)
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     or by the M1 and M0 bits (7-bit, 8-bit or 9-bit).
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                     Possible UART frame formats are as listed in the following table:
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccfc96Pv.s 			page 6


 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       Table 1. UART frame format.             
 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |       M bit       |  PCE bit  |             UART frame                |
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |         0         |     0     |    | SB |    8-bit data   | STB |     |
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |         0         |     1     |    | SB | 7-bit data | PB | STB |     |
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |         1         |     0     |    | SB |    9-bit data   | STB |     |
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |         1         |     1     |    | SB | 8-bit data | PB | STB |     |
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    0    |    0    |     0     |    | SB |    8 bit data   | STB |     |
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    0    |    0    |     1     |    | SB | 7 bit data | PB | STB |     |
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    0    |    1    |     0     |    | SB |    9 bit data   | STB |     |
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    0    |    1    |     1     |    | SB | 8 bit data | PB | STB |     |
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    1    |    0    |     0     |    | SB |    7 bit data   | STB |     |
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       |    1    |    0    |     1     |    | SB | 6 bit data | PB | STB |     |
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check the parameters */
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check the parameters */
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
ARM GAS  /tmp/ccfc96Pv.s 			page 7


 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check UART instance */
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccfc96Pv.s 			page 8


 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle .
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param BreakDetectLength specifies the LIN break detection length.
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        This parameter can be one of the following values:
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the LIN UART instance */
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
ARM GAS  /tmp/ccfc96Pv.s 			page 9


 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the Break detection length parameter */
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->Init.WordLength != UART_WORDLENGTH_8B)
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
ARM GAS  /tmp/ccfc96Pv.s 			page 10


 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Address UART node address (4-, 6-, 7- or 8-bit long).
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param WakeUpMethod specifies the UART wakeup method.
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        This parameter can be one of the following values:
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the wake up method parameter */
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
ARM GAS  /tmp/ccfc96Pv.s 			page 11


 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Peripheral */
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart == NULL)
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the Peripheral */
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DeInit the low level hardware */
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlock */
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccfc96Pv.s 			page 12


 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                       ##### IO operation functions #####
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     and Half duplex data transfers.
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) There are two mode of transfer:
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (++) Blocking mode: The communication is performed in polling mode.
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            after finishing transfer.
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (++) Non-Blocking mode: The communication is performed using Interrupts
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The end of the data processing will be indicated through the
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            using DMA mode.
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
ARM GAS  /tmp/ccfc96Pv.s 			page 13


 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Blocking mode API's are :
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Transmit()
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Receive()
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Transmit_IT()
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Receive_IT()
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_IRQHandler()
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Transmit_DMA()
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Receive_DMA()
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_DMAPause()
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_DMAResume()
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_DMAStop()
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_TxHalfCpltCallback()
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_TxCpltCallback()
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_RxHalfCpltCallback()
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_RxCpltCallback()
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_ErrorCallback()
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Abort()
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortTransmit()
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortReceive()
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_Abort_IT()
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortTransmit_IT()
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortReceive_IT()
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortCpltCallback()
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortTransmitCpltCallback()
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) HAL_UART_AbortReceiveCpltCallback()
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         Errors are handled as follows :
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Error is considered as Recoverable and non blocking : Transfer could go till end, but 
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in In
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              Received character is then retrieved and stored in Rx buffer, Error code is set to all
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UA
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              If user wants to abort it, Abort services should be called by user.
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Error is considered as Blocking : Transfer could not be completed properly and is abor
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() u
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccfc96Pv.s 			page 14


 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData Pointer to data buffer.
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size Amount of data to be sent.
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Timeout Timeout duration.
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart = 0U;
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return  HAL_ERROR;
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     tickstart = HAL_GetTick();
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount--;
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pData += 2U;
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
ARM GAS  /tmp/ccfc96Pv.s 			page 15


 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData pointer to data buffer.
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size amount of data to be received.
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Timeout Timeout duration.
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t uhMask;
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart = 0U;
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return  HAL_ERROR;
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     tickstart = HAL_GetTick();
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* as long as data have to be received */
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxXferCount--;
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
ARM GAS  /tmp/ccfc96Pv.s 			page 16


 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         tmp = (uint16_t*) pData ;
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pData +=2U;
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData pointer to data buffer.
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size amount of data to be sent.
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccfc96Pv.s 			page 17


 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Transmit Data Register Empty Interrupt */
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData pointer to data buffer.
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size amount of data to be received.
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Parity Error and Data Register not empty Interrupts */
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
ARM GAS  /tmp/ccfc96Pv.s 			page 18


 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData pointer to data buffer.
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size amount of data to be sent.
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note This function starts a DMA transfer in interrupt mode meaning that
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *       DMA half transfer complete, DMA transfer complete and DMA transfer
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *       error interrupts are enabled
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if UART instance supports continuous communication using DMA */
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_DMA_INSTANCE(huart->Instance));
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the DMA error callback */
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the DMA abort callback */
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->TDR, S
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
ARM GAS  /tmp/ccfc96Pv.s 			page 19


1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData pointer to data buffer.
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size amount of data to be received.
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         the parity bit (MSB position).
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note This function starts a DMA transfer in interrupt mode meaning that
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *       DMA half transfer complete, DMA transfer complete and DMA transfer
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *       error interrupts are enabled
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if UART instance supports continuous communication using DMA */
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_DMA_INSTANCE(huart->Instance));
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the DMA error callback */
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the DMA abort callback */
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the DMA channel */
ARM GAS  /tmp/ccfc96Pv.s 			page 20


1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuffPtr, S
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Pause the DMA Transfer.
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
ARM GAS  /tmp/ccfc96Pv.s 			page 21


1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Resume the DMA Transfer.
1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Stop the DMA Transfer.
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback: 
1157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete  
1158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of 
1159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
ARM GAS  /tmp/ccfc96Pv.s 			page 22


1171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccfc96Pv.s 			page 23


1228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U; 
1246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U; 
1247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Handle ErrorCode to No Error */
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
ARM GAS  /tmp/ccfc96Pv.s 			page 24


1285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Tx transfer counter */
1295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U; 
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Rx transfer counter */
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U; 
1339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
ARM GAS  /tmp/ccfc96Pv.s 			page 25


1342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      before any call to DMA Abort functions */
1373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->hdmatx != NULL)
1375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        Otherwise, set it to NULL */
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->hdmarx != NULL)
1389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        Otherwise, set it to NULL */
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
ARM GAS  /tmp/ccfc96Pv.s 			page 26


1399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
1402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised : 
1412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA TX */
1415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 0U;
1422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised : 
1435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA RX */
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 1U;
1442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 0U;
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (abortcplt == 1U)
1452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U; 
1455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
ARM GAS  /tmp/ccfc96Pv.s 			page 27


1456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset errorCode */
1458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
1504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA TX */
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
1510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
ARM GAS  /tmp/ccfc96Pv.s 			page 28


1513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Reset Tx transfer counter */
1515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount = 0U; 
1516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
1519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
1522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset Tx transfer counter */
1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U; 
1528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
1534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** */
1553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
ARM GAS  /tmp/ccfc96Pv.s 			page 29


1570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA RX */
1572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
1576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Reset Rx transfer counter */
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxXferCount = 0U; 
1582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
1584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
1585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
1588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
1591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset Rx transfer counter */
1596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U; 
1597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
1606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Handle UART interrupt request.
1613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
1619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
1620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr3its;
1621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t errorflags;
1622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If no error occurs */
1624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
1625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (errorflags == RESET)
1626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
ARM GAS  /tmp/ccfc96Pv.s 			page 30


1627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       UART_Receive_IT(huart);
1631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
1632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }  
1634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If some errors occur */
1636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   cr3its = READ_REG(huart->Instance->CR3);
1637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(   (errorflags != RESET)
1638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
1639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
1640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
1643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_PEF);
1645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
1647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
1650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_FEF);
1653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
1655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_NEF);
1661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
1663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     
1665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(((isrflags & USART_ISR_ORE) != RESET) &&
1667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
1668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_OREF);
1670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
1672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
1675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
1676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
1678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         UART_Receive_IT(huart);
1681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
ARM GAS  /tmp/ccfc96Pv.s 			page 31


1684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          consider error as blocking */
1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) ||
1686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {  
1688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         UART_EndRxTransfer(huart);
1692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           if(huart->hdmarx != NULL)
1700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           {
1701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /* Set the UART DMA Abort callback : 
1702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
1704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /* Abort DMA RX */
1706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             {
1708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
1710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             }
1711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           }
1712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           else
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           {
1714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /* Call user error callback */
1715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
1716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           }
1717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         else
1719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Call user error callback */
1721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
1722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Non Blocking error : transfer could go on. 
1727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Error is notified to user through user error callback */
1728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
1729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
1730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
1733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   } /* End if some error occurs */
1735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(((isrflags & USART_ISR_WUF) != RESET) && ((cr3its & USART_CR3_WUFIE) != RESET))
1738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_WUF);
1740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
ARM GAS  /tmp/ccfc96Pv.s 			page 32


1741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
1744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
1745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(((isrflags & USART_ISR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
1749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_Transmit_IT(huart);
1751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
1752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(((isrflags & USART_ISR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
1756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
1758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
1759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
1765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
1775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
1780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
1790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Rx Transfer completed callback.
1795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
ARM GAS  /tmp/ccfc96Pv.s 			page 33


1798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
1805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
1810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
1820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief UART error callback.
1825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
1835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback (UART_HandleTypeDef *huart)
1844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
1850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
ARM GAS  /tmp/ccfc96Pv.s 			page 34


1855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback (UART_HandleTypeDef *huart)
1859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
1865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
1870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback (UART_HandleTypeDef *huart)
1874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
1877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
1880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
1881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
1885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
1888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  @brief   UART control functions
1889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
1890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
1891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
1892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
1894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
1895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
1896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
1898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
1899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
1900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
1901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
1902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
1903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
1904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Enable UART in mute mode (does not mean UART enters mute mode;
1908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
1909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
ARM GAS  /tmp/ccfc96Pv.s 			page 35


1912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
1913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
1920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
1921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
1929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
1930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
1934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    /* Disable USART mute mode by clearing the MME bit in the CR1 register */
1941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
1942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
1950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
1951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
1953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
1957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
1961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
1965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  /tmp/ccfc96Pv.s 			page 36


1969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear TE and RE bits */
1971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
1972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
1973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
1974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
1978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
1985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status.
1987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
1989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear TE and RE bits */
1995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
1996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
1997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
1998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
2001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Transmit break characters.
2009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
2015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
2019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Send break characters */
2023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->RQR |= UART_SENDBREAK_REQUEST;
2024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
ARM GAS  /tmp/ccfc96Pv.s 			page 37


2026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
2028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  *  @brief   UART Peripheral State functions
2040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  *
2041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
2042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ==============================================================================
2043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ==============================================================================
2045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
2046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides functions allowing to :
2047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) Return the UART handle state.
2048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) Return the UART handle error code
2049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
2051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
2052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Return the UART handle state.
2056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *               the configuration information for the specified UART.
2058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL state
2059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
2063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   temp1 = huart->gState;
2064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   temp2 = huart->RxState;
2065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *               the configuration information for the specified UART.
2073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval UART Error Code
2074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return huart->ErrorCode;
2078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccfc96Pv.s 			page 38


2083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
2089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
2099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
2100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
2101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t usartdiv                   = 0x0000U;
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
2105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  the UART Word Length, Parity, Mode and oversampling:
2118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set the M bits according to huart->Init.WordLength value
2119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set PCE and PS bits according to huart->Init.Parity value
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set TE and RE bits according to huart->Init.Mode value
2121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *  set OVER8 bit according to huart->Init.OverSampling value */
2122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
2123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
2124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    * to huart->Init.StopBits value */
2128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
2129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Configure
2132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    * - UART HardWare Flow Control: set CTSE and RTSE bits according
2133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *   to huart->Init.HwFlowCtl value
2134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    * - one-bit sampling method versus three samples' majority rule according
2135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    *   to huart->Init.OneBitSampling */
2136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl | huart->Init.OneBitSampling ;
2137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
2138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
ARM GAS  /tmp/ccfc96Pv.s 			page 39


2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
2141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
2143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
2144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (clocksource)
2146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
2149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
2152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
2155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
2158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
2161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default:
2164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         ret = HAL_ERROR;
2165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     brrtemp = usartdiv & 0xFFF0U;
2169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
2170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
2171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (clocksource)
2175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.B
2178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.B
2181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
2184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Ini
2187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
2190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default:
2193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         ret = HAL_ERROR;
2194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
ARM GAS  /tmp/ccfc96Pv.s 			page 40


2197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return ret;
2199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
2204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
2208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
2210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
2211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
2213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
2214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
2216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
2217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
2220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
2221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
2223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
2224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure data inversion */
2227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
2228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
2230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
2231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
2234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
2235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
2237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
2238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
2241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
2242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
2244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
2245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
2248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
2249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
2251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
2252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccfc96Pv.s 			page 41


2254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
2255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
2256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
2258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
2259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
2260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
2261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
2262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
2264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
2265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
2269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
2270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
2272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
2273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Check the UART Idle State.
2278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
2282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart = 0U;
2284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
2286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
2289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tickstart = HAL_GetTick();
2290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
2292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
2293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Wait until TEACK flag is set */
2295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
2296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Timeout Occured */
2298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
2299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if the Receiver is enabled */
2302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
2303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Wait until REACK flag is set */
2305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
2306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Timeout Occured */
2308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
2309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
ARM GAS  /tmp/ccfc96Pv.s 			page 42


2311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Initialize the UART State */
2313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
2317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
2324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Flag Specifies the UART flag to check
2326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Status Flag status (SET or RESET)
2327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Tickstart Tick start value
2328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  Timeout Timeout duration
2329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
2332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Wait until flag is set */
2334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
2335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check for the Timeout */
2337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
2338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) > Timeout))
2340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
2343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
2346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Process Unlocked */
2349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         __HAL_UNLOCK(huart);
2350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
2351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
  29              		.loc 1 2364 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccfc96Pv.s 			page 43


  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
2365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  35              		.loc 1 2366 0
  36 0000 0268     		ldr	r2, [r0]
  37 0002 1368     		ldr	r3, [r2]
  38 0004 23F0C003 		bic	r3, r3, #192
  39 0008 1360     		str	r3, [r2]
2367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  40              		.loc 1 2369 0
  41 000a 2023     		movs	r3, #32
  42 000c 80F86930 		strb	r3, [r0, #105]
  43 0010 7047     		bx	lr
  44              		.cfi_endproc
  45              	.LFE167:
  47 0012 00BF     		.section	.text.UART_EndRxTransfer,"ax",%progbits
  48              		.align	2
  49              		.thumb
  50              		.thumb_func
  52              	UART_EndRxTransfer:
  53              	.LFB168:
2370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
  54              		.loc 1 2379 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.LVL1:
2380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  60              		.loc 1 2381 0
  61 0000 0268     		ldr	r2, [r0]
  62 0002 1368     		ldr	r3, [r2]
  63 0004 23F49073 		bic	r3, r3, #288
  64 0008 1360     		str	r3, [r2]
2382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  65              		.loc 1 2382 0
  66 000a 0268     		ldr	r2, [r0]
  67 000c 9368     		ldr	r3, [r2, #8]
  68 000e 23F00103 		bic	r3, r3, #1
  69 0012 9360     		str	r3, [r2, #8]
2383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
ARM GAS  /tmp/ccfc96Pv.s 			page 44


  70              		.loc 1 2385 0
  71 0014 2023     		movs	r3, #32
  72 0016 80F86A30 		strb	r3, [r0, #106]
  73 001a 7047     		bx	lr
  74              		.cfi_endproc
  75              	.LFE168:
  77              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  78              		.align	2
  79              		.weak	HAL_UART_MspInit
  80              		.thumb
  81              		.thumb_func
  83              	HAL_UART_MspInit:
  84              	.LFB129:
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
  85              		.loc 1 610 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              		@ link register save eliminated.
  90              	.LVL2:
  91 0000 7047     		bx	lr
  92              		.cfi_endproc
  93              	.LFE129:
  95 0002 00BF     		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
  96              		.align	2
  97              		.weak	HAL_UART_MspDeInit
  98              		.thumb
  99              		.thumb_func
 101              	HAL_UART_MspDeInit:
 102              	.LFB130:
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 103              		.loc 1 625 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              		@ link register save eliminated.
 108              	.LVL3:
 109 0000 7047     		bx	lr
 110              		.cfi_endproc
 111              	.LFE130:
 113 0002 00BF     		.section	.text.HAL_UART_DeInit,"ax",%progbits
 114              		.align	2
 115              		.global	HAL_UART_DeInit
 116              		.thumb
 117              		.thumb_func
 119              	HAL_UART_DeInit:
 120              	.LFB128:
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 121              		.loc 1 572 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              	.LVL4:
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 126              		.loc 1 574 0
 127 0000 D8B1     		cbz	r0, .L7
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
ARM GAS  /tmp/ccfc96Pv.s 			page 45


 128              		.loc 1 572 0
 129 0002 38B5     		push	{r3, r4, r5, lr}
 130              	.LCFI0:
 131              		.cfi_def_cfa_offset 16
 132              		.cfi_offset 3, -16
 133              		.cfi_offset 4, -12
 134              		.cfi_offset 5, -8
 135              		.cfi_offset 14, -4
 136 0004 0446     		mov	r4, r0
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 137              		.loc 1 582 0
 138 0006 2423     		movs	r3, #36
 139 0008 80F86930 		strb	r3, [r0, #105]
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 140              		.loc 1 585 0
 141 000c 0268     		ldr	r2, [r0]
 142 000e 1368     		ldr	r3, [r2]
 143 0010 23F00103 		bic	r3, r3, #1
 144 0014 1360     		str	r3, [r2]
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 145              		.loc 1 587 0
 146 0016 0368     		ldr	r3, [r0]
 147 0018 0025     		movs	r5, #0
 148 001a 1D60     		str	r5, [r3]
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 149              		.loc 1 588 0
 150 001c 0368     		ldr	r3, [r0]
 151 001e 5D60     		str	r5, [r3, #4]
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 152              		.loc 1 589 0
 153 0020 0368     		ldr	r3, [r0]
 154 0022 9D60     		str	r5, [r3, #8]
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 155              		.loc 1 592 0
 156 0024 FFF7FEFF 		bl	HAL_UART_MspDeInit
 157              	.LVL5:
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 158              		.loc 1 594 0
 159 0028 E566     		str	r5, [r4, #108]
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 160              		.loc 1 595 0
 161 002a 84F86950 		strb	r5, [r4, #105]
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 162              		.loc 1 596 0
 163 002e 84F86A50 		strb	r5, [r4, #106]
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 164              		.loc 1 599 0
 165 0032 84F86850 		strb	r5, [r4, #104]
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 166              		.loc 1 601 0
 167 0036 2846     		mov	r0, r5
 168 0038 38BD     		pop	{r3, r4, r5, pc}
 169              	.LVL6:
 170              	.L7:
 171              	.LCFI1:
 172              		.cfi_def_cfa_offset 0
 173              		.cfi_restore 3
ARM GAS  /tmp/ccfc96Pv.s 			page 46


 174              		.cfi_restore 4
 175              		.cfi_restore 5
 176              		.cfi_restore 14
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 177              		.loc 1 576 0
 178 003a 0120     		movs	r0, #1
 179              	.LVL7:
 180 003c 7047     		bx	lr
 181              		.cfi_endproc
 182              	.LFE128:
 184 003e 00BF     		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 185              		.align	2
 186              		.global	HAL_UART_Transmit_IT
 187              		.thumb
 188              		.thumb_func
 190              	HAL_UART_Transmit_IT:
 191              	.LFB133:
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 192              		.loc 1 864 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 197              	.LVL8:
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 198              		.loc 1 866 0
 199 0000 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 200 0004 DBB2     		uxtb	r3, r3
 201 0006 202B     		cmp	r3, #32
 202 0008 18D1     		bne	.L12
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 203              		.loc 1 868 0
 204 000a C9B1     		cbz	r1, .L13
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 205              		.loc 1 868 0 is_stmt 0 discriminator 1
 206 000c D2B1     		cbz	r2, .L14
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 207              		.loc 1 874 0 is_stmt 1
 208 000e 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 209 0012 012B     		cmp	r3, #1
 210 0014 18D0     		beq	.L15
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 211              		.loc 1 876 0 discriminator 2
 212 0016 C164     		str	r1, [r0, #76]
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 213              		.loc 1 877 0 discriminator 2
 214 0018 A0F85020 		strh	r2, [r0, #80]	@ movhi
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 215              		.loc 1 878 0 discriminator 2
 216 001c A0F85220 		strh	r2, [r0, #82]	@ movhi
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 217              		.loc 1 880 0 discriminator 2
 218 0020 0023     		movs	r3, #0
 219 0022 C366     		str	r3, [r0, #108]
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 220              		.loc 1 881 0 discriminator 2
 221 0024 2122     		movs	r2, #33
ARM GAS  /tmp/ccfc96Pv.s 			page 47


 222              	.LVL9:
 223 0026 80F86920 		strb	r2, [r0, #105]
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 224              		.loc 1 884 0 discriminator 2
 225 002a 80F86830 		strb	r3, [r0, #104]
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 226              		.loc 1 887 0 discriminator 2
 227 002e 0168     		ldr	r1, [r0]
 228              	.LVL10:
 229 0030 0A68     		ldr	r2, [r1]
 230 0032 42F08002 		orr	r2, r2, #128
 231 0036 0A60     		str	r2, [r1]
 232              	.LVL11:
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 233              		.loc 1 889 0 discriminator 2
 234 0038 1846     		mov	r0, r3
 235              	.LVL12:
 236 003a 7047     		bx	lr
 237              	.LVL13:
 238              	.L12:
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 239              		.loc 1 893 0
 240 003c 0220     		movs	r0, #2
 241              	.LVL14:
 242 003e 7047     		bx	lr
 243              	.LVL15:
 244              	.L13:
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 245              		.loc 1 870 0
 246 0040 0120     		movs	r0, #1
 247              	.LVL16:
 248 0042 7047     		bx	lr
 249              	.LVL17:
 250              	.L14:
 251 0044 0120     		movs	r0, #1
 252              	.LVL18:
 253 0046 7047     		bx	lr
 254              	.LVL19:
 255              	.L15:
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 256              		.loc 1 874 0
 257 0048 0220     		movs	r0, #2
 258              	.LVL20:
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 259              		.loc 1 895 0
 260 004a 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE133:
 264              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 265              		.align	2
 266              		.global	HAL_UART_Receive_IT
 267              		.thumb
 268              		.thumb_func
 270              	HAL_UART_Receive_IT:
 271              	.LFB134:
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 272              		.loc 1 905 0
ARM GAS  /tmp/ccfc96Pv.s 			page 48


 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276              		@ link register save eliminated.
 277              	.LVL21:
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 278              		.loc 1 907 0
 279 0000 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 280 0004 DBB2     		uxtb	r3, r3
 281 0006 202B     		cmp	r3, #32
 282 0008 48D1     		bne	.L24
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 283              		.loc 1 909 0
 284 000a 0029     		cmp	r1, #0
 285 000c 48D0     		beq	.L25
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 286              		.loc 1 909 0 is_stmt 0 discriminator 1
 287 000e 002A     		cmp	r2, #0
 288 0010 48D0     		beq	.L26
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 289              		.loc 1 915 0 is_stmt 1
 290 0012 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 291 0016 012B     		cmp	r3, #1
 292 0018 46D0     		beq	.L27
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 293              		.loc 1 915 0 is_stmt 0 discriminator 2
 294 001a 0123     		movs	r3, #1
 295 001c 80F86830 		strb	r3, [r0, #104]
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 296              		.loc 1 917 0 is_stmt 1 discriminator 2
 297 0020 4165     		str	r1, [r0, #84]
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 298              		.loc 1 918 0 discriminator 2
 299 0022 A0F85820 		strh	r2, [r0, #88]	@ movhi
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 300              		.loc 1 919 0 discriminator 2
 301 0026 A0F85A20 		strh	r2, [r0, #90]	@ movhi
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 302              		.loc 1 922 0 discriminator 2
 303 002a 8368     		ldr	r3, [r0, #8]
 304 002c B3F5805F 		cmp	r3, #4096
 305 0030 0AD1     		bne	.L18
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 306              		.loc 1 922 0 is_stmt 0 discriminator 1
 307 0032 0369     		ldr	r3, [r0, #16]
 308 0034 23B9     		cbnz	r3, .L19
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 309              		.loc 1 922 0 discriminator 3
 310 0036 40F2FF13 		movw	r3, #511
 311 003a A0F85C30 		strh	r3, [r0, #92]	@ movhi
 312 003e 1AE0     		b	.L20
 313              	.L19:
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 314              		.loc 1 922 0 discriminator 4
 315 0040 FF23     		movs	r3, #255
 316 0042 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 317 0046 16E0     		b	.L20
ARM GAS  /tmp/ccfc96Pv.s 			page 49


 318              	.L18:
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 319              		.loc 1 922 0 discriminator 2
 320 0048 4BB9     		cbnz	r3, .L21
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 321              		.loc 1 922 0 discriminator 5
 322 004a 0369     		ldr	r3, [r0, #16]
 323 004c 1BB9     		cbnz	r3, .L22
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 324              		.loc 1 922 0 discriminator 7
 325 004e FF23     		movs	r3, #255
 326 0050 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 327 0054 0FE0     		b	.L20
 328              	.L22:
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 329              		.loc 1 922 0 discriminator 8
 330 0056 7F23     		movs	r3, #127
 331 0058 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 332 005c 0BE0     		b	.L20
 333              	.L21:
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 334              		.loc 1 922 0 discriminator 6
 335 005e B3F1805F 		cmp	r3, #268435456
 336 0062 08D1     		bne	.L20
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 337              		.loc 1 922 0 discriminator 9
 338 0064 0369     		ldr	r3, [r0, #16]
 339 0066 1BB9     		cbnz	r3, .L23
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 340              		.loc 1 922 0 discriminator 10
 341 0068 7F23     		movs	r3, #127
 342 006a A0F85C30 		strh	r3, [r0, #92]	@ movhi
 343 006e 02E0     		b	.L20
 344              	.L23:
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 345              		.loc 1 922 0 discriminator 11
 346 0070 3F23     		movs	r3, #63
 347 0072 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 348              	.L20:
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 349              		.loc 1 924 0 is_stmt 1
 350 0076 0023     		movs	r3, #0
 351 0078 C366     		str	r3, [r0, #108]
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 352              		.loc 1 925 0
 353 007a 2222     		movs	r2, #34
 354              	.LVL22:
 355 007c 80F86A20 		strb	r2, [r0, #106]
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 356              		.loc 1 928 0
 357 0080 80F86830 		strb	r3, [r0, #104]
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 358              		.loc 1 931 0
 359 0084 0168     		ldr	r1, [r0]
 360              	.LVL23:
 361 0086 8A68     		ldr	r2, [r1, #8]
 362 0088 42F00102 		orr	r2, r2, #1
ARM GAS  /tmp/ccfc96Pv.s 			page 50


 363 008c 8A60     		str	r2, [r1, #8]
 364              	.LVL24:
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 365              		.loc 1 934 0
 366 008e 0168     		ldr	r1, [r0]
 367 0090 0A68     		ldr	r2, [r1]
 368 0092 42F49072 		orr	r2, r2, #288
 369 0096 0A60     		str	r2, [r1]
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 370              		.loc 1 936 0
 371 0098 1846     		mov	r0, r3
 372              	.LVL25:
 373 009a 7047     		bx	lr
 374              	.LVL26:
 375              	.L24:
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 376              		.loc 1 940 0
 377 009c 0220     		movs	r0, #2
 378              	.LVL27:
 379 009e 7047     		bx	lr
 380              	.LVL28:
 381              	.L25:
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 382              		.loc 1 911 0
 383 00a0 0120     		movs	r0, #1
 384              	.LVL29:
 385 00a2 7047     		bx	lr
 386              	.LVL30:
 387              	.L26:
 388 00a4 0120     		movs	r0, #1
 389              	.LVL31:
 390 00a6 7047     		bx	lr
 391              	.LVL32:
 392              	.L27:
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 393              		.loc 1 915 0
 394 00a8 0220     		movs	r0, #2
 395              	.LVL33:
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 396              		.loc 1 942 0
 397 00aa 7047     		bx	lr
 398              		.cfi_endproc
 399              	.LFE134:
 401              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 402              		.align	2
 403              		.global	HAL_UART_Transmit_DMA
 404              		.thumb
 405              		.thumb_func
 407              	HAL_UART_Transmit_DMA:
 408              	.LFB135:
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if UART instance supports continuous communication using DMA */
 409              		.loc 1 955 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
 412              		@ frame_needed = 0, uses_anonymous_args = 0
 413              	.LVL34:
 414 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /tmp/ccfc96Pv.s 			page 51


 415              	.LCFI2:
 416              		.cfi_def_cfa_offset 16
 417              		.cfi_offset 3, -16
 418              		.cfi_offset 4, -12
 419              		.cfi_offset 5, -8
 420              		.cfi_offset 14, -4
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 421              		.loc 1 960 0
 422 0002 90F86940 		ldrb	r4, [r0, #105]	@ zero_extendqisi2
 423 0006 E4B2     		uxtb	r4, r4
 424 0008 202C     		cmp	r4, #32
 425 000a 33D1     		bne	.L30
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 426              		.loc 1 962 0
 427 000c 0029     		cmp	r1, #0
 428 000e 33D0     		beq	.L31
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 429              		.loc 1 962 0 is_stmt 0 discriminator 1
 430 0010 002A     		cmp	r2, #0
 431 0012 33D0     		beq	.L32
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 432              		.loc 1 968 0 is_stmt 1
 433 0014 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 434 0018 012B     		cmp	r3, #1
 435 001a 31D0     		beq	.L33
 436 001c 1346     		mov	r3, r2
 437 001e 0446     		mov	r4, r0
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 438              		.loc 1 968 0 is_stmt 0 discriminator 2
 439 0020 0122     		movs	r2, #1
 440              	.LVL35:
 441 0022 80F86820 		strb	r2, [r0, #104]
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize = Size;
 442              		.loc 1 970 0 is_stmt 1 discriminator 2
 443 0026 C164     		str	r1, [r0, #76]
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 444              		.loc 1 971 0 discriminator 2
 445 0028 A0F85030 		strh	r3, [r0, #80]	@ movhi
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 446              		.loc 1 972 0 discriminator 2
 447 002c A0F85230 		strh	r3, [r0, #82]	@ movhi
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 448              		.loc 1 974 0 discriminator 2
 449 0030 0025     		movs	r5, #0
 450 0032 C566     		str	r5, [r0, #108]
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 451              		.loc 1 975 0 discriminator 2
 452 0034 2122     		movs	r2, #33
 453 0036 80F86920 		strb	r2, [r0, #105]
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 454              		.loc 1 978 0 discriminator 2
 455 003a 026E     		ldr	r2, [r0, #96]
 456 003c 1149     		ldr	r1, .L35
 457              	.LVL36:
 458 003e 9162     		str	r1, [r2, #40]
 459              	.LVL37:
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccfc96Pv.s 			page 52


 460              		.loc 1 981 0 discriminator 2
 461 0040 026E     		ldr	r2, [r0, #96]
 462 0042 1149     		ldr	r1, .L35+4
 463 0044 D162     		str	r1, [r2, #44]
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 464              		.loc 1 984 0 discriminator 2
 465 0046 026E     		ldr	r2, [r0, #96]
 466 0048 1049     		ldr	r1, .L35+8
 467 004a 1163     		str	r1, [r2, #48]
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 468              		.loc 1 987 0 discriminator 2
 469 004c 026E     		ldr	r2, [r0, #96]
 470 004e 5563     		str	r5, [r2, #52]
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 471              		.loc 1 990 0 discriminator 2
 472 0050 0268     		ldr	r2, [r0]
 473 0052 2832     		adds	r2, r2, #40
 474 0054 C16C     		ldr	r1, [r0, #76]
 475 0056 006E     		ldr	r0, [r0, #96]
 476              	.LVL38:
 477 0058 FFF7FEFF 		bl	HAL_DMA_Start_IT
 478              	.LVL39:
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 479              		.loc 1 993 0 discriminator 2
 480 005c 2368     		ldr	r3, [r4]
 481 005e 4022     		movs	r2, #64
 482 0060 1A62     		str	r2, [r3, #32]
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 483              		.loc 1 996 0 discriminator 2
 484 0062 84F86850 		strb	r5, [r4, #104]
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 485              		.loc 1 1000 0 discriminator 2
 486 0066 2268     		ldr	r2, [r4]
 487 0068 9368     		ldr	r3, [r2, #8]
 488 006a 43F08003 		orr	r3, r3, #128
 489 006e 9360     		str	r3, [r2, #8]
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 490              		.loc 1 1002 0 discriminator 2
 491 0070 2846     		mov	r0, r5
 492 0072 38BD     		pop	{r3, r4, r5, pc}
 493              	.LVL40:
 494              	.L30:
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 495              		.loc 1 1006 0
 496 0074 0220     		movs	r0, #2
 497              	.LVL41:
 498 0076 38BD     		pop	{r3, r4, r5, pc}
 499              	.LVL42:
 500              	.L31:
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 501              		.loc 1 964 0
 502 0078 0120     		movs	r0, #1
 503              	.LVL43:
 504 007a 38BD     		pop	{r3, r4, r5, pc}
 505              	.LVL44:
 506              	.L32:
 507 007c 0120     		movs	r0, #1
ARM GAS  /tmp/ccfc96Pv.s 			page 53


 508              	.LVL45:
 509 007e 38BD     		pop	{r3, r4, r5, pc}
 510              	.LVL46:
 511              	.L33:
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 512              		.loc 1 968 0
 513 0080 0220     		movs	r0, #2
 514              	.LVL47:
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 515              		.loc 1 1008 0
 516 0082 38BD     		pop	{r3, r4, r5, pc}
 517              	.L36:
 518              		.align	2
 519              	.L35:
 520 0084 00000000 		.word	UART_DMATransmitCplt
 521 0088 00000000 		.word	UART_DMATxHalfCplt
 522 008c 00000000 		.word	UART_DMAError
 523              		.cfi_endproc
 524              	.LFE135:
 526              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 527              		.align	2
 528              		.global	HAL_UART_Receive_DMA
 529              		.thumb
 530              		.thumb_func
 532              	HAL_UART_Receive_DMA:
 533              	.LFB136:
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if UART instance supports continuous communication using DMA */
 534              		.loc 1 1023 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              	.LVL48:
 539 0000 38B5     		push	{r3, r4, r5, lr}
 540              	.LCFI3:
 541              		.cfi_def_cfa_offset 16
 542              		.cfi_offset 3, -16
 543              		.cfi_offset 4, -12
 544              		.cfi_offset 5, -8
 545              		.cfi_offset 14, -4
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 546              		.loc 1 1028 0
 547 0002 90F86A40 		ldrb	r4, [r0, #106]	@ zero_extendqisi2
 548 0006 E4B2     		uxtb	r4, r4
 549 0008 202C     		cmp	r4, #32
 550 000a 38D1     		bne	.L39
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 551              		.loc 1 1030 0
 552 000c 0029     		cmp	r1, #0
 553 000e 38D0     		beq	.L40
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 554              		.loc 1 1030 0 is_stmt 0 discriminator 1
 555 0010 002A     		cmp	r2, #0
 556 0012 38D0     		beq	.L41
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 557              		.loc 1 1036 0 is_stmt 1
 558 0014 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 559 0018 012B     		cmp	r3, #1
ARM GAS  /tmp/ccfc96Pv.s 			page 54


 560 001a 36D0     		beq	.L42
 561 001c 1346     		mov	r3, r2
 562 001e 0446     		mov	r4, r0
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 563              		.loc 1 1036 0 is_stmt 0 discriminator 2
 564 0020 0122     		movs	r2, #1
 565              	.LVL49:
 566 0022 80F86820 		strb	r2, [r0, #104]
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 567              		.loc 1 1038 0 is_stmt 1 discriminator 2
 568 0026 4165     		str	r1, [r0, #84]
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 569              		.loc 1 1039 0 discriminator 2
 570 0028 A0F85830 		strh	r3, [r0, #88]	@ movhi
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 571              		.loc 1 1041 0 discriminator 2
 572 002c 0025     		movs	r5, #0
 573 002e C566     		str	r5, [r0, #108]
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 574              		.loc 1 1042 0 discriminator 2
 575 0030 2222     		movs	r2, #34
 576 0032 80F86A20 		strb	r2, [r0, #106]
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 577              		.loc 1 1045 0 discriminator 2
 578 0036 426E     		ldr	r2, [r0, #100]
 579 0038 1549     		ldr	r1, .L44
 580              	.LVL50:
 581 003a 9162     		str	r1, [r2, #40]
 582              	.LVL51:
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 583              		.loc 1 1048 0 discriminator 2
 584 003c 426E     		ldr	r2, [r0, #100]
 585 003e 1549     		ldr	r1, .L44+4
 586 0040 D162     		str	r1, [r2, #44]
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 587              		.loc 1 1051 0 discriminator 2
 588 0042 426E     		ldr	r2, [r0, #100]
 589 0044 1449     		ldr	r1, .L44+8
 590 0046 1163     		str	r1, [r2, #48]
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 591              		.loc 1 1054 0 discriminator 2
 592 0048 426E     		ldr	r2, [r0, #100]
 593 004a 5563     		str	r5, [r2, #52]
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 594              		.loc 1 1057 0 discriminator 2
 595 004c 0168     		ldr	r1, [r0]
 596 004e 426D     		ldr	r2, [r0, #84]
 597 0050 2431     		adds	r1, r1, #36
 598 0052 406E     		ldr	r0, [r0, #100]
 599              	.LVL52:
 600 0054 FFF7FEFF 		bl	HAL_DMA_Start_IT
 601              	.LVL53:
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 602              		.loc 1 1060 0 discriminator 2
 603 0058 84F86850 		strb	r5, [r4, #104]
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 604              		.loc 1 1063 0 discriminator 2
ARM GAS  /tmp/ccfc96Pv.s 			page 55


 605 005c 2268     		ldr	r2, [r4]
 606 005e 1368     		ldr	r3, [r2]
 607 0060 43F48073 		orr	r3, r3, #256
 608 0064 1360     		str	r3, [r2]
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 609              		.loc 1 1066 0 discriminator 2
 610 0066 2268     		ldr	r2, [r4]
 611 0068 9368     		ldr	r3, [r2, #8]
 612 006a 43F00103 		orr	r3, r3, #1
 613 006e 9360     		str	r3, [r2, #8]
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 614              		.loc 1 1070 0 discriminator 2
 615 0070 2268     		ldr	r2, [r4]
 616 0072 9368     		ldr	r3, [r2, #8]
 617 0074 43F04003 		orr	r3, r3, #64
 618 0078 9360     		str	r3, [r2, #8]
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 619              		.loc 1 1072 0 discriminator 2
 620 007a 2846     		mov	r0, r5
 621 007c 38BD     		pop	{r3, r4, r5, pc}
 622              	.LVL54:
 623              	.L39:
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 624              		.loc 1 1076 0
 625 007e 0220     		movs	r0, #2
 626              	.LVL55:
 627 0080 38BD     		pop	{r3, r4, r5, pc}
 628              	.LVL56:
 629              	.L40:
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 630              		.loc 1 1032 0
 631 0082 0120     		movs	r0, #1
 632              	.LVL57:
 633 0084 38BD     		pop	{r3, r4, r5, pc}
 634              	.LVL58:
 635              	.L41:
 636 0086 0120     		movs	r0, #1
 637              	.LVL59:
 638 0088 38BD     		pop	{r3, r4, r5, pc}
 639              	.LVL60:
 640              	.L42:
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 641              		.loc 1 1036 0
 642 008a 0220     		movs	r0, #2
 643              	.LVL61:
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 644              		.loc 1 1078 0
 645 008c 38BD     		pop	{r3, r4, r5, pc}
 646              	.L45:
 647 008e 00BF     		.align	2
 648              	.L44:
 649 0090 00000000 		.word	UART_DMAReceiveCplt
 650 0094 00000000 		.word	UART_DMARxHalfCplt
 651 0098 00000000 		.word	UART_DMAError
 652              		.cfi_endproc
 653              	.LFE136:
 655              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
ARM GAS  /tmp/ccfc96Pv.s 			page 56


 656              		.align	2
 657              		.global	HAL_UART_DMAPause
 658              		.thumb
 659              		.thumb_func
 661              	HAL_UART_DMAPause:
 662              	.LFB137:
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 663              		.loc 1 1086 0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 0
 666              		@ frame_needed = 0, uses_anonymous_args = 0
 667              		@ link register save eliminated.
 668              	.LVL62:
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 669              		.loc 1 1088 0
 670 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 671 0004 012B     		cmp	r3, #1
 672 0006 2DD0     		beq	.L50
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 673              		.loc 1 1088 0 is_stmt 0 discriminator 2
 674 0008 0123     		movs	r3, #1
 675 000a 80F86830 		strb	r3, [r0, #104]
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 676              		.loc 1 1090 0 is_stmt 1 discriminator 2
 677 000e 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 678 0012 DBB2     		uxtb	r3, r3
 679 0014 212B     		cmp	r3, #33
 680 0016 08D1     		bne	.L48
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 681              		.loc 1 1091 0 discriminator 1
 682 0018 0368     		ldr	r3, [r0]
 683 001a 9A68     		ldr	r2, [r3, #8]
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 684              		.loc 1 1090 0 discriminator 1
 685 001c 12F0800F 		tst	r2, #128
 686 0020 03D0     		beq	.L48
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 687              		.loc 1 1094 0
 688 0022 9A68     		ldr	r2, [r3, #8]
 689 0024 22F08002 		bic	r2, r2, #128
 690 0028 9A60     		str	r2, [r3, #8]
 691              	.L48:
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 692              		.loc 1 1096 0
 693 002a 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 694 002e DBB2     		uxtb	r3, r3
 695 0030 222B     		cmp	r3, #34
 696 0032 12D1     		bne	.L49
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 697              		.loc 1 1097 0 discriminator 1
 698 0034 0368     		ldr	r3, [r0]
 699 0036 9A68     		ldr	r2, [r3, #8]
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 700              		.loc 1 1096 0 discriminator 1
 701 0038 12F0400F 		tst	r2, #64
 702 003c 0DD0     		beq	.L49
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
ARM GAS  /tmp/ccfc96Pv.s 			page 57


 703              		.loc 1 1100 0
 704 003e 1A68     		ldr	r2, [r3]
 705 0040 22F48072 		bic	r2, r2, #256
 706 0044 1A60     		str	r2, [r3]
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 707              		.loc 1 1101 0
 708 0046 0268     		ldr	r2, [r0]
 709 0048 9368     		ldr	r3, [r2, #8]
 710 004a 23F00103 		bic	r3, r3, #1
 711 004e 9360     		str	r3, [r2, #8]
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 712              		.loc 1 1104 0
 713 0050 0268     		ldr	r2, [r0]
 714 0052 9368     		ldr	r3, [r2, #8]
 715 0054 23F04003 		bic	r3, r3, #64
 716 0058 9360     		str	r3, [r2, #8]
 717              	.L49:
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 718              		.loc 1 1108 0
 719 005a 0023     		movs	r3, #0
 720 005c 80F86830 		strb	r3, [r0, #104]
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 721              		.loc 1 1110 0
 722 0060 1846     		mov	r0, r3
 723              	.LVL63:
 724 0062 7047     		bx	lr
 725              	.LVL64:
 726              	.L50:
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 727              		.loc 1 1088 0
 728 0064 0220     		movs	r0, #2
 729              	.LVL65:
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 730              		.loc 1 1111 0
 731 0066 7047     		bx	lr
 732              		.cfi_endproc
 733              	.LFE137:
 735              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 736              		.align	2
 737              		.global	HAL_UART_DMAResume
 738              		.thumb
 739              		.thumb_func
 741              	HAL_UART_DMAResume:
 742              	.LFB138:
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 743              		.loc 1 1119 0
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 0
 746              		@ frame_needed = 0, uses_anonymous_args = 0
 747              		@ link register save eliminated.
 748              	.LVL66:
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 749              		.loc 1 1121 0
 750 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 751 0004 012B     		cmp	r3, #1
 752 0006 28D0     		beq	.L55
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccfc96Pv.s 			page 58


 753              		.loc 1 1121 0 is_stmt 0 discriminator 2
 754 0008 0123     		movs	r3, #1
 755 000a 80F86830 		strb	r3, [r0, #104]
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 756              		.loc 1 1123 0 is_stmt 1 discriminator 2
 757 000e 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 758 0012 DBB2     		uxtb	r3, r3
 759 0014 212B     		cmp	r3, #33
 760 0016 04D1     		bne	.L53
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 761              		.loc 1 1126 0
 762 0018 0268     		ldr	r2, [r0]
 763 001a 9368     		ldr	r3, [r2, #8]
 764 001c 43F08003 		orr	r3, r3, #128
 765 0020 9360     		str	r3, [r2, #8]
 766              	.L53:
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 767              		.loc 1 1128 0
 768 0022 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 769 0026 DBB2     		uxtb	r3, r3
 770 0028 222B     		cmp	r3, #34
 771 002a 11D1     		bne	.L54
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 772              		.loc 1 1131 0
 773 002c 0368     		ldr	r3, [r0]
 774 002e 0822     		movs	r2, #8
 775 0030 1A62     		str	r2, [r3, #32]
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 776              		.loc 1 1134 0
 777 0032 0268     		ldr	r2, [r0]
 778 0034 1368     		ldr	r3, [r2]
 779 0036 43F48073 		orr	r3, r3, #256
 780 003a 1360     		str	r3, [r2]
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 781              		.loc 1 1135 0
 782 003c 0268     		ldr	r2, [r0]
 783 003e 9368     		ldr	r3, [r2, #8]
 784 0040 43F00103 		orr	r3, r3, #1
 785 0044 9360     		str	r3, [r2, #8]
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 786              		.loc 1 1138 0
 787 0046 0268     		ldr	r2, [r0]
 788 0048 9368     		ldr	r3, [r2, #8]
 789 004a 43F04003 		orr	r3, r3, #64
 790 004e 9360     		str	r3, [r2, #8]
 791              	.L54:
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 792              		.loc 1 1142 0
 793 0050 0023     		movs	r3, #0
 794 0052 80F86830 		strb	r3, [r0, #104]
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 795              		.loc 1 1144 0
 796 0056 1846     		mov	r0, r3
 797              	.LVL67:
 798 0058 7047     		bx	lr
 799              	.LVL68:
 800              	.L55:
ARM GAS  /tmp/ccfc96Pv.s 			page 59


1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 801              		.loc 1 1121 0
 802 005a 0220     		movs	r0, #2
 803              	.LVL69:
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 804              		.loc 1 1145 0
 805 005c 7047     		bx	lr
 806              		.cfi_endproc
 807              	.LFE138:
 809 005e 00BF     		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 810              		.align	2
 811              		.global	HAL_UART_DMAStop
 812              		.thumb
 813              		.thumb_func
 815              	HAL_UART_DMAStop:
 816              	.LFB139:
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 817              		.loc 1 1153 0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 0
 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821              	.LVL70:
 822 0000 10B5     		push	{r4, lr}
 823              	.LCFI4:
 824              		.cfi_def_cfa_offset 8
 825              		.cfi_offset 4, -8
 826              		.cfi_offset 14, -4
 827 0002 0446     		mov	r4, r0
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 828              		.loc 1 1162 0
 829 0004 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 830 0008 DBB2     		uxtb	r3, r3
 831 000a 212B     		cmp	r3, #33
 832 000c 0FD1     		bne	.L57
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 833              		.loc 1 1163 0 discriminator 1
 834 000e 0368     		ldr	r3, [r0]
 835 0010 9A68     		ldr	r2, [r3, #8]
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 836              		.loc 1 1162 0 discriminator 1
 837 0012 12F0800F 		tst	r2, #128
 838 0016 0AD0     		beq	.L57
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 839              		.loc 1 1165 0
 840 0018 9A68     		ldr	r2, [r3, #8]
 841 001a 22F08002 		bic	r2, r2, #128
 842 001e 9A60     		str	r2, [r3, #8]
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 843              		.loc 1 1168 0
 844 0020 006E     		ldr	r0, [r0, #96]
 845              	.LVL71:
 846 0022 08B1     		cbz	r0, .L58
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 847              		.loc 1 1170 0
 848 0024 FFF7FEFF 		bl	HAL_DMA_Abort
 849              	.LVL72:
 850              	.L58:
ARM GAS  /tmp/ccfc96Pv.s 			page 60


1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 851              		.loc 1 1173 0
 852 0028 2046     		mov	r0, r4
 853 002a FFF7FEFF 		bl	UART_EndTxTransfer
 854              	.LVL73:
 855              	.L57:
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 856              		.loc 1 1177 0
 857 002e 94F86A30 		ldrb	r3, [r4, #106]	@ zero_extendqisi2
 858 0032 DBB2     		uxtb	r3, r3
 859 0034 222B     		cmp	r3, #34
 860 0036 0FD1     		bne	.L59
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 861              		.loc 1 1178 0 discriminator 1
 862 0038 2368     		ldr	r3, [r4]
 863 003a 9A68     		ldr	r2, [r3, #8]
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 864              		.loc 1 1177 0 discriminator 1
 865 003c 12F0400F 		tst	r2, #64
 866 0040 0AD0     		beq	.L59
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 867              		.loc 1 1180 0
 868 0042 9A68     		ldr	r2, [r3, #8]
 869 0044 22F04002 		bic	r2, r2, #64
 870 0048 9A60     		str	r2, [r3, #8]
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 871              		.loc 1 1183 0
 872 004a 606E     		ldr	r0, [r4, #100]
 873 004c 08B1     		cbz	r0, .L60
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 874              		.loc 1 1185 0
 875 004e FFF7FEFF 		bl	HAL_DMA_Abort
 876              	.LVL74:
 877              	.L60:
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 878              		.loc 1 1188 0
 879 0052 2046     		mov	r0, r4
 880 0054 FFF7FEFF 		bl	UART_EndRxTransfer
 881              	.LVL75:
 882              	.L59:
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 883              		.loc 1 1192 0
 884 0058 0020     		movs	r0, #0
 885 005a 10BD     		pop	{r4, pc}
 886              		.cfi_endproc
 887              	.LFE139:
 889              		.section	.text.HAL_UART_Abort,"ax",%progbits
 890              		.align	2
 891              		.global	HAL_UART_Abort
 892              		.thumb
 893              		.thumb_func
 895              	HAL_UART_Abort:
 896              	.LFB140:
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 897              		.loc 1 1207 0
 898              		.cfi_startproc
 899              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccfc96Pv.s 			page 61


 900              		@ frame_needed = 0, uses_anonymous_args = 0
 901              	.LVL76:
 902 0000 10B5     		push	{r4, lr}
 903              	.LCFI5:
 904              		.cfi_def_cfa_offset 8
 905              		.cfi_offset 4, -8
 906              		.cfi_offset 14, -4
 907 0002 0446     		mov	r4, r0
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 908              		.loc 1 1209 0
 909 0004 0268     		ldr	r2, [r0]
 910 0006 1368     		ldr	r3, [r2]
 911 0008 23F4F073 		bic	r3, r3, #480
 912 000c 1360     		str	r3, [r2]
1210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 913              		.loc 1 1210 0
 914 000e 0268     		ldr	r2, [r0]
 915 0010 9368     		ldr	r3, [r2, #8]
 916 0012 23F00103 		bic	r3, r3, #1
 917 0016 9360     		str	r3, [r2, #8]
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 918              		.loc 1 1213 0
 919 0018 0368     		ldr	r3, [r0]
 920 001a 9A68     		ldr	r2, [r3, #8]
 921 001c 12F0800F 		tst	r2, #128
 922 0020 0AD0     		beq	.L63
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 923              		.loc 1 1215 0
 924 0022 9A68     		ldr	r2, [r3, #8]
 925 0024 22F08002 		bic	r2, r2, #128
 926 0028 9A60     		str	r2, [r3, #8]
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 927              		.loc 1 1218 0
 928 002a 036E     		ldr	r3, [r0, #96]
 929 002c 23B1     		cbz	r3, .L63
1222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 930              		.loc 1 1222 0
 931 002e 0022     		movs	r2, #0
 932 0030 5A63     		str	r2, [r3, #52]
1224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 933              		.loc 1 1224 0
 934 0032 006E     		ldr	r0, [r0, #96]
 935              	.LVL77:
 936 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 937              	.LVL78:
 938              	.L63:
1229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 939              		.loc 1 1229 0
 940 0038 2368     		ldr	r3, [r4]
 941 003a 9A68     		ldr	r2, [r3, #8]
 942 003c 12F0400F 		tst	r2, #64
 943 0040 0AD0     		beq	.L64
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 944              		.loc 1 1231 0
 945 0042 9A68     		ldr	r2, [r3, #8]
 946 0044 22F04002 		bic	r2, r2, #64
 947 0048 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/ccfc96Pv.s 			page 62


1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 948              		.loc 1 1234 0
 949 004a 636E     		ldr	r3, [r4, #100]
 950 004c 23B1     		cbz	r3, .L64
1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 951              		.loc 1 1238 0
 952 004e 0022     		movs	r2, #0
 953 0050 5A63     		str	r2, [r3, #52]
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 954              		.loc 1 1240 0
 955 0052 606E     		ldr	r0, [r4, #100]
 956 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 957              	.LVL79:
 958              	.L64:
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U; 
 959              		.loc 1 1245 0
 960 0058 0020     		movs	r0, #0
 961 005a A4F85200 		strh	r0, [r4, #82]	@ movhi
1246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 962              		.loc 1 1246 0
 963 005e A4F85A00 		strh	r0, [r4, #90]	@ movhi
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 964              		.loc 1 1249 0
 965 0062 2368     		ldr	r3, [r4]
 966 0064 0F22     		movs	r2, #15
 967 0066 1A62     		str	r2, [r3, #32]
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 968              		.loc 1 1252 0
 969 0068 2023     		movs	r3, #32
 970 006a 84F86930 		strb	r3, [r4, #105]
1253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 971              		.loc 1 1253 0
 972 006e 84F86A30 		strb	r3, [r4, #106]
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 973              		.loc 1 1256 0
 974 0072 E066     		str	r0, [r4, #108]
1259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 975              		.loc 1 1259 0
 976 0074 10BD     		pop	{r4, pc}
 977              		.cfi_endproc
 978              	.LFE140:
 980 0076 00BF     		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 981              		.align	2
 982              		.global	HAL_UART_AbortTransmit
 983              		.thumb
 984              		.thumb_func
 986              	HAL_UART_AbortTransmit:
 987              	.LFB141:
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 988              		.loc 1 1274 0
 989              		.cfi_startproc
 990              		@ args = 0, pretend = 0, frame = 0
 991              		@ frame_needed = 0, uses_anonymous_args = 0
 992              	.LVL80:
 993 0000 10B5     		push	{r4, lr}
 994              	.LCFI6:
 995              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccfc96Pv.s 			page 63


 996              		.cfi_offset 4, -8
 997              		.cfi_offset 14, -4
 998 0002 0446     		mov	r4, r0
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 999              		.loc 1 1276 0
 1000 0004 0268     		ldr	r2, [r0]
 1001 0006 1368     		ldr	r3, [r2]
 1002 0008 23F0C003 		bic	r3, r3, #192
 1003 000c 1360     		str	r3, [r2]
1279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1004              		.loc 1 1279 0
 1005 000e 0368     		ldr	r3, [r0]
 1006 0010 9A68     		ldr	r2, [r3, #8]
 1007 0012 12F0800F 		tst	r2, #128
 1008 0016 0AD0     		beq	.L67
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1009              		.loc 1 1281 0
 1010 0018 9A68     		ldr	r2, [r3, #8]
 1011 001a 22F08002 		bic	r2, r2, #128
 1012 001e 9A60     		str	r2, [r3, #8]
1284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1013              		.loc 1 1284 0
 1014 0020 036E     		ldr	r3, [r0, #96]
 1015 0022 23B1     		cbz	r3, .L67
1288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1016              		.loc 1 1288 0
 1017 0024 0022     		movs	r2, #0
 1018 0026 5A63     		str	r2, [r3, #52]
1290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1019              		.loc 1 1290 0
 1020 0028 006E     		ldr	r0, [r0, #96]
 1021              	.LVL81:
 1022 002a FFF7FEFF 		bl	HAL_DMA_Abort
 1023              	.LVL82:
 1024              	.L67:
1295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1025              		.loc 1 1295 0
 1026 002e 0020     		movs	r0, #0
 1027 0030 A4F85200 		strh	r0, [r4, #82]	@ movhi
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1028              		.loc 1 1298 0
 1029 0034 2023     		movs	r3, #32
 1030 0036 84F86930 		strb	r3, [r4, #105]
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1031              		.loc 1 1301 0
 1032 003a 10BD     		pop	{r4, pc}
 1033              		.cfi_endproc
 1034              	.LFE141:
 1036              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 1037              		.align	2
 1038              		.global	HAL_UART_AbortReceive
 1039              		.thumb
 1040              		.thumb_func
 1042              	HAL_UART_AbortReceive:
 1043              	.LFB142:
1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1044              		.loc 1 1316 0
ARM GAS  /tmp/ccfc96Pv.s 			page 64


 1045              		.cfi_startproc
 1046              		@ args = 0, pretend = 0, frame = 0
 1047              		@ frame_needed = 0, uses_anonymous_args = 0
 1048              	.LVL83:
 1049 0000 10B5     		push	{r4, lr}
 1050              	.LCFI7:
 1051              		.cfi_def_cfa_offset 8
 1052              		.cfi_offset 4, -8
 1053              		.cfi_offset 14, -4
 1054 0002 0446     		mov	r4, r0
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1055              		.loc 1 1318 0
 1056 0004 0268     		ldr	r2, [r0]
 1057 0006 1368     		ldr	r3, [r2]
 1058 0008 23F49073 		bic	r3, r3, #288
 1059 000c 1360     		str	r3, [r2]
1319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1060              		.loc 1 1319 0
 1061 000e 0268     		ldr	r2, [r0]
 1062 0010 9368     		ldr	r3, [r2, #8]
 1063 0012 23F00103 		bic	r3, r3, #1
 1064 0016 9360     		str	r3, [r2, #8]
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1065              		.loc 1 1322 0
 1066 0018 0368     		ldr	r3, [r0]
 1067 001a 9A68     		ldr	r2, [r3, #8]
 1068 001c 12F0400F 		tst	r2, #64
 1069 0020 0AD0     		beq	.L70
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1070              		.loc 1 1324 0
 1071 0022 9A68     		ldr	r2, [r3, #8]
 1072 0024 22F04002 		bic	r2, r2, #64
 1073 0028 9A60     		str	r2, [r3, #8]
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1074              		.loc 1 1327 0
 1075 002a 436E     		ldr	r3, [r0, #100]
 1076 002c 23B1     		cbz	r3, .L70
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1077              		.loc 1 1331 0
 1078 002e 0022     		movs	r2, #0
 1079 0030 5A63     		str	r2, [r3, #52]
1333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1080              		.loc 1 1333 0
 1081 0032 406E     		ldr	r0, [r0, #100]
 1082              	.LVL84:
 1083 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1084              	.LVL85:
 1085              	.L70:
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1086              		.loc 1 1338 0
 1087 0038 0020     		movs	r0, #0
 1088 003a A4F85A00 		strh	r0, [r4, #90]	@ movhi
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1089              		.loc 1 1341 0
 1090 003e 2368     		ldr	r3, [r4]
 1091 0040 0F22     		movs	r2, #15
 1092 0042 1A62     		str	r2, [r3, #32]
ARM GAS  /tmp/ccfc96Pv.s 			page 65


1344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1093              		.loc 1 1344 0
 1094 0044 2023     		movs	r3, #32
 1095 0046 84F86A30 		strb	r3, [r4, #106]
1347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1096              		.loc 1 1347 0
 1097 004a 10BD     		pop	{r4, pc}
 1098              		.cfi_endproc
 1099              	.LFE142:
 1101              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1102              		.align	2
 1103              		.weak	HAL_UART_TxCpltCallback
 1104              		.thumb
 1105              		.thumb_func
 1107              	HAL_UART_TxCpltCallback:
 1108              	.LFB147:
1769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1109              		.loc 1 1769 0
 1110              		.cfi_startproc
 1111              		@ args = 0, pretend = 0, frame = 0
 1112              		@ frame_needed = 0, uses_anonymous_args = 0
 1113              		@ link register save eliminated.
 1114              	.LVL86:
 1115 0000 7047     		bx	lr
 1116              		.cfi_endproc
 1117              	.LFE147:
 1119 0002 00BF     		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1120              		.align	2
 1121              		.thumb
 1122              		.thumb_func
 1124              	UART_DMATransmitCplt:
 1125              	.LFB169:
2386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
2391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1126              		.loc 1 2395 0
 1127              		.cfi_startproc
 1128              		@ args = 0, pretend = 0, frame = 0
 1129              		@ frame_needed = 0, uses_anonymous_args = 0
 1130              	.LVL87:
 1131              		.loc 1 2395 0
 1132 0000 08B5     		push	{r3, lr}
 1133              	.LCFI8:
 1134              		.cfi_def_cfa_offset 8
 1135              		.cfi_offset 3, -8
 1136              		.cfi_offset 14, -4
2396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1137              		.loc 1 2396 0
 1138 0002 436A     		ldr	r3, [r0, #36]
 1139              	.LVL88:
ARM GAS  /tmp/ccfc96Pv.s 			page 66


2397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Normal mode */
2399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 1140              		.loc 1 2399 0
 1141 0004 0268     		ldr	r2, [r0]
 1142 0006 1268     		ldr	r2, [r2]
 1143 0008 12F0200F 		tst	r2, #32
 1144 000c 0DD1     		bne	.L74
2400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U;
 1145              		.loc 1 2401 0
 1146 000e 0022     		movs	r2, #0
 1147 0010 A3F85220 		strh	r2, [r3, #82]	@ movhi
2402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
2404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
2405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1148              		.loc 1 2405 0
 1149 0014 1968     		ldr	r1, [r3]
 1150 0016 8A68     		ldr	r2, [r1, #8]
 1151 0018 22F08002 		bic	r2, r2, #128
 1152 001c 8A60     		str	r2, [r1, #8]
2406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 1153              		.loc 1 2408 0
 1154 001e 1A68     		ldr	r2, [r3]
 1155 0020 1368     		ldr	r3, [r2]
 1156              	.LVL89:
 1157 0022 43F04003 		orr	r3, r3, #64
 1158 0026 1360     		str	r3, [r2]
 1159 0028 08BD     		pop	{r3, pc}
 1160              	.LVL90:
 1161              	.L74:
2409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Circular mode */
2411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
 1162              		.loc 1 2413 0
 1163 002a 1846     		mov	r0, r3
 1164              	.LVL91:
 1165 002c FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1166              	.LVL92:
 1167 0030 08BD     		pop	{r3, pc}
 1168              		.cfi_endproc
 1169              	.LFE169:
 1171 0032 00BF     		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1172              		.align	2
 1173              		.weak	HAL_UART_TxHalfCpltCallback
 1174              		.thumb
 1175              		.thumb_func
 1177              	HAL_UART_TxHalfCpltCallback:
 1178              	.LFB148:
1784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1179              		.loc 1 1784 0
 1180              		.cfi_startproc
ARM GAS  /tmp/ccfc96Pv.s 			page 67


 1181              		@ args = 0, pretend = 0, frame = 0
 1182              		@ frame_needed = 0, uses_anonymous_args = 0
 1183              		@ link register save eliminated.
 1184              	.LVL93:
 1185 0000 7047     		bx	lr
 1186              		.cfi_endproc
 1187              	.LFE148:
 1189 0002 00BF     		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1190              		.align	2
 1191              		.thumb
 1192              		.thumb_func
 1194              	UART_DMATxHalfCplt:
 1195              	.LFB170:
2414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
2420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1196              		.loc 1 2424 0
 1197              		.cfi_startproc
 1198              		@ args = 0, pretend = 0, frame = 0
 1199              		@ frame_needed = 0, uses_anonymous_args = 0
 1200              	.LVL94:
 1201              		.loc 1 2424 0
 1202 0000 08B5     		push	{r3, lr}
 1203              	.LCFI9:
 1204              		.cfi_def_cfa_offset 8
 1205              		.cfi_offset 3, -8
 1206              		.cfi_offset 14, -4
 1207              	.LVL95:
2425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 1208              		.loc 1 2427 0
 1209 0002 406A     		ldr	r0, [r0, #36]
 1210              	.LVL96:
 1211 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 1212              	.LVL97:
 1213 0008 08BD     		pop	{r3, pc}
 1214              		.cfi_endproc
 1215              	.LFE170:
 1217 000a 00BF     		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1218              		.align	2
 1219              		.weak	HAL_UART_RxCpltCallback
 1220              		.thumb
 1221              		.thumb_func
 1223              	HAL_UART_RxCpltCallback:
 1224              	.LFB149:
1799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1225              		.loc 1 1799 0
 1226              		.cfi_startproc
ARM GAS  /tmp/ccfc96Pv.s 			page 68


 1227              		@ args = 0, pretend = 0, frame = 0
 1228              		@ frame_needed = 0, uses_anonymous_args = 0
 1229              		@ link register save eliminated.
 1230              	.LVL98:
 1231 0000 7047     		bx	lr
 1232              		.cfi_endproc
 1233              	.LFE149:
 1235 0002 00BF     		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 1236              		.align	2
 1237              		.thumb
 1238              		.thumb_func
 1240              	UART_DMAReceiveCplt:
 1241              	.LFB171:
2428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
2432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1242              		.loc 1 2436 0
 1243              		.cfi_startproc
 1244              		@ args = 0, pretend = 0, frame = 0
 1245              		@ frame_needed = 0, uses_anonymous_args = 0
 1246              	.LVL99:
 1247              		.loc 1 2436 0
 1248 0000 08B5     		push	{r3, lr}
 1249              	.LCFI10:
 1250              		.cfi_def_cfa_offset 8
 1251              		.cfi_offset 3, -8
 1252              		.cfi_offset 14, -4
2437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1253              		.loc 1 2437 0
 1254 0002 436A     		ldr	r3, [r0, #36]
 1255              	.LVL100:
2438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Normal mode */
2440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 1256              		.loc 1 2440 0
 1257 0004 0268     		ldr	r2, [r0]
 1258 0006 1268     		ldr	r2, [r2]
 1259 0008 12F0200F 		tst	r2, #32
 1260 000c 14D1     		bne	.L82
2441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
 1261              		.loc 1 2442 0
 1262 000e 0022     		movs	r2, #0
 1263 0010 A3F85A20 		strh	r2, [r3, #90]	@ movhi
2443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1264              		.loc 1 2445 0
 1265 0014 1968     		ldr	r1, [r3]
 1266 0016 0A68     		ldr	r2, [r1]
 1267 0018 22F48072 		bic	r2, r2, #256
ARM GAS  /tmp/ccfc96Pv.s 			page 69


 1268 001c 0A60     		str	r2, [r1]
2446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1269              		.loc 1 2446 0
 1270 001e 1968     		ldr	r1, [r3]
 1271 0020 8A68     		ldr	r2, [r1, #8]
 1272 0022 22F00102 		bic	r2, r2, #1
 1273 0026 8A60     		str	r2, [r1, #8]
2447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
2450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1274              		.loc 1 2450 0
 1275 0028 1968     		ldr	r1, [r3]
 1276 002a 8A68     		ldr	r2, [r1, #8]
 1277 002c 22F04002 		bic	r2, r2, #64
 1278 0030 8A60     		str	r2, [r1, #8]
2451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1279              		.loc 1 2453 0
 1280 0032 2022     		movs	r2, #32
 1281 0034 83F86A20 		strb	r2, [r3, #106]
 1282              	.L82:
2454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 1283              		.loc 1 2456 0
 1284 0038 1846     		mov	r0, r3
 1285              	.LVL101:
 1286 003a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1287              	.LVL102:
 1288 003e 08BD     		pop	{r3, pc}
 1289              		.cfi_endproc
 1290              	.LFE171:
 1292              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 1293              		.align	2
 1294              		.weak	HAL_UART_RxHalfCpltCallback
 1295              		.thumb
 1296              		.thumb_func
 1298              	HAL_UART_RxHalfCpltCallback:
 1299              	.LFB150:
1814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1300              		.loc 1 1814 0
 1301              		.cfi_startproc
 1302              		@ args = 0, pretend = 0, frame = 0
 1303              		@ frame_needed = 0, uses_anonymous_args = 0
 1304              		@ link register save eliminated.
 1305              	.LVL103:
 1306 0000 7047     		bx	lr
 1307              		.cfi_endproc
 1308              	.LFE150:
 1310 0002 00BF     		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 1311              		.align	2
 1312              		.thumb
 1313              		.thumb_func
 1315              	UART_DMARxHalfCplt:
 1316              	.LFB172:
ARM GAS  /tmp/ccfc96Pv.s 			page 70


2457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
2461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1317              		.loc 1 2465 0
 1318              		.cfi_startproc
 1319              		@ args = 0, pretend = 0, frame = 0
 1320              		@ frame_needed = 0, uses_anonymous_args = 0
 1321              	.LVL104:
 1322              		.loc 1 2465 0
 1323 0000 08B5     		push	{r3, lr}
 1324              	.LCFI11:
 1325              		.cfi_def_cfa_offset 8
 1326              		.cfi_offset 3, -8
 1327              		.cfi_offset 14, -4
 1328              	.LVL105:
2466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
 1329              		.loc 1 2468 0
 1330 0002 406A     		ldr	r0, [r0, #36]
 1331              	.LVL106:
 1332 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 1333              	.LVL107:
 1334 0008 08BD     		pop	{r3, pc}
 1335              		.cfi_endproc
 1336              	.LFE172:
 1338 000a 00BF     		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 1339              		.align	2
 1340              		.weak	HAL_UART_ErrorCallback
 1341              		.thumb
 1342              		.thumb_func
 1344              	HAL_UART_ErrorCallback:
 1345              	.LFB151:
1829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1346              		.loc 1 1829 0
 1347              		.cfi_startproc
 1348              		@ args = 0, pretend = 0, frame = 0
 1349              		@ frame_needed = 0, uses_anonymous_args = 0
 1350              		@ link register save eliminated.
 1351              	.LVL108:
 1352 0000 7047     		bx	lr
 1353              		.cfi_endproc
 1354              	.LFE151:
 1356 0002 00BF     		.section	.text.UART_DMAError,"ax",%progbits
 1357              		.align	2
 1358              		.thumb
 1359              		.thumb_func
 1361              	UART_DMAError:
 1362              	.LFB173:
2469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccfc96Pv.s 			page 71


2471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART communication error callback.
2473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
2474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1363              		.loc 1 2477 0
 1364              		.cfi_startproc
 1365              		@ args = 0, pretend = 0, frame = 0
 1366              		@ frame_needed = 0, uses_anonymous_args = 0
 1367              	.LVL109:
 1368              		.loc 1 2477 0
 1369 0000 10B5     		push	{r4, lr}
 1370              	.LCFI12:
 1371              		.cfi_def_cfa_offset 8
 1372              		.cfi_offset 4, -8
 1373              		.cfi_offset 14, -4
2478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1374              		.loc 1 2478 0
 1375 0002 446A     		ldr	r4, [r0, #36]
 1376              	.LVL110:
2479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (  (huart->gState == HAL_UART_STATE_BUSY_TX)
 1377              		.loc 1 2481 0
 1378 0004 94F86930 		ldrb	r3, [r4, #105]	@ zero_extendqisi2
 1379 0008 DBB2     		uxtb	r3, r3
 1380 000a 212B     		cmp	r3, #33
 1381 000c 0AD1     		bne	.L89
2482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) )
 1382              		.loc 1 2482 0
 1383 000e 2368     		ldr	r3, [r4]
 1384 0010 9B68     		ldr	r3, [r3, #8]
 1385 0012 13F0800F 		tst	r3, #128
 1386 0016 05D0     		beq	.L89
2483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U;
 1387              		.loc 1 2484 0
 1388 0018 0023     		movs	r3, #0
 1389 001a A4F85230 		strh	r3, [r4, #82]	@ movhi
2485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 1390              		.loc 1 2485 0
 1391 001e 2046     		mov	r0, r4
 1392              	.LVL111:
 1393 0020 FFF7FEFF 		bl	UART_EndTxTransfer
 1394              	.LVL112:
 1395              	.L89:
2486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (  (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1396              		.loc 1 2489 0
 1397 0024 94F86A30 		ldrb	r3, [r4, #106]	@ zero_extendqisi2
 1398 0028 DBB2     		uxtb	r3, r3
 1399 002a 222B     		cmp	r3, #34
 1400 002c 0AD1     		bne	.L90
ARM GAS  /tmp/ccfc96Pv.s 			page 72


2490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) )
 1401              		.loc 1 2490 0
 1402 002e 2368     		ldr	r3, [r4]
 1403 0030 9B68     		ldr	r3, [r3, #8]
 1404 0032 13F0400F 		tst	r3, #64
 1405 0036 05D0     		beq	.L90
2491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
 1406              		.loc 1 2492 0
 1407 0038 0023     		movs	r3, #0
 1408 003a A4F85A30 		strh	r3, [r4, #90]	@ movhi
2493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 1409              		.loc 1 2493 0
 1410 003e 2046     		mov	r0, r4
 1411 0040 FFF7FEFF 		bl	UART_EndRxTransfer
 1412              	.LVL113:
 1413              	.L90:
2494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 1414              		.loc 1 2496 0
 1415 0044 E36E     		ldr	r3, [r4, #108]
 1416 0046 43F01003 		orr	r3, r3, #16
 1417 004a E366     		str	r3, [r4, #108]
2497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 1418              		.loc 1 2497 0
 1419 004c 2046     		mov	r0, r4
 1420 004e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1421              	.LVL114:
 1422 0052 10BD     		pop	{r4, pc}
 1423              		.cfi_endproc
 1424              	.LFE173:
 1426              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 1427              		.align	2
 1428              		.thumb
 1429              		.thumb_func
 1431              	UART_DMAAbortOnError:
 1432              	.LFB174:
2498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1433              		.loc 1 2507 0
 1434              		.cfi_startproc
 1435              		@ args = 0, pretend = 0, frame = 0
 1436              		@ frame_needed = 0, uses_anonymous_args = 0
 1437              	.LVL115:
 1438 0000 08B5     		push	{r3, lr}
 1439              	.LCFI13:
 1440              		.cfi_def_cfa_offset 8
 1441              		.cfi_offset 3, -8
ARM GAS  /tmp/ccfc96Pv.s 			page 73


 1442              		.cfi_offset 14, -4
2508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1443              		.loc 1 2508 0
 1444 0002 406A     		ldr	r0, [r0, #36]
 1445              	.LVL116:
2509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1446              		.loc 1 2509 0
 1447 0004 0023     		movs	r3, #0
 1448 0006 A0F85A30 		strh	r3, [r0, #90]	@ movhi
2510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
 1449              		.loc 1 2510 0
 1450 000a A0F85230 		strh	r3, [r0, #82]	@ movhi
2511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 1451              		.loc 1 2512 0
 1452 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1453              	.LVL117:
 1454 0012 08BD     		pop	{r3, pc}
 1455              		.cfi_endproc
 1456              	.LFE174:
 1458              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 1459              		.align	2
 1460              		.weak	HAL_UART_AbortCpltCallback
 1461              		.thumb
 1462              		.thumb_func
 1464              	HAL_UART_AbortCpltCallback:
 1465              	.LFB152:
1844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1466              		.loc 1 1844 0
 1467              		.cfi_startproc
 1468              		@ args = 0, pretend = 0, frame = 0
 1469              		@ frame_needed = 0, uses_anonymous_args = 0
 1470              		@ link register save eliminated.
 1471              	.LVL118:
 1472 0000 7047     		bx	lr
 1473              		.cfi_endproc
 1474              	.LFE152:
 1476 0002 00BF     		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 1477              		.align	2
 1478              		.global	HAL_UART_Abort_IT
 1479              		.thumb
 1480              		.thumb_func
 1482              	HAL_UART_Abort_IT:
 1483              	.LFB143:
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 1484              		.loc 1 1364 0
 1485              		.cfi_startproc
 1486              		@ args = 0, pretend = 0, frame = 0
 1487              		@ frame_needed = 0, uses_anonymous_args = 0
 1488              	.LVL119:
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 1489              		.loc 1 1364 0
 1490 0000 10B5     		push	{r4, lr}
 1491              	.LCFI14:
 1492              		.cfi_def_cfa_offset 8
 1493              		.cfi_offset 4, -8
 1494              		.cfi_offset 14, -4
ARM GAS  /tmp/ccfc96Pv.s 			page 74


 1495 0002 0446     		mov	r4, r0
 1496              	.LVL120:
1368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1497              		.loc 1 1368 0
 1498 0004 0268     		ldr	r2, [r0]
 1499 0006 1368     		ldr	r3, [r2]
 1500 0008 23F4F073 		bic	r3, r3, #480
 1501 000c 1360     		str	r3, [r2]
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1502              		.loc 1 1369 0
 1503 000e 0268     		ldr	r2, [r0]
 1504 0010 9368     		ldr	r3, [r2, #8]
 1505 0012 23F00103 		bic	r3, r3, #1
 1506 0016 9360     		str	r3, [r2, #8]
1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1507              		.loc 1 1374 0
 1508 0018 036E     		ldr	r3, [r0, #96]
 1509 001a 4BB1     		cbz	r3, .L96
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1510              		.loc 1 1378 0
 1511 001c 0268     		ldr	r2, [r0]
 1512 001e 9268     		ldr	r2, [r2, #8]
 1513 0020 12F0800F 		tst	r2, #128
 1514 0024 02D0     		beq	.L97
1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1515              		.loc 1 1380 0
 1516 0026 284A     		ldr	r2, .L108
 1517 0028 5A63     		str	r2, [r3, #52]
 1518 002a 01E0     		b	.L96
 1519              	.L97:
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1520              		.loc 1 1384 0
 1521 002c 0022     		movs	r2, #0
 1522 002e 5A63     		str	r2, [r3, #52]
 1523              	.L96:
1388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1524              		.loc 1 1388 0
 1525 0030 636E     		ldr	r3, [r4, #100]
 1526 0032 4BB1     		cbz	r3, .L98
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1527              		.loc 1 1392 0
 1528 0034 2268     		ldr	r2, [r4]
 1529 0036 9268     		ldr	r2, [r2, #8]
 1530 0038 12F0400F 		tst	r2, #64
 1531 003c 02D0     		beq	.L99
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1532              		.loc 1 1394 0
 1533 003e 234A     		ldr	r2, .L108+4
 1534 0040 5A63     		str	r2, [r3, #52]
 1535 0042 01E0     		b	.L98
 1536              	.L99:
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1537              		.loc 1 1398 0
 1538 0044 0022     		movs	r2, #0
 1539 0046 5A63     		str	r2, [r3, #52]
 1540              	.L98:
1403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
ARM GAS  /tmp/ccfc96Pv.s 			page 75


 1541              		.loc 1 1403 0
 1542 0048 2368     		ldr	r3, [r4]
 1543 004a 9A68     		ldr	r2, [r3, #8]
 1544 004c 12F0800F 		tst	r2, #128
 1545 0050 0DD0     		beq	.L103
1406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1546              		.loc 1 1406 0
 1547 0052 9A68     		ldr	r2, [r3, #8]
 1548 0054 22F08002 		bic	r2, r2, #128
 1549 0058 9A60     		str	r2, [r3, #8]
1409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1550              		.loc 1 1409 0
 1551 005a 206E     		ldr	r0, [r4, #96]
 1552              	.LVL121:
 1553 005c 48B1     		cbz	r0, .L104
1415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1554              		.loc 1 1415 0
 1555 005e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1556              	.LVL122:
 1557 0062 40B1     		cbz	r0, .L105
1417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 1558              		.loc 1 1417 0
 1559 0064 236E     		ldr	r3, [r4, #96]
 1560 0066 0022     		movs	r2, #0
 1561 0068 5A63     		str	r2, [r3, #52]
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 1562              		.loc 1 1365 0
 1563 006a 0122     		movs	r2, #1
 1564 006c 04E0     		b	.L100
 1565              	.LVL123:
 1566              	.L103:
 1567 006e 0122     		movs	r2, #1
 1568 0070 02E0     		b	.L100
 1569              	.LVL124:
 1570              	.L104:
 1571 0072 0122     		movs	r2, #1
 1572 0074 00E0     		b	.L100
 1573              	.L105:
1421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 1574              		.loc 1 1421 0
 1575 0076 0022     		movs	r2, #0
 1576              	.L100:
 1577              	.LVL125:
1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1578              		.loc 1 1427 0
 1579 0078 2368     		ldr	r3, [r4]
 1580 007a 9968     		ldr	r1, [r3, #8]
 1581 007c 11F0400F 		tst	r1, #64
 1582 0080 0ED0     		beq	.L101
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1583              		.loc 1 1429 0
 1584 0082 9968     		ldr	r1, [r3, #8]
 1585 0084 21F04001 		bic	r1, r1, #64
 1586 0088 9960     		str	r1, [r3, #8]
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1587              		.loc 1 1432 0
 1588 008a 606E     		ldr	r0, [r4, #100]
ARM GAS  /tmp/ccfc96Pv.s 			page 76


 1589 008c 40B1     		cbz	r0, .L101
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1590              		.loc 1 1438 0
 1591 008e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1592              	.LVL126:
 1593 0092 20B1     		cbz	r0, .L106
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 1U;
 1594              		.loc 1 1440 0
 1595 0094 636E     		ldr	r3, [r4, #100]
 1596 0096 0022     		movs	r2, #0
 1597 0098 5A63     		str	r2, [r3, #52]
 1598              	.LVL127:
1441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 1599              		.loc 1 1441 0
 1600 009a 0122     		movs	r2, #1
 1601 009c 00E0     		b	.L101
 1602              	.LVL128:
 1603              	.L106:
1445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 1604              		.loc 1 1445 0
 1605 009e 0022     		movs	r2, #0
 1606              	.L101:
 1607              	.LVL129:
1451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1608              		.loc 1 1451 0
 1609 00a0 82B1     		cbz	r2, .L102
1454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
 1610              		.loc 1 1454 0
 1611 00a2 0023     		movs	r3, #0
 1612 00a4 A4F85230 		strh	r3, [r4, #82]	@ movhi
1455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1613              		.loc 1 1455 0
 1614 00a8 A4F85A30 		strh	r3, [r4, #90]	@ movhi
1458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1615              		.loc 1 1458 0
 1616 00ac E366     		str	r3, [r4, #108]
1461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1617              		.loc 1 1461 0
 1618 00ae 2368     		ldr	r3, [r4]
 1619 00b0 0F22     		movs	r2, #15
 1620              	.LVL130:
 1621 00b2 1A62     		str	r2, [r3, #32]
1464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1622              		.loc 1 1464 0
 1623 00b4 2023     		movs	r3, #32
 1624 00b6 84F86930 		strb	r3, [r4, #105]
1465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1625              		.loc 1 1465 0
 1626 00ba 84F86A30 		strb	r3, [r4, #106]
1468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1627              		.loc 1 1468 0
 1628 00be 2046     		mov	r0, r4
 1629 00c0 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 1630              	.LVL131:
 1631              	.L102:
1472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1632              		.loc 1 1472 0
ARM GAS  /tmp/ccfc96Pv.s 			page 77


 1633 00c4 0020     		movs	r0, #0
 1634 00c6 10BD     		pop	{r4, pc}
 1635              	.LVL132:
 1636              	.L109:
 1637              		.align	2
 1638              	.L108:
 1639 00c8 00000000 		.word	UART_DMATxAbortCallback
 1640 00cc 00000000 		.word	UART_DMARxAbortCallback
 1641              		.cfi_endproc
 1642              	.LFE143:
 1644              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 1645              		.align	2
 1646              		.thumb
 1647              		.thumb_func
 1649              	UART_DMARxAbortCallback:
 1650              	.LFB176:
2513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
2526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
2528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->hdmarx != NULL)
2531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmarx->XferAbortCallback != NULL)
2533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
2535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
2540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
2541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset errorCode */
2543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
2547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
2553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
ARM GAS  /tmp/ccfc96Pv.s 			page 78


2554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1651              		.loc 1 2566 0
 1652              		.cfi_startproc
 1653              		@ args = 0, pretend = 0, frame = 0
 1654              		@ frame_needed = 0, uses_anonymous_args = 0
 1655              	.LVL133:
 1656 0000 08B5     		push	{r3, lr}
 1657              	.LCFI15:
 1658              		.cfi_def_cfa_offset 8
 1659              		.cfi_offset 3, -8
 1660              		.cfi_offset 14, -4
2567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 1661              		.loc 1 2567 0
 1662 0002 406A     		ldr	r0, [r0, #36]
 1663              	.LVL134:
2568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 1664              		.loc 1 2569 0
 1665 0004 436E     		ldr	r3, [r0, #100]
 1666 0006 0022     		movs	r2, #0
 1667 0008 5A63     		str	r2, [r3, #52]
2570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->hdmatx != NULL)
 1668              		.loc 1 2572 0
 1669 000a 036E     		ldr	r3, [r0, #96]
 1670 000c 0BB1     		cbz	r3, .L111
2573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->hdmatx->XferAbortCallback != NULL)
 1671              		.loc 1 2574 0
 1672 000e 5B6B     		ldr	r3, [r3, #52]
 1673 0010 7BB9     		cbnz	r3, .L110
 1674              	.L111:
2575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
2577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
2580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
 1675              		.loc 1 2581 0
 1676 0012 0023     		movs	r3, #0
 1677 0014 A0F85230 		strh	r3, [r0, #82]	@ movhi
2582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1678              		.loc 1 2582 0
ARM GAS  /tmp/ccfc96Pv.s 			page 79


 1679 0018 A0F85A30 		strh	r3, [r0, #90]	@ movhi
2583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset errorCode */
2585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 1680              		.loc 1 2585 0
 1681 001c C366     		str	r3, [r0, #108]
2586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 1682              		.loc 1 2588 0
 1683 001e 0368     		ldr	r3, [r0]
 1684 0020 0F22     		movs	r2, #15
 1685 0022 1A62     		str	r2, [r3, #32]
2589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 1686              		.loc 1 2591 0
 1687 0024 2023     		movs	r3, #32
 1688 0026 80F86930 		strb	r3, [r0, #105]
2592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1689              		.loc 1 2592 0
 1690 002a 80F86A30 		strb	r3, [r0, #106]
2593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
2595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 1691              		.loc 1 2595 0
 1692 002e FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 1693              	.LVL135:
 1694              	.L110:
 1695 0032 08BD     		pop	{r3, pc}
 1696              		.cfi_endproc
 1697              	.LFE176:
 1699              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 1700              		.align	2
 1701              		.thumb
 1702              		.thumb_func
 1704              	UART_DMATxAbortCallback:
 1705              	.LFB175:
2524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 1706              		.loc 1 2524 0
 1707              		.cfi_startproc
 1708              		@ args = 0, pretend = 0, frame = 0
 1709              		@ frame_needed = 0, uses_anonymous_args = 0
 1710              	.LVL136:
 1711 0000 08B5     		push	{r3, lr}
 1712              	.LCFI16:
 1713              		.cfi_def_cfa_offset 8
 1714              		.cfi_offset 3, -8
 1715              		.cfi_offset 14, -4
2525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   
 1716              		.loc 1 2525 0
 1717 0002 406A     		ldr	r0, [r0, #36]
 1718              	.LVL137:
2527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1719              		.loc 1 2527 0
 1720 0004 036E     		ldr	r3, [r0, #96]
 1721 0006 0022     		movs	r2, #0
ARM GAS  /tmp/ccfc96Pv.s 			page 80


 1722 0008 5A63     		str	r2, [r3, #52]
2530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1723              		.loc 1 2530 0
 1724 000a 436E     		ldr	r3, [r0, #100]
 1725 000c 0BB1     		cbz	r3, .L115
2532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1726              		.loc 1 2532 0
 1727 000e 5B6B     		ldr	r3, [r3, #52]
 1728 0010 7BB9     		cbnz	r3, .L114
 1729              	.L115:
2539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1730              		.loc 1 2539 0
 1731 0012 0023     		movs	r3, #0
 1732 0014 A0F85230 		strh	r3, [r0, #82]	@ movhi
2540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1733              		.loc 1 2540 0
 1734 0018 A0F85A30 		strh	r3, [r0, #90]	@ movhi
2543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1735              		.loc 1 2543 0
 1736 001c C366     		str	r3, [r0, #108]
2546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1737              		.loc 1 2546 0
 1738 001e 0368     		ldr	r3, [r0]
 1739 0020 0F22     		movs	r2, #15
 1740 0022 1A62     		str	r2, [r3, #32]
2549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1741              		.loc 1 2549 0
 1742 0024 2023     		movs	r3, #32
 1743 0026 80F86930 		strb	r3, [r0, #105]
2550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1744              		.loc 1 2550 0
 1745 002a 80F86A30 		strb	r3, [r0, #106]
2553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1746              		.loc 1 2553 0
 1747 002e FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 1748              	.LVL138:
 1749              	.L114:
 1750 0032 08BD     		pop	{r3, pc}
 1751              		.cfi_endproc
 1752              	.LFE175:
 1754              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 1755              		.align	2
 1756              		.weak	HAL_UART_AbortTransmitCpltCallback
 1757              		.thumb
 1758              		.thumb_func
 1760              	HAL_UART_AbortTransmitCpltCallback:
 1761              	.LFB153:
1859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1762              		.loc 1 1859 0
 1763              		.cfi_startproc
 1764              		@ args = 0, pretend = 0, frame = 0
 1765              		@ frame_needed = 0, uses_anonymous_args = 0
 1766              		@ link register save eliminated.
 1767              	.LVL139:
 1768 0000 7047     		bx	lr
 1769              		.cfi_endproc
 1770              	.LFE153:
ARM GAS  /tmp/ccfc96Pv.s 			page 81


 1772 0002 00BF     		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 1773              		.align	2
 1774              		.global	HAL_UART_AbortTransmit_IT
 1775              		.thumb
 1776              		.thumb_func
 1778              	HAL_UART_AbortTransmit_IT:
 1779              	.LFB144:
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 1780              		.loc 1 1489 0
 1781              		.cfi_startproc
 1782              		@ args = 0, pretend = 0, frame = 0
 1783              		@ frame_needed = 0, uses_anonymous_args = 0
 1784              	.LVL140:
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 1785              		.loc 1 1489 0
 1786 0000 10B5     		push	{r4, lr}
 1787              	.LCFI17:
 1788              		.cfi_def_cfa_offset 8
 1789              		.cfi_offset 4, -8
 1790              		.cfi_offset 14, -4
 1791 0002 0446     		mov	r4, r0
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1792              		.loc 1 1491 0
 1793 0004 0268     		ldr	r2, [r0]
 1794 0006 1368     		ldr	r3, [r2]
 1795 0008 23F0C003 		bic	r3, r3, #192
 1796 000c 1360     		str	r3, [r2]
1494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1797              		.loc 1 1494 0
 1798 000e 0368     		ldr	r3, [r0]
 1799 0010 9A68     		ldr	r2, [r3, #8]
 1800 0012 12F0800F 		tst	r2, #128
 1801 0016 18D0     		beq	.L120
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1802              		.loc 1 1496 0
 1803 0018 9A68     		ldr	r2, [r3, #8]
 1804 001a 22F08002 		bic	r2, r2, #128
 1805 001e 9A60     		str	r2, [r3, #8]
1499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1806              		.loc 1 1499 0
 1807 0020 036E     		ldr	r3, [r0, #96]
 1808 0022 4BB1     		cbz	r3, .L121
1503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1809              		.loc 1 1503 0
 1810 0024 0E4A     		ldr	r2, .L124
 1811 0026 5A63     		str	r2, [r3, #52]
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1812              		.loc 1 1506 0
 1813 0028 006E     		ldr	r0, [r0, #96]
 1814              	.LVL141:
 1815 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1816              	.LVL142:
 1817 002e A0B1     		cbz	r0, .L122
1509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 1818              		.loc 1 1509 0
 1819 0030 206E     		ldr	r0, [r4, #96]
 1820 0032 436B     		ldr	r3, [r0, #52]
ARM GAS  /tmp/ccfc96Pv.s 			page 82


 1821 0034 9847     		blx	r3
 1822              	.LVL143:
 1823 0036 10E0     		b	.L122
 1824              	.LVL144:
 1825              	.L121:
1515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1826              		.loc 1 1515 0
 1827 0038 0023     		movs	r3, #0
 1828 003a A0F85230 		strh	r3, [r0, #82]	@ movhi
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1829              		.loc 1 1518 0
 1830 003e 2023     		movs	r3, #32
 1831 0040 80F86930 		strb	r3, [r0, #105]
1521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1832              		.loc 1 1521 0
 1833 0044 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 1834              	.LVL145:
 1835 0048 07E0     		b	.L122
 1836              	.LVL146:
 1837              	.L120:
1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1838              		.loc 1 1527 0
 1839 004a 0023     		movs	r3, #0
 1840 004c A0F85230 		strh	r3, [r0, #82]	@ movhi
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1841              		.loc 1 1530 0
 1842 0050 2023     		movs	r3, #32
 1843 0052 80F86930 		strb	r3, [r0, #105]
1533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1844              		.loc 1 1533 0
 1845 0056 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 1846              	.LVL147:
 1847              	.L122:
1537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1848              		.loc 1 1537 0
 1849 005a 0020     		movs	r0, #0
 1850 005c 10BD     		pop	{r4, pc}
 1851              	.LVL148:
 1852              	.L125:
 1853 005e 00BF     		.align	2
 1854              	.L124:
 1855 0060 00000000 		.word	UART_DMATxOnlyAbortCallback
 1856              		.cfi_endproc
 1857              	.LFE144:
 1859              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 1860              		.align	2
 1861              		.thumb
 1862              		.thumb_func
 1864              	UART_DMATxOnlyAbortCallback:
 1865              	.LFB177:
2596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
ARM GAS  /tmp/ccfc96Pv.s 			page 83


2603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1866              		.loc 1 2608 0
 1867              		.cfi_startproc
 1868              		@ args = 0, pretend = 0, frame = 0
 1869              		@ frame_needed = 0, uses_anonymous_args = 0
 1870              	.LVL149:
 1871 0000 08B5     		push	{r3, lr}
 1872              	.LCFI18:
 1873              		.cfi_def_cfa_offset 8
 1874              		.cfi_offset 3, -8
 1875              		.cfi_offset 14, -4
2609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1876              		.loc 1 2609 0
 1877 0002 406A     		ldr	r0, [r0, #36]
 1878              	.LVL150:
2610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
 1879              		.loc 1 2611 0
 1880 0004 0023     		movs	r3, #0
 1881 0006 A0F85230 		strh	r3, [r0, #82]	@ movhi
2612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 1882              		.loc 1 2614 0
 1883 000a 2023     		movs	r3, #32
 1884 000c 80F86930 		strb	r3, [r0, #105]
2615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
2617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 1885              		.loc 1 2617 0
 1886 0010 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 1887              	.LVL151:
 1888 0014 08BD     		pop	{r3, pc}
 1889              		.cfi_endproc
 1890              	.LFE177:
 1892 0016 00BF     		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 1893              		.align	2
 1894              		.weak	HAL_UART_AbortReceiveCpltCallback
 1895              		.thumb
 1896              		.thumb_func
 1898              	HAL_UART_AbortReceiveCpltCallback:
 1899              	.LFB154:
1874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1900              		.loc 1 1874 0
 1901              		.cfi_startproc
 1902              		@ args = 0, pretend = 0, frame = 0
 1903              		@ frame_needed = 0, uses_anonymous_args = 0
 1904              		@ link register save eliminated.
 1905              	.LVL152:
 1906 0000 7047     		bx	lr
 1907              		.cfi_endproc
 1908              	.LFE154:
ARM GAS  /tmp/ccfc96Pv.s 			page 84


 1910 0002 00BF     		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 1911              		.align	2
 1912              		.global	HAL_UART_AbortReceive_IT
 1913              		.thumb
 1914              		.thumb_func
 1916              	HAL_UART_AbortReceive_IT:
 1917              	.LFB145:
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1918              		.loc 1 1554 0
 1919              		.cfi_startproc
 1920              		@ args = 0, pretend = 0, frame = 0
 1921              		@ frame_needed = 0, uses_anonymous_args = 0
 1922              	.LVL153:
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1923              		.loc 1 1554 0
 1924 0000 10B5     		push	{r4, lr}
 1925              	.LCFI19:
 1926              		.cfi_def_cfa_offset 8
 1927              		.cfi_offset 4, -8
 1928              		.cfi_offset 14, -4
 1929 0002 0446     		mov	r4, r0
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1930              		.loc 1 1556 0
 1931 0004 0268     		ldr	r2, [r0]
 1932 0006 1368     		ldr	r3, [r2]
 1933 0008 23F49073 		bic	r3, r3, #288
 1934 000c 1360     		str	r3, [r2]
1557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1935              		.loc 1 1557 0
 1936 000e 0268     		ldr	r2, [r0]
 1937 0010 9368     		ldr	r3, [r2, #8]
 1938 0012 23F00103 		bic	r3, r3, #1
 1939 0016 9360     		str	r3, [r2, #8]
1560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1940              		.loc 1 1560 0
 1941 0018 0368     		ldr	r3, [r0]
 1942 001a 9A68     		ldr	r2, [r3, #8]
 1943 001c 12F0400F 		tst	r2, #64
 1944 0020 1BD0     		beq	.L130
1562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1945              		.loc 1 1562 0
 1946 0022 9A68     		ldr	r2, [r3, #8]
 1947 0024 22F04002 		bic	r2, r2, #64
 1948 0028 9A60     		str	r2, [r3, #8]
1565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1949              		.loc 1 1565 0
 1950 002a 436E     		ldr	r3, [r0, #100]
 1951 002c 4BB1     		cbz	r3, .L131
1569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1952              		.loc 1 1569 0
 1953 002e 114A     		ldr	r2, .L134
 1954 0030 5A63     		str	r2, [r3, #52]
1572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1955              		.loc 1 1572 0
 1956 0032 406E     		ldr	r0, [r0, #100]
 1957              	.LVL154:
 1958 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
ARM GAS  /tmp/ccfc96Pv.s 			page 85


 1959              	.LVL155:
 1960 0038 C8B1     		cbz	r0, .L132
1575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 1961              		.loc 1 1575 0
 1962 003a 606E     		ldr	r0, [r4, #100]
 1963 003c 436B     		ldr	r3, [r0, #52]
 1964 003e 9847     		blx	r3
 1965              	.LVL156:
 1966 0040 15E0     		b	.L132
 1967              	.LVL157:
 1968              	.L131:
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1969              		.loc 1 1581 0
 1970 0042 0023     		movs	r3, #0
 1971 0044 A0F85A30 		strh	r3, [r0, #90]	@ movhi
1584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1972              		.loc 1 1584 0
 1973 0048 0368     		ldr	r3, [r0]
 1974 004a 0F22     		movs	r2, #15
 1975 004c 1A62     		str	r2, [r3, #32]
1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1976              		.loc 1 1587 0
 1977 004e 2023     		movs	r3, #32
 1978 0050 80F86A30 		strb	r3, [r0, #106]
1590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 1979              		.loc 1 1590 0
 1980 0054 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 1981              	.LVL158:
 1982 0058 09E0     		b	.L132
 1983              	.LVL159:
 1984              	.L130:
1596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1985              		.loc 1 1596 0
 1986 005a 0022     		movs	r2, #0
 1987 005c A0F85A20 		strh	r2, [r0, #90]	@ movhi
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1988              		.loc 1 1599 0
 1989 0060 0F22     		movs	r2, #15
 1990 0062 1A62     		str	r2, [r3, #32]
1602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1991              		.loc 1 1602 0
 1992 0064 2023     		movs	r3, #32
 1993 0066 80F86A30 		strb	r3, [r0, #106]
1605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1994              		.loc 1 1605 0
 1995 006a FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 1996              	.LVL160:
 1997              	.L132:
1609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1998              		.loc 1 1609 0
 1999 006e 0020     		movs	r0, #0
 2000 0070 10BD     		pop	{r4, pc}
 2001              	.LVL161:
 2002              	.L135:
 2003 0072 00BF     		.align	2
 2004              	.L134:
 2005 0074 00000000 		.word	UART_DMARxOnlyAbortCallback
ARM GAS  /tmp/ccfc96Pv.s 			page 86


 2006              		.cfi_endproc
 2007              	.LFE145:
 2009              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 2010              		.align	2
 2011              		.thumb
 2012              		.thumb_func
 2014              	UART_DMARxOnlyAbortCallback:
 2015              	.LFB178:
2618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
2626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 2016              		.loc 1 2629 0
 2017              		.cfi_startproc
 2018              		@ args = 0, pretend = 0, frame = 0
 2019              		@ frame_needed = 0, uses_anonymous_args = 0
 2020              	.LVL162:
 2021 0000 08B5     		push	{r3, lr}
 2022              	.LCFI20:
 2023              		.cfi_def_cfa_offset 8
 2024              		.cfi_offset 3, -8
 2025              		.cfi_offset 14, -4
2630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2026              		.loc 1 2630 0
 2027 0002 406A     		ldr	r0, [r0, #36]
 2028              	.LVL163:
2631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2029              		.loc 1 2632 0
 2030 0004 0023     		movs	r3, #0
 2031 0006 A0F85A30 		strh	r3, [r0, #90]	@ movhi
2633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 2032              		.loc 1 2635 0
 2033 000a 0368     		ldr	r3, [r0]
 2034 000c 0F22     		movs	r2, #15
 2035 000e 1A62     		str	r2, [r3, #32]
2636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2036              		.loc 1 2638 0
 2037 0010 2023     		movs	r3, #32
 2038 0012 80F86A30 		strb	r3, [r0, #106]
2639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
2641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 2039              		.loc 1 2641 0
 2040 0016 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
ARM GAS  /tmp/ccfc96Pv.s 			page 87


 2041              	.LVL164:
 2042 001a 08BD     		pop	{r3, pc}
 2043              		.cfi_endproc
 2044              	.LFE178:
 2046              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 2047              		.align	2
 2048              		.global	HAL_MultiProcessor_EnterMuteMode
 2049              		.thumb
 2050              		.thumb_func
 2052              	HAL_MultiProcessor_EnterMuteMode:
 2053              	.LFB157:
1955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 2054              		.loc 1 1955 0
 2055              		.cfi_startproc
 2056              		@ args = 0, pretend = 0, frame = 0
 2057              		@ frame_needed = 0, uses_anonymous_args = 0
 2058              		@ link register save eliminated.
 2059              	.LVL165:
1956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2060              		.loc 1 1956 0
 2061 0000 0268     		ldr	r2, [r0]
 2062 0002 9369     		ldr	r3, [r2, #24]
 2063 0004 43F00403 		orr	r3, r3, #4
 2064 0008 9361     		str	r3, [r2, #24]
 2065 000a 7047     		bx	lr
 2066              		.cfi_endproc
 2067              	.LFE157:
 2069              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 2070              		.align	2
 2071              		.global	HAL_HalfDuplex_EnableTransmitter
 2072              		.thumb
 2073              		.thumb_func
 2075              	HAL_HalfDuplex_EnableTransmitter:
 2076              	.LFB158:
1965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 2077              		.loc 1 1965 0
 2078              		.cfi_startproc
 2079              		@ args = 0, pretend = 0, frame = 0
 2080              		@ frame_needed = 0, uses_anonymous_args = 0
 2081              		@ link register save eliminated.
 2082              	.LVL166:
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2083              		.loc 1 1967 0
 2084 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 2085 0004 012B     		cmp	r3, #1
 2086 0006 17D0     		beq	.L141
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2087              		.loc 1 1967 0 is_stmt 0 discriminator 2
 2088 0008 0123     		movs	r3, #1
 2089 000a 80F86830 		strb	r3, [r0, #104]
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2090              		.loc 1 1968 0 is_stmt 1 discriminator 2
 2091 000e 2423     		movs	r3, #36
 2092 0010 80F86930 		strb	r3, [r0, #105]
1971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
 2093              		.loc 1 1971 0 discriminator 2
 2094 0014 0268     		ldr	r2, [r0]
ARM GAS  /tmp/ccfc96Pv.s 			page 88


 2095 0016 1368     		ldr	r3, [r2]
 2096 0018 23F00C03 		bic	r3, r3, #12
 2097 001c 1360     		str	r3, [r2]
1973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2098              		.loc 1 1973 0 discriminator 2
 2099 001e 0268     		ldr	r2, [r0]
 2100 0020 1368     		ldr	r3, [r2]
 2101 0022 43F00803 		orr	r3, r3, #8
 2102 0026 1360     		str	r3, [r2]
1975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2103              		.loc 1 1975 0 discriminator 2
 2104 0028 2023     		movs	r3, #32
 2105 002a 80F86930 		strb	r3, [r0, #105]
1978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2106              		.loc 1 1978 0 discriminator 2
 2107 002e 0023     		movs	r3, #0
 2108 0030 80F86830 		strb	r3, [r0, #104]
1980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2109              		.loc 1 1980 0 discriminator 2
 2110 0034 1846     		mov	r0, r3
 2111              	.LVL167:
 2112 0036 7047     		bx	lr
 2113              	.LVL168:
 2114              	.L141:
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2115              		.loc 1 1967 0
 2116 0038 0220     		movs	r0, #2
 2117              	.LVL169:
1981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2118              		.loc 1 1981 0
 2119 003a 7047     		bx	lr
 2120              		.cfi_endproc
 2121              	.LFE158:
 2123              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 2124              		.align	2
 2125              		.global	HAL_HalfDuplex_EnableReceiver
 2126              		.thumb
 2127              		.thumb_func
 2129              	HAL_HalfDuplex_EnableReceiver:
 2130              	.LFB159:
1989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 2131              		.loc 1 1989 0
 2132              		.cfi_startproc
 2133              		@ args = 0, pretend = 0, frame = 0
 2134              		@ frame_needed = 0, uses_anonymous_args = 0
 2135              		@ link register save eliminated.
 2136              	.LVL170:
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2137              		.loc 1 1991 0
 2138 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 2139 0004 012B     		cmp	r3, #1
 2140 0006 17D0     		beq	.L144
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2141              		.loc 1 1991 0 is_stmt 0 discriminator 2
 2142 0008 0123     		movs	r3, #1
 2143 000a 80F86830 		strb	r3, [r0, #104]
1992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccfc96Pv.s 			page 89


 2144              		.loc 1 1992 0 is_stmt 1 discriminator 2
 2145 000e 2423     		movs	r3, #36
 2146 0010 80F86930 		strb	r3, [r0, #105]
1995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
 2147              		.loc 1 1995 0 discriminator 2
 2148 0014 0268     		ldr	r2, [r0]
 2149 0016 1368     		ldr	r3, [r2]
 2150 0018 23F00C03 		bic	r3, r3, #12
 2151 001c 1360     		str	r3, [r2]
1997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2152              		.loc 1 1997 0 discriminator 2
 2153 001e 0268     		ldr	r2, [r0]
 2154 0020 1368     		ldr	r3, [r2]
 2155 0022 43F00403 		orr	r3, r3, #4
 2156 0026 1360     		str	r3, [r2]
1999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Unlocked */
 2157              		.loc 1 1999 0 discriminator 2
 2158 0028 2023     		movs	r3, #32
 2159 002a 80F86930 		strb	r3, [r0, #105]
2001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2160              		.loc 1 2001 0 discriminator 2
 2161 002e 0023     		movs	r3, #0
 2162 0030 80F86830 		strb	r3, [r0, #104]
2003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2163              		.loc 1 2003 0 discriminator 2
 2164 0034 1846     		mov	r0, r3
 2165              	.LVL171:
 2166 0036 7047     		bx	lr
 2167              	.LVL172:
 2168              	.L144:
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2169              		.loc 1 1991 0
 2170 0038 0220     		movs	r0, #2
 2171              	.LVL173:
2004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2172              		.loc 1 2004 0
 2173 003a 7047     		bx	lr
 2174              		.cfi_endproc
 2175              	.LFE159:
 2177              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 2178              		.align	2
 2179              		.global	HAL_LIN_SendBreak
 2180              		.thumb
 2181              		.thumb_func
 2183              	HAL_LIN_SendBreak:
 2184              	.LFB160:
2013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
 2185              		.loc 1 2013 0
 2186              		.cfi_startproc
 2187              		@ args = 0, pretend = 0, frame = 0
 2188              		@ frame_needed = 0, uses_anonymous_args = 0
 2189              		@ link register save eliminated.
 2190              	.LVL174:
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2191              		.loc 1 2018 0
 2192 0000 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 2193 0004 012B     		cmp	r3, #1
ARM GAS  /tmp/ccfc96Pv.s 			page 90


 2194 0006 12D0     		beq	.L147
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2195              		.loc 1 2018 0 is_stmt 0 discriminator 2
 2196 0008 0123     		movs	r3, #1
 2197 000a 80F86830 		strb	r3, [r0, #104]
2020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2198              		.loc 1 2020 0 is_stmt 1 discriminator 2
 2199 000e 2423     		movs	r3, #36
 2200 0010 80F86930 		strb	r3, [r0, #105]
2023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2201              		.loc 1 2023 0 discriminator 2
 2202 0014 0268     		ldr	r2, [r0]
 2203 0016 9369     		ldr	r3, [r2, #24]
 2204 0018 43F00203 		orr	r3, r3, #2
 2205 001c 9361     		str	r3, [r2, #24]
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2206              		.loc 1 2025 0 discriminator 2
 2207 001e 2023     		movs	r3, #32
 2208 0020 80F86930 		strb	r3, [r0, #105]
2028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2209              		.loc 1 2028 0 discriminator 2
 2210 0024 0023     		movs	r3, #0
 2211 0026 80F86830 		strb	r3, [r0, #104]
2030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2212              		.loc 1 2030 0 discriminator 2
 2213 002a 1846     		mov	r0, r3
 2214              	.LVL175:
 2215 002c 7047     		bx	lr
 2216              	.LVL176:
 2217              	.L147:
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2218              		.loc 1 2018 0
 2219 002e 0220     		movs	r0, #2
 2220              	.LVL177:
2031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2221              		.loc 1 2031 0
 2222 0030 7047     		bx	lr
 2223              		.cfi_endproc
 2224              	.LFE160:
 2226 0032 00BF     		.section	.text.HAL_UART_GetState,"ax",%progbits
 2227              		.align	2
 2228              		.global	HAL_UART_GetState
 2229              		.thumb
 2230              		.thumb_func
 2232              	HAL_UART_GetState:
 2233              	.LFB161:
2061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 2234              		.loc 1 2061 0
 2235              		.cfi_startproc
 2236              		@ args = 0, pretend = 0, frame = 0
 2237              		@ frame_needed = 0, uses_anonymous_args = 0
 2238              		@ link register save eliminated.
 2239              	.LVL178:
2063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   temp2 = huart->RxState;
 2240              		.loc 1 2063 0
 2241 0000 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 2242              	.LVL179:
ARM GAS  /tmp/ccfc96Pv.s 			page 91


2064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2243              		.loc 1 2064 0
 2244 0004 90F86A00 		ldrb	r0, [r0, #106]	@ zero_extendqisi2
 2245              	.LVL180:
2067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2246              		.loc 1 2067 0
 2247 0008 1843     		orrs	r0, r0, r3
 2248              	.LVL181:
 2249 000a 7047     		bx	lr
 2250              		.cfi_endproc
 2251              	.LFE161:
 2253              		.section	.text.HAL_UART_GetError,"ax",%progbits
 2254              		.align	2
 2255              		.global	HAL_UART_GetError
 2256              		.thumb
 2257              		.thumb_func
 2259              	HAL_UART_GetError:
 2260              	.LFB162:
2076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return huart->ErrorCode;
 2261              		.loc 1 2076 0
 2262              		.cfi_startproc
 2263              		@ args = 0, pretend = 0, frame = 0
 2264              		@ frame_needed = 0, uses_anonymous_args = 0
 2265              		@ link register save eliminated.
 2266              	.LVL182:
2077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2267              		.loc 1 2077 0
 2268 0000 C06E     		ldr	r0, [r0, #108]
 2269              	.LVL183:
2078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 2270              		.loc 1 2078 0
 2271 0002 7047     		bx	lr
 2272              		.cfi_endproc
 2273              	.LFE162:
 2275              		.section	.text.UART_SetConfig,"ax",%progbits
 2276              		.align	2
 2277              		.global	UART_SetConfig
 2278              		.thumb
 2279              		.thumb_func
 2281              	UART_SetConfig:
 2282              	.LFB163:
2097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
 2283              		.loc 1 2097 0
 2284              		.cfi_startproc
 2285              		@ args = 0, pretend = 0, frame = 0
 2286              		@ frame_needed = 0, uses_anonymous_args = 0
 2287              	.LVL184:
 2288 0000 38B5     		push	{r3, r4, r5, lr}
 2289              	.LCFI21:
 2290              		.cfi_def_cfa_offset 16
 2291              		.cfi_offset 3, -16
 2292              		.cfi_offset 4, -12
 2293              		.cfi_offset 5, -8
 2294              		.cfi_offset 14, -4
 2295 0002 0446     		mov	r4, r0
 2296              	.LVL185:
2122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
ARM GAS  /tmp/ccfc96Pv.s 			page 92


 2297              		.loc 1 2122 0
 2298 0004 8268     		ldr	r2, [r0, #8]
 2299 0006 0369     		ldr	r3, [r0, #16]
 2300 0008 1A43     		orrs	r2, r2, r3
 2301 000a 4369     		ldr	r3, [r0, #20]
 2302 000c 1A43     		orrs	r2, r2, r3
 2303 000e C369     		ldr	r3, [r0, #28]
 2304 0010 1A43     		orrs	r2, r2, r3
 2305              	.LVL186:
2123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2306              		.loc 1 2123 0
 2307 0012 0168     		ldr	r1, [r0]
 2308 0014 0868     		ldr	r0, [r1]
 2309              	.LVL187:
 2310 0016 9C4B     		ldr	r3, .L205
 2311 0018 0340     		ands	r3, r3, r0
 2312 001a 1343     		orrs	r3, r3, r2
 2313 001c 0B60     		str	r3, [r1]
2128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2314              		.loc 1 2128 0
 2315 001e 2168     		ldr	r1, [r4]
 2316 0020 4B68     		ldr	r3, [r1, #4]
 2317 0022 23F44052 		bic	r2, r3, #12288
 2318              	.LVL188:
 2319 0026 E368     		ldr	r3, [r4, #12]
 2320 0028 1343     		orrs	r3, r3, r2
 2321 002a 4B60     		str	r3, [r1, #4]
2136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 2322              		.loc 1 2136 0
 2323 002c A269     		ldr	r2, [r4, #24]
 2324 002e 236A     		ldr	r3, [r4, #32]
 2325 0030 1A43     		orrs	r2, r2, r3
 2326              	.LVL189:
2137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2327              		.loc 1 2137 0
 2328 0032 2168     		ldr	r1, [r4]
 2329 0034 8B68     		ldr	r3, [r1, #8]
 2330 0036 23F43063 		bic	r3, r3, #2816
 2331 003a 1343     		orrs	r3, r3, r2
 2332 003c 8B60     		str	r3, [r1, #8]
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2333              		.loc 1 2140 0
 2334 003e 2568     		ldr	r5, [r4]
 2335 0040 924B     		ldr	r3, .L205+4
 2336 0042 9D42     		cmp	r5, r3
 2337 0044 12D1     		bne	.L151
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2338              		.loc 1 2140 0 is_stmt 0 discriminator 1
 2339 0046 03F55843 		add	r3, r3, #55296
 2340 004a 1B6B     		ldr	r3, [r3, #48]
 2341 004c 03F00303 		and	r3, r3, #3
 2342 0050 032B     		cmp	r3, #3
 2343 0052 09D8     		bhi	.L152
 2344 0054 DFE803F0 		tbb	[pc, r3]
 2345              	.LVL190:
 2346              	.L154:
 2347 0058 02       		.byte	(.L153-.L154)/2
ARM GAS  /tmp/ccfc96Pv.s 			page 93


 2348 0059 04       		.byte	(.L155-.L154)/2
 2349 005a 06       		.byte	(.L156-.L154)/2
 2350 005b 7E       		.byte	(.L196-.L154)/2
 2351              		.p2align 1
 2352              	.L153:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2353              		.loc 1 2140 0
 2354 005c 0123     		movs	r3, #1
 2355 005e 84E0     		b	.L157
 2356              	.L155:
 2357              	.LVL191:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2358              		.loc 1 2140 0 discriminator 5
 2359 0060 0423     		movs	r3, #4
 2360 0062 82E0     		b	.L157
 2361              	.LVL192:
 2362              	.L156:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2363              		.loc 1 2140 0 discriminator 6
 2364 0064 0823     		movs	r3, #8
 2365 0066 80E0     		b	.L157
 2366              	.LVL193:
 2367              	.L152:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2368              		.loc 1 2140 0 discriminator 3
 2369 0068 1023     		movs	r3, #16
 2370 006a 7EE0     		b	.L157
 2371              	.LVL194:
 2372              	.L151:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2373              		.loc 1 2140 0 discriminator 2
 2374 006c 884B     		ldr	r3, .L205+8
 2375 006e 9D42     		cmp	r5, r3
 2376 0070 19D1     		bne	.L158
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2377              		.loc 1 2140 0 discriminator 8
 2378 0072 03F5E633 		add	r3, r3, #117760
 2379 0076 1B6B     		ldr	r3, [r3, #48]
 2380 0078 03F44033 		and	r3, r3, #196608
 2381 007c B3F5803F 		cmp	r3, #65536
 2382 0080 0BD0     		beq	.L160
 2383 0082 01D8     		bhi	.L161
 2384 0084 3BB1     		cbz	r3, .L162
 2385 0086 0CE0     		b	.L159
 2386              	.L161:
 2387 0088 B3F5003F 		cmp	r3, #131072
 2388 008c 07D0     		beq	.L163
 2389 008e B3F5403F 		cmp	r3, #196608
 2390 0092 61D0     		beq	.L197
 2391 0094 05E0     		b	.L159
 2392              	.L162:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2393              		.loc 1 2140 0
 2394 0096 0023     		movs	r3, #0
 2395 0098 67E0     		b	.L157
 2396              	.L160:
 2397              	.LVL195:
ARM GAS  /tmp/ccfc96Pv.s 			page 94


2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2398              		.loc 1 2140 0 discriminator 12
 2399 009a 0423     		movs	r3, #4
 2400 009c 65E0     		b	.L157
 2401              	.LVL196:
 2402              	.L163:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2403              		.loc 1 2140 0 discriminator 13
 2404 009e 0823     		movs	r3, #8
 2405 00a0 63E0     		b	.L157
 2406              	.LVL197:
 2407              	.L159:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2408              		.loc 1 2140 0 discriminator 10
 2409 00a2 1023     		movs	r3, #16
 2410 00a4 61E0     		b	.L157
 2411              	.L158:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2412              		.loc 1 2140 0 discriminator 9
 2413 00a6 7B4B     		ldr	r3, .L205+12
 2414 00a8 9D42     		cmp	r5, r3
 2415 00aa 19D1     		bne	.L164
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2416              		.loc 1 2140 0 discriminator 15
 2417 00ac 03F5E433 		add	r3, r3, #116736
 2418 00b0 1B6B     		ldr	r3, [r3, #48]
 2419 00b2 03F44023 		and	r3, r3, #786432
 2420 00b6 B3F5802F 		cmp	r3, #262144
 2421 00ba 0BD0     		beq	.L166
 2422 00bc 01D8     		bhi	.L167
 2423 00be 3BB1     		cbz	r3, .L168
 2424 00c0 0CE0     		b	.L165
 2425              	.L167:
 2426 00c2 B3F5002F 		cmp	r3, #524288
 2427 00c6 07D0     		beq	.L169
 2428 00c8 B3F5402F 		cmp	r3, #786432
 2429 00cc 46D0     		beq	.L198
 2430 00ce 05E0     		b	.L165
 2431              	.L168:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2432              		.loc 1 2140 0
 2433 00d0 0023     		movs	r3, #0
 2434 00d2 4AE0     		b	.L157
 2435              	.L166:
 2436              	.LVL198:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2437              		.loc 1 2140 0 discriminator 19
 2438 00d4 0423     		movs	r3, #4
 2439 00d6 48E0     		b	.L157
 2440              	.LVL199:
 2441              	.L169:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2442              		.loc 1 2140 0 discriminator 20
 2443 00d8 0823     		movs	r3, #8
 2444 00da 46E0     		b	.L157
 2445              	.LVL200:
 2446              	.L165:
ARM GAS  /tmp/ccfc96Pv.s 			page 95


2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2447              		.loc 1 2140 0 discriminator 17
 2448 00dc 1023     		movs	r3, #16
 2449 00de 44E0     		b	.L157
 2450              	.L164:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2451              		.loc 1 2140 0 discriminator 16
 2452 00e0 6D4B     		ldr	r3, .L205+16
 2453 00e2 9D42     		cmp	r5, r3
 2454 00e4 19D1     		bne	.L170
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2455              		.loc 1 2140 0 discriminator 22
 2456 00e6 03F5E233 		add	r3, r3, #115712
 2457 00ea 1B6B     		ldr	r3, [r3, #48]
 2458 00ec 03F44013 		and	r3, r3, #3145728
 2459 00f0 B3F5801F 		cmp	r3, #1048576
 2460 00f4 0BD0     		beq	.L172
 2461 00f6 01D8     		bhi	.L173
 2462 00f8 3BB1     		cbz	r3, .L174
 2463 00fa 0CE0     		b	.L171
 2464              	.L173:
 2465 00fc B3F5001F 		cmp	r3, #2097152
 2466 0100 07D0     		beq	.L175
 2467 0102 B3F5401F 		cmp	r3, #3145728
 2468 0106 2BD0     		beq	.L199
 2469 0108 05E0     		b	.L171
 2470              	.L174:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2471              		.loc 1 2140 0
 2472 010a 0023     		movs	r3, #0
 2473 010c 2DE0     		b	.L157
 2474              	.L172:
 2475              	.LVL201:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2476              		.loc 1 2140 0 discriminator 26
 2477 010e 0423     		movs	r3, #4
 2478 0110 2BE0     		b	.L157
 2479              	.LVL202:
 2480              	.L175:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2481              		.loc 1 2140 0 discriminator 27
 2482 0112 0823     		movs	r3, #8
 2483 0114 29E0     		b	.L157
 2484              	.LVL203:
 2485              	.L171:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2486              		.loc 1 2140 0 discriminator 24
 2487 0116 1023     		movs	r3, #16
 2488 0118 27E0     		b	.L157
 2489              	.L170:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2490              		.loc 1 2140 0 discriminator 23
 2491 011a 604B     		ldr	r3, .L205+20
 2492 011c 9D42     		cmp	r5, r3
 2493 011e 21D1     		bne	.L200
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2494              		.loc 1 2140 0 discriminator 29
ARM GAS  /tmp/ccfc96Pv.s 			page 96


 2495 0120 03F5E033 		add	r3, r3, #114688
 2496 0124 1B6B     		ldr	r3, [r3, #48]
 2497 0126 03F44003 		and	r3, r3, #12582912
 2498 012a B3F5800F 		cmp	r3, #4194304
 2499 012e 0BD0     		beq	.L177
 2500 0130 01D8     		bhi	.L178
 2501 0132 3BB1     		cbz	r3, .L179
 2502 0134 0CE0     		b	.L176
 2503              	.L178:
 2504 0136 B3F5000F 		cmp	r3, #8388608
 2505 013a 07D0     		beq	.L180
 2506 013c B3F5400F 		cmp	r3, #12582912
 2507 0140 12D0     		beq	.L201
 2508 0142 05E0     		b	.L176
 2509              	.L179:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2510              		.loc 1 2140 0
 2511 0144 0023     		movs	r3, #0
 2512 0146 10E0     		b	.L157
 2513              	.L177:
 2514              	.LVL204:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2515              		.loc 1 2140 0 discriminator 33
 2516 0148 0423     		movs	r3, #4
 2517 014a 0EE0     		b	.L157
 2518              	.LVL205:
 2519              	.L180:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2520              		.loc 1 2140 0 discriminator 34
 2521 014c 0823     		movs	r3, #8
 2522 014e 0CE0     		b	.L157
 2523              	.LVL206:
 2524              	.L176:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2525              		.loc 1 2140 0 discriminator 31
 2526 0150 1023     		movs	r3, #16
 2527 0152 0AE0     		b	.L157
 2528              	.LVL207:
 2529              	.L196:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2530              		.loc 1 2140 0
 2531 0154 0223     		movs	r3, #2
 2532 0156 08E0     		b	.L157
 2533              	.LVL208:
 2534              	.L197:
 2535 0158 0223     		movs	r3, #2
 2536 015a 06E0     		b	.L157
 2537              	.L198:
 2538 015c 0223     		movs	r3, #2
 2539 015e 04E0     		b	.L157
 2540              	.L199:
 2541 0160 0223     		movs	r3, #2
 2542 0162 02E0     		b	.L157
 2543              	.L200:
 2544 0164 1023     		movs	r3, #16
 2545 0166 00E0     		b	.L157
 2546              	.L201:
ARM GAS  /tmp/ccfc96Pv.s 			page 97


 2547 0168 0223     		movs	r3, #2
 2548              	.LVL209:
 2549              	.L157:
2143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2550              		.loc 1 2143 0 is_stmt 1
 2551 016a E269     		ldr	r2, [r4, #28]
 2552 016c B2F5004F 		cmp	r2, #32768
 2553 0170 47D1     		bne	.L181
2145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2554              		.loc 1 2145 0
 2555 0172 082B     		cmp	r3, #8
 2556 0174 3BD8     		bhi	.L202
 2557 0176 DFE803F0 		tbb	[pc, r3]
 2558              	.L184:
 2559 017a 05       		.byte	(.L183-.L184)/2
 2560 017b 10       		.byte	(.L185-.L184)/2
 2561 017c 1B       		.byte	(.L186-.L184)/2
 2562 017d 3A       		.byte	(.L202-.L184)/2
 2563 017e 26       		.byte	(.L187-.L184)/2
 2564 017f 3A       		.byte	(.L202-.L184)/2
 2565 0180 3A       		.byte	(.L202-.L184)/2
 2566 0181 3A       		.byte	(.L202-.L184)/2
 2567 0182 31       		.byte	(.L188-.L184)/2
 2568 0183 00       		.p2align 1
 2569              	.L183:
2148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2570              		.loc 1 2148 0
 2571 0184 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2572              	.LVL210:
 2573 0188 6368     		ldr	r3, [r4, #4]
 2574 018a 5A08     		lsrs	r2, r3, #1
 2575 018c 02EB4000 		add	r0, r2, r0, lsl #1
 2576 0190 B0FBF3F3 		udiv	r3, r0, r3
 2577 0194 9BB2     		uxth	r3, r3
 2578              	.LVL211:
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2579              		.loc 1 2102 0
 2580 0196 0020     		movs	r0, #0
2149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
 2581              		.loc 1 2149 0
 2582 0198 2BE0     		b	.L182
 2583              	.LVL212:
 2584              	.L185:
2151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2585              		.loc 1 2151 0
 2586 019a FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 2587              	.LVL213:
 2588 019e 6368     		ldr	r3, [r4, #4]
 2589 01a0 5A08     		lsrs	r2, r3, #1
 2590 01a2 02EB4000 		add	r0, r2, r0, lsl #1
 2591 01a6 B0FBF3F3 		udiv	r3, r0, r3
 2592 01aa 9BB2     		uxth	r3, r3
 2593              	.LVL214:
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2594              		.loc 1 2102 0
 2595 01ac 0020     		movs	r0, #0
2152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
ARM GAS  /tmp/ccfc96Pv.s 			page 98


 2596              		.loc 1 2152 0
 2597 01ae 20E0     		b	.L182
 2598              	.LVL215:
 2599              	.L186:
2154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2600              		.loc 1 2154 0
 2601 01b0 6168     		ldr	r1, [r4, #4]
 2602 01b2 4A08     		lsrs	r2, r1, #1
 2603 01b4 02F57403 		add	r3, r2, #15990784
 2604              	.LVL216:
 2605 01b8 03F51053 		add	r3, r3, #9216
 2606 01bc B3FBF1F3 		udiv	r3, r3, r1
 2607 01c0 9BB2     		uxth	r3, r3
 2608              	.LVL217:
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2609              		.loc 1 2102 0
 2610 01c2 0020     		movs	r0, #0
2155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 2611              		.loc 1 2155 0
 2612 01c4 15E0     		b	.L182
 2613              	.LVL218:
 2614              	.L187:
2157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2615              		.loc 1 2157 0
 2616 01c6 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2617              	.LVL219:
 2618 01ca 6368     		ldr	r3, [r4, #4]
 2619 01cc 5A08     		lsrs	r2, r3, #1
 2620 01ce 02EB4000 		add	r0, r2, r0, lsl #1
 2621 01d2 B0FBF3F3 		udiv	r3, r0, r3
 2622 01d6 9BB2     		uxth	r3, r3
 2623              	.LVL220:
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2624              		.loc 1 2102 0
 2625 01d8 0020     		movs	r0, #0
2158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 2626              		.loc 1 2158 0
 2627 01da 0AE0     		b	.L182
 2628              	.LVL221:
 2629              	.L188:
2160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2630              		.loc 1 2160 0
 2631 01dc 6268     		ldr	r2, [r4, #4]
 2632 01de 5308     		lsrs	r3, r2, #1
 2633              	.LVL222:
 2634 01e0 03F58033 		add	r3, r3, #65536
 2635 01e4 B3FBF2F3 		udiv	r3, r3, r2
 2636 01e8 9BB2     		uxth	r3, r3
 2637              	.LVL223:
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2638              		.loc 1 2102 0
 2639 01ea 0020     		movs	r0, #0
2161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 2640              		.loc 1 2161 0
 2641 01ec 01E0     		b	.L182
 2642              	.LVL224:
 2643              	.L202:
ARM GAS  /tmp/ccfc96Pv.s 			page 99


2164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2644              		.loc 1 2164 0
 2645 01ee 0120     		movs	r0, #1
2101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 2646              		.loc 1 2101 0
 2647 01f0 0023     		movs	r3, #0
 2648              	.LVL225:
 2649              	.L182:
2168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 2650              		.loc 1 2168 0
 2651 01f2 23F00F02 		bic	r2, r3, #15
 2652              	.LVL226:
2169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
 2653              		.loc 1 2169 0
 2654 01f6 C3F34203 		ubfx	r3, r3, #1, #3
 2655              	.LVL227:
 2656 01fa 1343     		orrs	r3, r3, r2
 2657              	.LVL228:
2170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2658              		.loc 1 2170 0
 2659 01fc 2268     		ldr	r2, [r4]
 2660 01fe D360     		str	r3, [r2, #12]
 2661 0200 38BD     		pop	{r3, r4, r5, pc}
 2662              	.LVL229:
 2663              	.L181:
2174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2664              		.loc 1 2174 0
 2665 0202 082B     		cmp	r3, #8
 2666 0204 3DD8     		bhi	.L203
 2667 0206 DFE803F0 		tbb	[pc, r3]
 2668              	.L191:
 2669 020a 05       		.byte	(.L190-.L191)/2
 2670 020b 10       		.byte	(.L192-.L191)/2
 2671 020c 1B       		.byte	(.L193-.L191)/2
 2672 020d 3C       		.byte	(.L203-.L191)/2
 2673 020e 27       		.byte	(.L194-.L191)/2
 2674 020f 3C       		.byte	(.L203-.L191)/2
 2675 0210 3C       		.byte	(.L203-.L191)/2
 2676 0211 3C       		.byte	(.L203-.L191)/2
 2677 0212 32       		.byte	(.L195-.L191)/2
 2678 0213 00       		.p2align 1
 2679              	.L190:
2177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2680              		.loc 1 2177 0
 2681 0214 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 2682              	.LVL230:
 2683 0218 6368     		ldr	r3, [r4, #4]
 2684 021a 00EB5300 		add	r0, r0, r3, lsr #1
 2685 021e B0FBF3F0 		udiv	r0, r0, r3
 2686 0222 80B2     		uxth	r0, r0
 2687 0224 E860     		str	r0, [r5, #12]
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2688              		.loc 1 2102 0
 2689 0226 0020     		movs	r0, #0
2178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
 2690              		.loc 1 2178 0
 2691 0228 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccfc96Pv.s 			page 100


 2692              	.LVL231:
 2693              	.L192:
2180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2694              		.loc 1 2180 0
 2695 022a FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 2696              	.LVL232:
 2697 022e 6368     		ldr	r3, [r4, #4]
 2698 0230 00EB5300 		add	r0, r0, r3, lsr #1
 2699 0234 B0FBF3F0 		udiv	r0, r0, r3
 2700 0238 80B2     		uxth	r0, r0
 2701 023a E860     		str	r0, [r5, #12]
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2702              		.loc 1 2102 0
 2703 023c 0020     		movs	r0, #0
2181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 2704              		.loc 1 2181 0
 2705 023e 38BD     		pop	{r3, r4, r5, pc}
 2706              	.LVL233:
 2707              	.L193:
2183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2708              		.loc 1 2183 0
 2709 0240 6168     		ldr	r1, [r4, #4]
 2710 0242 4A08     		lsrs	r2, r1, #1
 2711 0244 02F5F403 		add	r3, r2, #7995392
 2712              	.LVL234:
 2713 0248 03F59053 		add	r3, r3, #4608
 2714 024c B3FBF1F3 		udiv	r3, r3, r1
 2715 0250 9BB2     		uxth	r3, r3
 2716 0252 EB60     		str	r3, [r5, #12]
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2717              		.loc 1 2102 0
 2718 0254 0020     		movs	r0, #0
2184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 2719              		.loc 1 2184 0
 2720 0256 38BD     		pop	{r3, r4, r5, pc}
 2721              	.LVL235:
 2722              	.L194:
2186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2723              		.loc 1 2186 0
 2724 0258 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2725              	.LVL236:
 2726 025c 6368     		ldr	r3, [r4, #4]
 2727 025e 00EB5300 		add	r0, r0, r3, lsr #1
 2728 0262 B0FBF3F0 		udiv	r0, r0, r3
 2729 0266 80B2     		uxth	r0, r0
 2730 0268 E860     		str	r0, [r5, #12]
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2731              		.loc 1 2102 0
 2732 026a 0020     		movs	r0, #0
2187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 2733              		.loc 1 2187 0
 2734 026c 38BD     		pop	{r3, r4, r5, pc}
 2735              	.LVL237:
 2736              	.L195:
2189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2737              		.loc 1 2189 0
 2738 026e 6268     		ldr	r2, [r4, #4]
ARM GAS  /tmp/ccfc96Pv.s 			page 101


 2739 0270 5308     		lsrs	r3, r2, #1
 2740              	.LVL238:
 2741 0272 03F50043 		add	r3, r3, #32768
 2742 0276 B3FBF2F3 		udiv	r3, r3, r2
 2743 027a 9BB2     		uxth	r3, r3
 2744 027c EB60     		str	r3, [r5, #12]
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2745              		.loc 1 2102 0
 2746 027e 0020     		movs	r0, #0
2190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 2747              		.loc 1 2190 0
 2748 0280 38BD     		pop	{r3, r4, r5, pc}
 2749              	.LVL239:
 2750              	.L203:
2193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 2751              		.loc 1 2193 0
 2752 0282 0120     		movs	r0, #1
 2753              	.LVL240:
2200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2754              		.loc 1 2200 0
 2755 0284 38BD     		pop	{r3, r4, r5, pc}
 2756              	.LVL241:
 2757              	.L206:
 2758 0286 00BF     		.align	2
 2759              	.L205:
 2760 0288 F369FFEF 		.word	-268473869
 2761 028c 00380140 		.word	1073821696
 2762 0290 00440040 		.word	1073759232
 2763 0294 00480040 		.word	1073760256
 2764 0298 004C0040 		.word	1073761280
 2765 029c 00500040 		.word	1073762304
 2766              		.cfi_endproc
 2767              	.LFE163:
 2769              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 2770              		.align	2
 2771              		.global	UART_AdvFeatureConfig
 2772              		.thumb
 2773              		.thumb_func
 2775              	UART_AdvFeatureConfig:
 2776              	.LFB164:
2208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 2777              		.loc 1 2208 0
 2778              		.cfi_startproc
 2779              		@ args = 0, pretend = 0, frame = 0
 2780              		@ frame_needed = 0, uses_anonymous_args = 0
 2781              		@ link register save eliminated.
 2782              	.LVL242:
2213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2783              		.loc 1 2213 0
 2784 0000 436A     		ldr	r3, [r0, #36]
 2785 0002 13F0010F 		tst	r3, #1
 2786 0006 06D0     		beq	.L208
2216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2787              		.loc 1 2216 0
 2788 0008 0168     		ldr	r1, [r0]
 2789 000a 4B68     		ldr	r3, [r1, #4]
 2790 000c 23F40032 		bic	r2, r3, #131072
ARM GAS  /tmp/ccfc96Pv.s 			page 102


 2791 0010 836A     		ldr	r3, [r0, #40]
 2792 0012 1343     		orrs	r3, r3, r2
 2793 0014 4B60     		str	r3, [r1, #4]
 2794              	.L208:
2220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2795              		.loc 1 2220 0
 2796 0016 436A     		ldr	r3, [r0, #36]
 2797 0018 13F0020F 		tst	r3, #2
 2798 001c 06D0     		beq	.L209
2223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2799              		.loc 1 2223 0
 2800 001e 0168     		ldr	r1, [r0]
 2801 0020 4B68     		ldr	r3, [r1, #4]
 2802 0022 23F48032 		bic	r2, r3, #65536
 2803 0026 C36A     		ldr	r3, [r0, #44]
 2804 0028 1343     		orrs	r3, r3, r2
 2805 002a 4B60     		str	r3, [r1, #4]
 2806              	.L209:
2227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2807              		.loc 1 2227 0
 2808 002c 436A     		ldr	r3, [r0, #36]
 2809 002e 13F0040F 		tst	r3, #4
 2810 0032 06D0     		beq	.L210
2230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2811              		.loc 1 2230 0
 2812 0034 0168     		ldr	r1, [r0]
 2813 0036 4B68     		ldr	r3, [r1, #4]
 2814 0038 23F48022 		bic	r2, r3, #262144
 2815 003c 036B     		ldr	r3, [r0, #48]
 2816 003e 1343     		orrs	r3, r3, r2
 2817 0040 4B60     		str	r3, [r1, #4]
 2818              	.L210:
2234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2819              		.loc 1 2234 0
 2820 0042 436A     		ldr	r3, [r0, #36]
 2821 0044 13F0080F 		tst	r3, #8
 2822 0048 06D0     		beq	.L211
2237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2823              		.loc 1 2237 0
 2824 004a 0168     		ldr	r1, [r0]
 2825 004c 4B68     		ldr	r3, [r1, #4]
 2826 004e 23F40042 		bic	r2, r3, #32768
 2827 0052 436B     		ldr	r3, [r0, #52]
 2828 0054 1343     		orrs	r3, r3, r2
 2829 0056 4B60     		str	r3, [r1, #4]
 2830              	.L211:
2241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2831              		.loc 1 2241 0
 2832 0058 436A     		ldr	r3, [r0, #36]
 2833 005a 13F0100F 		tst	r3, #16
 2834 005e 06D0     		beq	.L212
2244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2835              		.loc 1 2244 0
 2836 0060 0168     		ldr	r1, [r0]
 2837 0062 8B68     		ldr	r3, [r1, #8]
 2838 0064 23F48052 		bic	r2, r3, #4096
 2839 0068 836B     		ldr	r3, [r0, #56]
ARM GAS  /tmp/ccfc96Pv.s 			page 103


 2840 006a 1343     		orrs	r3, r3, r2
 2841 006c 8B60     		str	r3, [r1, #8]
 2842              	.L212:
2248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2843              		.loc 1 2248 0
 2844 006e 436A     		ldr	r3, [r0, #36]
 2845 0070 13F0200F 		tst	r3, #32
 2846 0074 06D0     		beq	.L213
2251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2847              		.loc 1 2251 0
 2848 0076 0168     		ldr	r1, [r0]
 2849 0078 8B68     		ldr	r3, [r1, #8]
 2850 007a 23F40052 		bic	r2, r3, #8192
 2851 007e C36B     		ldr	r3, [r0, #60]
 2852 0080 1343     		orrs	r3, r3, r2
 2853 0082 8B60     		str	r3, [r1, #8]
 2854              	.L213:
2255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2855              		.loc 1 2255 0
 2856 0084 436A     		ldr	r3, [r0, #36]
 2857 0086 13F0400F 		tst	r3, #64
 2858 008a 11D0     		beq	.L214
2259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 2859              		.loc 1 2259 0
 2860 008c 0168     		ldr	r1, [r0]
 2861 008e 4B68     		ldr	r3, [r1, #4]
 2862 0090 23F48012 		bic	r2, r3, #1048576
 2863 0094 036C     		ldr	r3, [r0, #64]
 2864 0096 1343     		orrs	r3, r3, r2
 2865 0098 4B60     		str	r3, [r1, #4]
2261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2866              		.loc 1 2261 0
 2867 009a 036C     		ldr	r3, [r0, #64]
 2868 009c B3F5801F 		cmp	r3, #1048576
 2869 00a0 06D1     		bne	.L214
2264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 2870              		.loc 1 2264 0
 2871 00a2 0168     		ldr	r1, [r0]
 2872 00a4 4B68     		ldr	r3, [r1, #4]
 2873 00a6 23F4C002 		bic	r2, r3, #6291456
 2874 00aa 436C     		ldr	r3, [r0, #68]
 2875 00ac 1343     		orrs	r3, r3, r2
 2876 00ae 4B60     		str	r3, [r1, #4]
 2877              	.L214:
2269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2878              		.loc 1 2269 0
 2879 00b0 436A     		ldr	r3, [r0, #36]
 2880 00b2 13F0800F 		tst	r3, #128
 2881 00b6 06D0     		beq	.L207
2272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2882              		.loc 1 2272 0
 2883 00b8 0168     		ldr	r1, [r0]
 2884 00ba 4B68     		ldr	r3, [r1, #4]
 2885 00bc 23F40022 		bic	r2, r3, #524288
 2886 00c0 836C     		ldr	r3, [r0, #72]
 2887 00c2 1343     		orrs	r3, r3, r2
 2888 00c4 4B60     		str	r3, [r1, #4]
ARM GAS  /tmp/ccfc96Pv.s 			page 104


 2889              	.L207:
 2890 00c6 7047     		bx	lr
 2891              		.cfi_endproc
 2892              	.LFE164:
 2894              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 2895              		.align	2
 2896              		.global	UART_WaitOnFlagUntilTimeout
 2897              		.thumb
 2898              		.thumb_func
 2900              	UART_WaitOnFlagUntilTimeout:
 2901              	.LFB166:
2332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Wait until flag is set */
 2902              		.loc 1 2332 0
 2903              		.cfi_startproc
 2904              		@ args = 4, pretend = 0, frame = 0
 2905              		@ frame_needed = 0, uses_anonymous_args = 0
 2906              	.LVL243:
 2907 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2908              	.LCFI22:
 2909              		.cfi_def_cfa_offset 24
 2910              		.cfi_offset 4, -24
 2911              		.cfi_offset 5, -20
 2912              		.cfi_offset 6, -16
 2913              		.cfi_offset 7, -12
 2914              		.cfi_offset 8, -8
 2915              		.cfi_offset 14, -4
 2916 0004 0546     		mov	r5, r0
 2917 0006 0F46     		mov	r7, r1
 2918 0008 1646     		mov	r6, r2
 2919 000a 9846     		mov	r8, r3
 2920 000c 069C     		ldr	r4, [sp, #24]
2334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2921              		.loc 1 2334 0
 2922 000e 1EE0     		b	.L218
 2923              	.LVL244:
 2924              	.L221:
2337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2925              		.loc 1 2337 0
 2926 0010 B4F1FF3F 		cmp	r4, #-1
 2927 0014 1BD0     		beq	.L218
2339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 2928              		.loc 1 2339 0
 2929 0016 2CB1     		cbz	r4, .L219
2339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 2930              		.loc 1 2339 0 is_stmt 0 discriminator 1
 2931 0018 FFF7FEFF 		bl	HAL_GetTick
 2932              	.LVL245:
 2933 001c C8EB0000 		rsb	r0, r8, r0
 2934 0020 8442     		cmp	r4, r0
 2935 0022 14D2     		bcs	.L218
 2936              	.L219:
2342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2937              		.loc 1 2342 0 is_stmt 1
 2938 0024 2A68     		ldr	r2, [r5]
 2939 0026 1368     		ldr	r3, [r2]
 2940 0028 23F4D073 		bic	r3, r3, #416
 2941 002c 1360     		str	r3, [r2]
ARM GAS  /tmp/ccfc96Pv.s 			page 105


2343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2942              		.loc 1 2343 0
 2943 002e 2A68     		ldr	r2, [r5]
 2944 0030 9368     		ldr	r3, [r2, #8]
 2945 0032 23F00103 		bic	r3, r3, #1
 2946 0036 9360     		str	r3, [r2, #8]
2345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 2947              		.loc 1 2345 0
 2948 0038 2023     		movs	r3, #32
 2949 003a 85F86930 		strb	r3, [r5, #105]
2346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2950              		.loc 1 2346 0
 2951 003e 85F86A30 		strb	r3, [r5, #106]
2349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
 2952              		.loc 1 2349 0
 2953 0042 0023     		movs	r3, #0
 2954 0044 85F86830 		strb	r3, [r5, #104]
2350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 2955              		.loc 1 2350 0
 2956 0048 0320     		movs	r0, #3
 2957 004a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2958              	.LVL246:
 2959              	.L218:
2334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2960              		.loc 1 2334 0
 2961 004e 2B68     		ldr	r3, [r5]
 2962 0050 DB69     		ldr	r3, [r3, #28]
 2963 0052 37EA0303 		bics	r3, r7, r3
 2964 0056 0CBF     		ite	eq
 2965 0058 0123     		moveq	r3, #1
 2966 005a 0023     		movne	r3, #0
 2967 005c B342     		cmp	r3, r6
 2968 005e D7D0     		beq	.L221
2354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2969              		.loc 1 2354 0
 2970 0060 0020     		movs	r0, #0
2355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2971              		.loc 1 2355 0
 2972 0062 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2973              		.cfi_endproc
 2974              	.LFE166:
 2976 0066 00BF     		.section	.text.HAL_UART_Transmit,"ax",%progbits
 2977              		.align	2
 2978              		.global	HAL_UART_Transmit
 2979              		.thumb
 2980              		.thumb_func
 2982              	HAL_UART_Transmit:
 2983              	.LFB131:
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 2984              		.loc 1 724 0
 2985              		.cfi_startproc
 2986              		@ args = 0, pretend = 0, frame = 0
 2987              		@ frame_needed = 0, uses_anonymous_args = 0
 2988              	.LVL247:
 2989 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2990              	.LCFI23:
 2991              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccfc96Pv.s 			page 106


 2992              		.cfi_offset 4, -24
 2993              		.cfi_offset 5, -20
 2994              		.cfi_offset 6, -16
 2995              		.cfi_offset 7, -12
 2996              		.cfi_offset 8, -8
 2997              		.cfi_offset 14, -4
 2998 0004 82B0     		sub	sp, sp, #8
 2999              	.LCFI24:
 3000              		.cfi_def_cfa_offset 32
 3001 0006 1E46     		mov	r6, r3
 3002              	.LVL248:
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3003              		.loc 1 729 0
 3004 0008 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3005              	.LVL249:
 3006 000c DBB2     		uxtb	r3, r3
 3007 000e 202B     		cmp	r3, #32
 3008 0010 4FD1     		bne	.L229
 3009 0012 0446     		mov	r4, r0
 3010 0014 0D46     		mov	r5, r1
 3011 0016 9046     		mov	r8, r2
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3012              		.loc 1 731 0
 3013 0018 0029     		cmp	r1, #0
 3014 001a 4CD0     		beq	.L230
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3015              		.loc 1 731 0 is_stmt 0 discriminator 1
 3016 001c 002A     		cmp	r2, #0
 3017 001e 4CD0     		beq	.L231
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3018              		.loc 1 737 0 is_stmt 1
 3019 0020 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3020 0024 012B     		cmp	r3, #1
 3021 0026 4AD0     		beq	.L232
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3022              		.loc 1 737 0 is_stmt 0 discriminator 2
 3023 0028 0123     		movs	r3, #1
 3024 002a 80F86830 		strb	r3, [r0, #104]
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 3025              		.loc 1 739 0 is_stmt 1 discriminator 2
 3026 002e 0023     		movs	r3, #0
 3027 0030 C366     		str	r3, [r0, #108]
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3028              		.loc 1 740 0 discriminator 2
 3029 0032 2123     		movs	r3, #33
 3030 0034 80F86930 		strb	r3, [r0, #105]
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3031              		.loc 1 743 0 discriminator 2
 3032 0038 FFF7FEFF 		bl	HAL_GetTick
 3033              	.LVL250:
 3034 003c 0746     		mov	r7, r0
 3035              	.LVL251:
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 3036              		.loc 1 745 0 discriminator 2
 3037 003e A4F85080 		strh	r8, [r4, #80]	@ movhi
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 3038              		.loc 1 746 0 discriminator 2
ARM GAS  /tmp/ccfc96Pv.s 			page 107


 3039 0042 A4F85280 		strh	r8, [r4, #82]	@ movhi
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3040              		.loc 1 747 0 discriminator 2
 3041 0046 1FE0     		b	.L225
 3042              	.LVL252:
 3043              	.L228:
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 3044              		.loc 1 749 0
 3045 0048 B4F85230 		ldrh	r3, [r4, #82]
 3046 004c 9BB2     		uxth	r3, r3
 3047 004e 013B     		subs	r3, r3, #1
 3048 0050 9BB2     		uxth	r3, r3
 3049 0052 A4F85230 		strh	r3, [r4, #82]	@ movhi
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3050              		.loc 1 750 0
 3051 0056 0096     		str	r6, [sp]
 3052 0058 3B46     		mov	r3, r7
 3053 005a 0022     		movs	r2, #0
 3054 005c 8021     		movs	r1, #128
 3055 005e 2046     		mov	r0, r4
 3056 0060 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3057              	.LVL253:
 3058 0064 68BB     		cbnz	r0, .L233
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3059              		.loc 1 754 0
 3060 0066 A368     		ldr	r3, [r4, #8]
 3061 0068 B3F5805F 		cmp	r3, #4096
 3062 006c 08D1     		bne	.L226
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3063              		.loc 1 754 0 is_stmt 0 discriminator 1
 3064 006e 2369     		ldr	r3, [r4, #16]
 3065 0070 33B9     		cbnz	r3, .L226
 3066              	.LVL254:
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pData += 2U;
 3067              		.loc 1 757 0 is_stmt 1
 3068 0072 2268     		ldr	r2, [r4]
 3069 0074 35F8023B 		ldrh	r3, [r5], #2
 3070              	.LVL255:
 3071 0078 C3F30803 		ubfx	r3, r3, #0, #9
 3072 007c 1385     		strh	r3, [r2, #40]	@ movhi
 3073              	.LVL256:
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3074              		.loc 1 758 0
 3075 007e 03E0     		b	.L225
 3076              	.LVL257:
 3077              	.L226:
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3078              		.loc 1 762 0
 3079 0080 2368     		ldr	r3, [r4]
 3080              	.LVL258:
 3081 0082 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 3082 0084 1A85     		strh	r2, [r3, #40]	@ movhi
 3083 0086 0135     		adds	r5, r5, #1
 3084              	.LVL259:
 3085              	.L225:
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3086              		.loc 1 747 0
ARM GAS  /tmp/ccfc96Pv.s 			page 108


 3087 0088 B4F85230 		ldrh	r3, [r4, #82]
 3088 008c 9BB2     		uxth	r3, r3
 3089 008e 002B     		cmp	r3, #0
 3090 0090 DAD1     		bne	.L228
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3091              		.loc 1 765 0
 3092 0092 0096     		str	r6, [sp]
 3093 0094 3B46     		mov	r3, r7
 3094 0096 0022     		movs	r2, #0
 3095 0098 4021     		movs	r1, #64
 3096 009a 2046     		mov	r0, r4
 3097 009c FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3098              	.LVL260:
 3099 00a0 0346     		mov	r3, r0
 3100 00a2 80B9     		cbnz	r0, .L234
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3101              		.loc 1 771 0
 3102 00a4 2022     		movs	r2, #32
 3103 00a6 84F86920 		strb	r2, [r4, #105]
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3104              		.loc 1 774 0
 3105 00aa 0022     		movs	r2, #0
 3106 00ac 84F86820 		strb	r2, [r4, #104]
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3107              		.loc 1 776 0
 3108 00b0 0AE0     		b	.L224
 3109              	.LVL261:
 3110              	.L229:
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3111              		.loc 1 780 0
 3112 00b2 0223     		movs	r3, #2
 3113 00b4 08E0     		b	.L224
 3114              	.L230:
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3115              		.loc 1 733 0
 3116 00b6 0123     		movs	r3, #1
 3117 00b8 06E0     		b	.L224
 3118              	.L231:
 3119 00ba 0123     		movs	r3, #1
 3120 00bc 04E0     		b	.L224
 3121              	.L232:
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3122              		.loc 1 737 0
 3123 00be 0223     		movs	r3, #2
 3124 00c0 02E0     		b	.L224
 3125              	.LVL262:
 3126              	.L233:
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3127              		.loc 1 752 0
 3128 00c2 0323     		movs	r3, #3
 3129 00c4 00E0     		b	.L224
 3130              	.L234:
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3131              		.loc 1 767 0
 3132 00c6 0323     		movs	r3, #3
 3133              	.LVL263:
 3134              	.L224:
ARM GAS  /tmp/ccfc96Pv.s 			page 109


 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3135              		.loc 1 782 0
 3136 00c8 1846     		mov	r0, r3
 3137 00ca 02B0     		add	sp, sp, #8
 3138              	.LCFI25:
 3139              		.cfi_def_cfa_offset 24
 3140              		@ sp needed
 3141 00cc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3142              		.cfi_endproc
 3143              	.LFE131:
 3145              		.section	.text.HAL_UART_Receive,"ax",%progbits
 3146              		.align	2
 3147              		.global	HAL_UART_Receive
 3148              		.thumb
 3149              		.thumb_func
 3151              	HAL_UART_Receive:
 3152              	.LFB132:
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 3153              		.loc 1 793 0
 3154              		.cfi_startproc
 3155              		@ args = 0, pretend = 0, frame = 0
 3156              		@ frame_needed = 0, uses_anonymous_args = 0
 3157              	.LVL264:
 3158 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3159              	.LCFI26:
 3160              		.cfi_def_cfa_offset 24
 3161              		.cfi_offset 4, -24
 3162              		.cfi_offset 5, -20
 3163              		.cfi_offset 6, -16
 3164              		.cfi_offset 7, -12
 3165              		.cfi_offset 8, -8
 3166              		.cfi_offset 14, -4
 3167 0004 82B0     		sub	sp, sp, #8
 3168              	.LCFI27:
 3169              		.cfi_def_cfa_offset 32
 3170 0006 1E46     		mov	r6, r3
 3171              	.LVL265:
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3172              		.loc 1 799 0
 3173 0008 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 3174              	.LVL266:
 3175 000c DBB2     		uxtb	r3, r3
 3176 000e 202B     		cmp	r3, #32
 3177 0010 71D1     		bne	.L248
 3178 0012 0446     		mov	r4, r0
 3179 0014 0D46     		mov	r5, r1
 3180 0016 9046     		mov	r8, r2
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3181              		.loc 1 801 0
 3182 0018 0029     		cmp	r1, #0
 3183 001a 6ED0     		beq	.L249
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3184              		.loc 1 801 0 is_stmt 0 discriminator 1
 3185 001c 002A     		cmp	r2, #0
 3186 001e 6ED0     		beq	.L250
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3187              		.loc 1 807 0 is_stmt 1
ARM GAS  /tmp/ccfc96Pv.s 			page 110


 3188 0020 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3189 0024 012B     		cmp	r3, #1
 3190 0026 6CD0     		beq	.L251
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3191              		.loc 1 807 0 is_stmt 0 discriminator 2
 3192 0028 0123     		movs	r3, #1
 3193 002a 80F86830 		strb	r3, [r0, #104]
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 3194              		.loc 1 809 0 is_stmt 1 discriminator 2
 3195 002e 0023     		movs	r3, #0
 3196 0030 C366     		str	r3, [r0, #108]
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3197              		.loc 1 810 0 discriminator 2
 3198 0032 2223     		movs	r3, #34
 3199 0034 80F86A30 		strb	r3, [r0, #106]
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3200              		.loc 1 813 0 discriminator 2
 3201 0038 FFF7FEFF 		bl	HAL_GetTick
 3202              	.LVL267:
 3203 003c 0746     		mov	r7, r0
 3204              	.LVL268:
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 3205              		.loc 1 815 0 discriminator 2
 3206 003e A4F85880 		strh	r8, [r4, #88]	@ movhi
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3207              		.loc 1 816 0 discriminator 2
 3208 0042 A4F85A80 		strh	r8, [r4, #90]	@ movhi
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3209              		.loc 1 819 0 discriminator 2
 3210 0046 A368     		ldr	r3, [r4, #8]
 3211 0048 B3F5805F 		cmp	r3, #4096
 3212 004c 0AD1     		bne	.L238
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3213              		.loc 1 819 0 is_stmt 0 discriminator 1
 3214 004e 2369     		ldr	r3, [r4, #16]
 3215 0050 23B9     		cbnz	r3, .L239
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3216              		.loc 1 819 0 discriminator 3
 3217 0052 40F2FF13 		movw	r3, #511
 3218 0056 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 3219 005a 1AE0     		b	.L240
 3220              	.L239:
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3221              		.loc 1 819 0 discriminator 4
 3222 005c FF23     		movs	r3, #255
 3223 005e A4F85C30 		strh	r3, [r4, #92]	@ movhi
 3224 0062 16E0     		b	.L240
 3225              	.L238:
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3226              		.loc 1 819 0 discriminator 2
 3227 0064 4BB9     		cbnz	r3, .L241
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3228              		.loc 1 819 0 discriminator 5
 3229 0066 2369     		ldr	r3, [r4, #16]
 3230 0068 1BB9     		cbnz	r3, .L242
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3231              		.loc 1 819 0 discriminator 7
ARM GAS  /tmp/ccfc96Pv.s 			page 111


 3232 006a FF23     		movs	r3, #255
 3233 006c A4F85C30 		strh	r3, [r4, #92]	@ movhi
 3234 0070 0FE0     		b	.L240
 3235              	.L242:
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3236              		.loc 1 819 0 discriminator 8
 3237 0072 7F23     		movs	r3, #127
 3238 0074 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 3239 0078 0BE0     		b	.L240
 3240              	.L241:
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3241              		.loc 1 819 0 discriminator 6
 3242 007a B3F1805F 		cmp	r3, #268435456
 3243 007e 08D1     		bne	.L240
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3244              		.loc 1 819 0 discriminator 9
 3245 0080 2369     		ldr	r3, [r4, #16]
 3246 0082 1BB9     		cbnz	r3, .L243
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3247              		.loc 1 819 0 discriminator 10
 3248 0084 7F23     		movs	r3, #127
 3249 0086 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 3250 008a 02E0     		b	.L240
 3251              	.L243:
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 3252              		.loc 1 819 0 discriminator 11
 3253 008c 3F23     		movs	r3, #63
 3254 008e A4F85C30 		strh	r3, [r4, #92]	@ movhi
 3255              	.L240:
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3256              		.loc 1 820 0 is_stmt 1
 3257 0092 B4F85C80 		ldrh	r8, [r4, #92]
 3258              	.LVL269:
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3259              		.loc 1 823 0
 3260 0096 22E0     		b	.L244
 3261              	.LVL270:
 3262              	.L247:
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 3263              		.loc 1 825 0
 3264 0098 B4F85A30 		ldrh	r3, [r4, #90]
 3265 009c 9BB2     		uxth	r3, r3
 3266 009e 013B     		subs	r3, r3, #1
 3267 00a0 9BB2     		uxth	r3, r3
 3268 00a2 A4F85A30 		strh	r3, [r4, #90]	@ movhi
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3269              		.loc 1 826 0
 3270 00a6 0096     		str	r6, [sp]
 3271 00a8 3B46     		mov	r3, r7
 3272 00aa 0022     		movs	r2, #0
 3273 00ac 2021     		movs	r1, #32
 3274 00ae 2046     		mov	r0, r4
 3275 00b0 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3276              	.LVL271:
 3277 00b4 38BB     		cbnz	r0, .L252
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3278              		.loc 1 830 0
ARM GAS  /tmp/ccfc96Pv.s 			page 112


 3279 00b6 A368     		ldr	r3, [r4, #8]
 3280 00b8 B3F5805F 		cmp	r3, #4096
 3281 00bc 08D1     		bne	.L245
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3282              		.loc 1 830 0 is_stmt 0 discriminator 1
 3283 00be 2369     		ldr	r3, [r4, #16]
 3284 00c0 33B9     		cbnz	r3, .L245
 3285              	.LVL272:
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pData +=2U;
 3286              		.loc 1 833 0 is_stmt 1
 3287 00c2 2368     		ldr	r3, [r4]
 3288 00c4 9B8C     		ldrh	r3, [r3, #36]
 3289 00c6 08EA0303 		and	r3, r8, r3
 3290 00ca 25F8023B 		strh	r3, [r5], #2	@ movhi
 3291              	.LVL273:
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3292              		.loc 1 834 0
 3293 00ce 06E0     		b	.L244
 3294              	.LVL274:
 3295              	.L245:
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3296              		.loc 1 838 0
 3297 00d0 2368     		ldr	r3, [r4]
 3298 00d2 9B8C     		ldrh	r3, [r3, #36]
 3299 00d4 5FFA88F2 		uxtb	r2, r8
 3300 00d8 1340     		ands	r3, r3, r2
 3301 00da 2B70     		strb	r3, [r5]
 3302 00dc 0135     		adds	r5, r5, #1
 3303              	.LVL275:
 3304              	.L244:
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3305              		.loc 1 823 0
 3306 00de B4F85A30 		ldrh	r3, [r4, #90]
 3307 00e2 9BB2     		uxth	r3, r3
 3308 00e4 002B     		cmp	r3, #0
 3309 00e6 D7D1     		bne	.L247
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3310              		.loc 1 843 0
 3311 00e8 2023     		movs	r3, #32
 3312 00ea 84F86A30 		strb	r3, [r4, #106]
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3313              		.loc 1 846 0
 3314 00ee 0020     		movs	r0, #0
 3315 00f0 84F86800 		strb	r0, [r4, #104]
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3316              		.loc 1 848 0
 3317 00f4 08E0     		b	.L237
 3318              	.LVL276:
 3319              	.L248:
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3320              		.loc 1 852 0
 3321 00f6 0220     		movs	r0, #2
 3322              	.LVL277:
 3323 00f8 06E0     		b	.L237
 3324              	.LVL278:
 3325              	.L249:
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
ARM GAS  /tmp/ccfc96Pv.s 			page 113


 3326              		.loc 1 803 0
 3327 00fa 0120     		movs	r0, #1
 3328              	.LVL279:
 3329 00fc 04E0     		b	.L237
 3330              	.LVL280:
 3331              	.L250:
 3332 00fe 0120     		movs	r0, #1
 3333              	.LVL281:
 3334 0100 02E0     		b	.L237
 3335              	.LVL282:
 3336              	.L251:
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3337              		.loc 1 807 0
 3338 0102 0220     		movs	r0, #2
 3339              	.LVL283:
 3340 0104 00E0     		b	.L237
 3341              	.LVL284:
 3342              	.L252:
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3343              		.loc 1 828 0
 3344 0106 0320     		movs	r0, #3
 3345              	.LVL285:
 3346              	.L237:
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3347              		.loc 1 854 0
 3348 0108 02B0     		add	sp, sp, #8
 3349              	.LCFI28:
 3350              		.cfi_def_cfa_offset 24
 3351              		@ sp needed
 3352 010a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3353              		.cfi_endproc
 3354              	.LFE132:
 3356 010e 00BF     		.section	.text.UART_CheckIdleState,"ax",%progbits
 3357              		.align	2
 3358              		.global	UART_CheckIdleState
 3359              		.thumb
 3360              		.thumb_func
 3362              	UART_CheckIdleState:
 3363              	.LFB165:
2282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart = 0U;
 3364              		.loc 1 2282 0
 3365              		.cfi_startproc
 3366              		@ args = 0, pretend = 0, frame = 0
 3367              		@ frame_needed = 0, uses_anonymous_args = 0
 3368              	.LVL286:
 3369 0000 30B5     		push	{r4, r5, lr}
 3370              	.LCFI29:
 3371              		.cfi_def_cfa_offset 12
 3372              		.cfi_offset 4, -12
 3373              		.cfi_offset 5, -8
 3374              		.cfi_offset 14, -4
 3375 0002 83B0     		sub	sp, sp, #12
 3376              	.LCFI30:
 3377              		.cfi_def_cfa_offset 24
 3378 0004 0446     		mov	r4, r0
 3379              	.LVL287:
2286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccfc96Pv.s 			page 114


 3380              		.loc 1 2286 0
 3381 0006 0023     		movs	r3, #0
 3382 0008 C366     		str	r3, [r0, #108]
2289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3383              		.loc 1 2289 0
 3384 000a FFF7FEFF 		bl	HAL_GetTick
 3385              	.LVL288:
 3386 000e 0546     		mov	r5, r0
 3387              	.LVL289:
2292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3388              		.loc 1 2292 0
 3389 0010 2368     		ldr	r3, [r4]
 3390 0012 1B68     		ldr	r3, [r3]
 3391 0014 13F0080F 		tst	r3, #8
 3392 0018 0AD0     		beq	.L255
2295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3393              		.loc 1 2295 0
 3394 001a 6FF07E43 		mvn	r3, #-33554432
 3395 001e 0093     		str	r3, [sp]
 3396 0020 0346     		mov	r3, r0
 3397 0022 0022     		movs	r2, #0
 3398 0024 4FF40011 		mov	r1, #2097152
 3399 0028 2046     		mov	r0, r4
 3400              	.LVL290:
 3401 002a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3402              	.LVL291:
 3403 002e C0B9     		cbnz	r0, .L258
 3404              	.L255:
2302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3405              		.loc 1 2302 0
 3406 0030 2368     		ldr	r3, [r4]
 3407 0032 1B68     		ldr	r3, [r3]
 3408 0034 13F0040F 		tst	r3, #4
 3409 0038 0AD0     		beq	.L257
2305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3410              		.loc 1 2305 0
 3411 003a 6FF07E43 		mvn	r3, #-33554432
 3412 003e 0093     		str	r3, [sp]
 3413 0040 2B46     		mov	r3, r5
 3414 0042 0022     		movs	r2, #0
 3415 0044 4FF48001 		mov	r1, #4194304
 3416 0048 2046     		mov	r0, r4
 3417 004a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3418              	.LVL292:
 3419 004e 50B9     		cbnz	r0, .L259
 3420              	.L257:
2313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3421              		.loc 1 2313 0
 3422 0050 2023     		movs	r3, #32
 3423 0052 84F86930 		strb	r3, [r4, #105]
2314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3424              		.loc 1 2314 0
 3425 0056 84F86A30 		strb	r3, [r4, #106]
2317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3426              		.loc 1 2317 0
 3427 005a 0020     		movs	r0, #0
 3428 005c 84F86800 		strb	r0, [r4, #104]
ARM GAS  /tmp/ccfc96Pv.s 			page 115


2319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3429              		.loc 1 2319 0
 3430 0060 02E0     		b	.L256
 3431              	.L258:
2298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3432              		.loc 1 2298 0
 3433 0062 0320     		movs	r0, #3
 3434 0064 00E0     		b	.L256
 3435              	.L259:
2308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3436              		.loc 1 2308 0
 3437 0066 0320     		movs	r0, #3
 3438              	.L256:
2320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3439              		.loc 1 2320 0
 3440 0068 03B0     		add	sp, sp, #12
 3441              	.LCFI31:
 3442              		.cfi_def_cfa_offset 12
 3443              		@ sp needed
 3444 006a 30BD     		pop	{r4, r5, pc}
 3445              		.cfi_endproc
 3446              	.LFE165:
 3448              		.section	.text.HAL_UART_Init,"ax",%progbits
 3449              		.align	2
 3450              		.global	HAL_UART_Init
 3451              		.thumb
 3452              		.thumb_func
 3454              	HAL_UART_Init:
 3455              	.LFB124:
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3456              		.loc 1 295 0
 3457              		.cfi_startproc
 3458              		@ args = 0, pretend = 0, frame = 0
 3459              		@ frame_needed = 0, uses_anonymous_args = 0
 3460              	.LVL293:
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3461              		.loc 1 297 0
 3462 0000 80B3     		cbz	r0, .L265
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3463              		.loc 1 295 0
 3464 0002 10B5     		push	{r4, lr}
 3465              	.LCFI32:
 3466              		.cfi_def_cfa_offset 8
 3467              		.cfi_offset 4, -8
 3468              		.cfi_offset 14, -4
 3469 0004 0446     		mov	r4, r0
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3470              		.loc 1 313 0
 3471 0006 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3472 000a 13F0FF0F 		tst	r3, #255
 3473 000e 04D1     		bne	.L263
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3474              		.loc 1 316 0
 3475 0010 0023     		movs	r3, #0
 3476 0012 80F86830 		strb	r3, [r0, #104]
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3477              		.loc 1 319 0
ARM GAS  /tmp/ccfc96Pv.s 			page 116


 3478 0016 FFF7FEFF 		bl	HAL_UART_MspInit
 3479              	.LVL294:
 3480              	.L263:
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3481              		.loc 1 322 0
 3482 001a 2423     		movs	r3, #36
 3483 001c 84F86930 		strb	r3, [r4, #105]
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3484              		.loc 1 325 0
 3485 0020 2268     		ldr	r2, [r4]
 3486 0022 1368     		ldr	r3, [r2]
 3487 0024 23F00103 		bic	r3, r3, #1
 3488 0028 1360     		str	r3, [r2]
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3489              		.loc 1 328 0
 3490 002a 2046     		mov	r0, r4
 3491 002c FFF7FEFF 		bl	UART_SetConfig
 3492              	.LVL295:
 3493 0030 0128     		cmp	r0, #1
 3494 0032 19D0     		beq	.L262
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3495              		.loc 1 333 0
 3496 0034 636A     		ldr	r3, [r4, #36]
 3497 0036 13B1     		cbz	r3, .L264
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3498              		.loc 1 335 0
 3499 0038 2046     		mov	r0, r4
 3500 003a FFF7FEFF 		bl	UART_AdvFeatureConfig
 3501              	.LVL296:
 3502              	.L264:
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 3503              		.loc 1 341 0
 3504 003e 2268     		ldr	r2, [r4]
 3505 0040 5368     		ldr	r3, [r2, #4]
 3506 0042 23F49043 		bic	r3, r3, #18432
 3507 0046 5360     		str	r3, [r2, #4]
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3508              		.loc 1 342 0
 3509 0048 2268     		ldr	r2, [r4]
 3510 004a 9368     		ldr	r3, [r2, #8]
 3511 004c 23F02A03 		bic	r3, r3, #42
 3512 0050 9360     		str	r3, [r2, #8]
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3513              		.loc 1 345 0
 3514 0052 2268     		ldr	r2, [r4]
 3515 0054 1368     		ldr	r3, [r2]
 3516 0056 43F00103 		orr	r3, r3, #1
 3517 005a 1360     		str	r3, [r2]
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3518              		.loc 1 348 0
 3519 005c 2046     		mov	r0, r4
 3520 005e FFF7FEFF 		bl	UART_CheckIdleState
 3521              	.LVL297:
 3522 0062 10BD     		pop	{r4, pc}
 3523              	.LVL298:
 3524              	.L265:
 3525              	.LCFI33:
ARM GAS  /tmp/ccfc96Pv.s 			page 117


 3526              		.cfi_def_cfa_offset 0
 3527              		.cfi_restore 4
 3528              		.cfi_restore 14
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3529              		.loc 1 299 0
 3530 0064 0120     		movs	r0, #1
 3531              	.LVL299:
 3532 0066 7047     		bx	lr
 3533              	.LVL300:
 3534              	.L262:
 3535              	.LCFI34:
 3536              		.cfi_def_cfa_offset 8
 3537              		.cfi_offset 4, -8
 3538              		.cfi_offset 14, -4
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3539              		.loc 1 349 0
 3540 0068 10BD     		pop	{r4, pc}
 3541              		.cfi_endproc
 3542              	.LFE124:
 3544 006a 00BF     		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 3545              		.align	2
 3546              		.global	HAL_HalfDuplex_Init
 3547              		.thumb
 3548              		.thumb_func
 3550              	HAL_HalfDuplex_Init:
 3551              	.LFB125:
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3552              		.loc 1 358 0
 3553              		.cfi_startproc
 3554              		@ args = 0, pretend = 0, frame = 0
 3555              		@ frame_needed = 0, uses_anonymous_args = 0
 3556              	.LVL301:
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3557              		.loc 1 360 0
 3558 0000 0028     		cmp	r0, #0
 3559 0002 35D0     		beq	.L272
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3560              		.loc 1 358 0
 3561 0004 10B5     		push	{r4, lr}
 3562              	.LCFI35:
 3563              		.cfi_def_cfa_offset 8
 3564              		.cfi_offset 4, -8
 3565              		.cfi_offset 14, -4
 3566 0006 0446     		mov	r4, r0
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3567              		.loc 1 368 0
 3568 0008 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3569 000c 13F0FF0F 		tst	r3, #255
 3570 0010 04D1     		bne	.L270
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3571              		.loc 1 371 0
 3572 0012 0023     		movs	r3, #0
 3573 0014 80F86830 		strb	r3, [r0, #104]
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3574              		.loc 1 374 0
 3575 0018 FFF7FEFF 		bl	HAL_UART_MspInit
 3576              	.LVL302:
ARM GAS  /tmp/ccfc96Pv.s 			page 118


 3577              	.L270:
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3578              		.loc 1 377 0
 3579 001c 2423     		movs	r3, #36
 3580 001e 84F86930 		strb	r3, [r4, #105]
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3581              		.loc 1 380 0
 3582 0022 2268     		ldr	r2, [r4]
 3583 0024 1368     		ldr	r3, [r2]
 3584 0026 23F00103 		bic	r3, r3, #1
 3585 002a 1360     		str	r3, [r2]
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3586              		.loc 1 383 0
 3587 002c 2046     		mov	r0, r4
 3588 002e FFF7FEFF 		bl	UART_SetConfig
 3589              	.LVL303:
 3590 0032 0128     		cmp	r0, #1
 3591 0034 1ED0     		beq	.L269
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3592              		.loc 1 388 0
 3593 0036 636A     		ldr	r3, [r4, #36]
 3594 0038 13B1     		cbz	r3, .L271
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3595              		.loc 1 390 0
 3596 003a 2046     		mov	r0, r4
 3597 003c FFF7FEFF 		bl	UART_AdvFeatureConfig
 3598              	.LVL304:
 3599              	.L271:
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 3600              		.loc 1 396 0
 3601 0040 2268     		ldr	r2, [r4]
 3602 0042 5368     		ldr	r3, [r2, #4]
 3603 0044 23F49043 		bic	r3, r3, #18432
 3604 0048 5360     		str	r3, [r2, #4]
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3605              		.loc 1 397 0
 3606 004a 2268     		ldr	r2, [r4]
 3607 004c 9368     		ldr	r3, [r2, #8]
 3608 004e 23F02203 		bic	r3, r3, #34
 3609 0052 9360     		str	r3, [r2, #8]
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3610              		.loc 1 400 0
 3611 0054 2268     		ldr	r2, [r4]
 3612 0056 9368     		ldr	r3, [r2, #8]
 3613 0058 43F00803 		orr	r3, r3, #8
 3614 005c 9360     		str	r3, [r2, #8]
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3615              		.loc 1 403 0
 3616 005e 2268     		ldr	r2, [r4]
 3617 0060 1368     		ldr	r3, [r2]
 3618 0062 43F00103 		orr	r3, r3, #1
 3619 0066 1360     		str	r3, [r2]
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3620              		.loc 1 406 0
 3621 0068 2046     		mov	r0, r4
 3622 006a FFF7FEFF 		bl	UART_CheckIdleState
 3623              	.LVL305:
ARM GAS  /tmp/ccfc96Pv.s 			page 119


 3624 006e 10BD     		pop	{r4, pc}
 3625              	.LVL306:
 3626              	.L272:
 3627              	.LCFI36:
 3628              		.cfi_def_cfa_offset 0
 3629              		.cfi_restore 4
 3630              		.cfi_restore 14
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3631              		.loc 1 362 0
 3632 0070 0120     		movs	r0, #1
 3633              	.LVL307:
 3634 0072 7047     		bx	lr
 3635              	.LVL308:
 3636              	.L269:
 3637              	.LCFI37:
 3638              		.cfi_def_cfa_offset 8
 3639              		.cfi_offset 4, -8
 3640              		.cfi_offset 14, -4
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3641              		.loc 1 407 0
 3642 0074 10BD     		pop	{r4, pc}
 3643              		.cfi_endproc
 3644              	.LFE125:
 3646 0076 00BF     		.section	.text.HAL_LIN_Init,"ax",%progbits
 3647              		.align	2
 3648              		.global	HAL_LIN_Init
 3649              		.thumb
 3650              		.thumb_func
 3652              	HAL_LIN_Init:
 3653              	.LFB126:
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3654              		.loc 1 421 0
 3655              		.cfi_startproc
 3656              		@ args = 0, pretend = 0, frame = 0
 3657              		@ frame_needed = 0, uses_anonymous_args = 0
 3658              	.LVL309:
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3659              		.loc 1 423 0
 3660 0000 0028     		cmp	r0, #0
 3661 0002 43D0     		beq	.L279
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3662              		.loc 1 421 0
 3663 0004 38B5     		push	{r3, r4, r5, lr}
 3664              	.LCFI38:
 3665              		.cfi_def_cfa_offset 16
 3666              		.cfi_offset 3, -16
 3667              		.cfi_offset 4, -12
 3668              		.cfi_offset 5, -8
 3669              		.cfi_offset 14, -4
 3670 0006 0446     		mov	r4, r0
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3671              		.loc 1 434 0
 3672 0008 C369     		ldr	r3, [r0, #28]
 3673 000a B3F5004F 		cmp	r3, #32768
 3674 000e 3FD0     		beq	.L280
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3675              		.loc 1 439 0
ARM GAS  /tmp/ccfc96Pv.s 			page 120


 3676 0010 8368     		ldr	r3, [r0, #8]
 3677 0012 002B     		cmp	r3, #0
 3678 0014 3ED1     		bne	.L281
 3679 0016 0D46     		mov	r5, r1
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3680              		.loc 1 444 0
 3681 0018 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3682 001c 13F0FF0F 		tst	r3, #255
 3683 0020 04D1     		bne	.L277
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3684              		.loc 1 447 0
 3685 0022 0023     		movs	r3, #0
 3686 0024 80F86830 		strb	r3, [r0, #104]
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3687              		.loc 1 450 0
 3688 0028 FFF7FEFF 		bl	HAL_UART_MspInit
 3689              	.LVL310:
 3690              	.L277:
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3691              		.loc 1 453 0
 3692 002c 2423     		movs	r3, #36
 3693 002e 84F86930 		strb	r3, [r4, #105]
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3694              		.loc 1 456 0
 3695 0032 2268     		ldr	r2, [r4]
 3696 0034 1368     		ldr	r3, [r2]
 3697 0036 23F00103 		bic	r3, r3, #1
 3698 003a 1360     		str	r3, [r2]
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3699              		.loc 1 459 0
 3700 003c 2046     		mov	r0, r4
 3701 003e FFF7FEFF 		bl	UART_SetConfig
 3702              	.LVL311:
 3703 0042 0128     		cmp	r0, #1
 3704 0044 27D0     		beq	.L276
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3705              		.loc 1 464 0
 3706 0046 636A     		ldr	r3, [r4, #36]
 3707 0048 13B1     		cbz	r3, .L278
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3708              		.loc 1 466 0
 3709 004a 2046     		mov	r0, r4
 3710 004c FFF7FEFF 		bl	UART_AdvFeatureConfig
 3711              	.LVL312:
 3712              	.L278:
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 3713              		.loc 1 472 0
 3714 0050 2268     		ldr	r2, [r4]
 3715 0052 5368     		ldr	r3, [r2, #4]
 3716 0054 23F40063 		bic	r3, r3, #2048
 3717 0058 5360     		str	r3, [r2, #4]
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3718              		.loc 1 473 0
 3719 005a 2268     		ldr	r2, [r4]
 3720 005c 9368     		ldr	r3, [r2, #8]
 3721 005e 23F02A03 		bic	r3, r3, #42
 3722 0062 9360     		str	r3, [r2, #8]
ARM GAS  /tmp/ccfc96Pv.s 			page 121


 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3723              		.loc 1 476 0
 3724 0064 2268     		ldr	r2, [r4]
 3725 0066 5368     		ldr	r3, [r2, #4]
 3726 0068 43F48043 		orr	r3, r3, #16384
 3727 006c 5360     		str	r3, [r2, #4]
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3728              		.loc 1 479 0
 3729 006e 2368     		ldr	r3, [r4]
 3730 0070 5968     		ldr	r1, [r3, #4]
 3731 0072 21F02001 		bic	r1, r1, #32
 3732 0076 2943     		orrs	r1, r1, r5
 3733 0078 5960     		str	r1, [r3, #4]
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3734              		.loc 1 482 0
 3735 007a 2268     		ldr	r2, [r4]
 3736 007c 1368     		ldr	r3, [r2]
 3737 007e 43F00103 		orr	r3, r3, #1
 3738 0082 1360     		str	r3, [r2]
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3739              		.loc 1 485 0
 3740 0084 2046     		mov	r0, r4
 3741 0086 FFF7FEFF 		bl	UART_CheckIdleState
 3742              	.LVL313:
 3743 008a 38BD     		pop	{r3, r4, r5, pc}
 3744              	.LVL314:
 3745              	.L279:
 3746              	.LCFI39:
 3747              		.cfi_def_cfa_offset 0
 3748              		.cfi_restore 3
 3749              		.cfi_restore 4
 3750              		.cfi_restore 5
 3751              		.cfi_restore 14
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3752              		.loc 1 425 0
 3753 008c 0120     		movs	r0, #1
 3754              	.LVL315:
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3755              		.loc 1 486 0
 3756 008e 7047     		bx	lr
 3757              	.LVL316:
 3758              	.L280:
 3759              	.LCFI40:
 3760              		.cfi_def_cfa_offset 16
 3761              		.cfi_offset 3, -16
 3762              		.cfi_offset 4, -12
 3763              		.cfi_offset 5, -8
 3764              		.cfi_offset 14, -4
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3765              		.loc 1 436 0
 3766 0090 0120     		movs	r0, #1
 3767              	.LVL317:
 3768 0092 38BD     		pop	{r3, r4, r5, pc}
 3769              	.LVL318:
 3770              	.L281:
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3771              		.loc 1 441 0
ARM GAS  /tmp/ccfc96Pv.s 			page 122


 3772 0094 0120     		movs	r0, #1
 3773              	.LVL319:
 3774              	.L276:
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3775              		.loc 1 486 0
 3776 0096 38BD     		pop	{r3, r4, r5, pc}
 3777              		.cfi_endproc
 3778              	.LFE126:
 3780              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 3781              		.align	2
 3782              		.global	HAL_MultiProcessor_Init
 3783              		.thumb
 3784              		.thumb_func
 3786              	HAL_MultiProcessor_Init:
 3787              	.LFB127:
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3788              		.loc 1 508 0
 3789              		.cfi_startproc
 3790              		@ args = 0, pretend = 0, frame = 0
 3791              		@ frame_needed = 0, uses_anonymous_args = 0
 3792              	.LVL320:
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3793              		.loc 1 510 0
 3794 0000 0028     		cmp	r0, #0
 3795 0002 43D0     		beq	.L288
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 3796              		.loc 1 508 0
 3797 0004 70B5     		push	{r4, r5, r6, lr}
 3798              	.LCFI41:
 3799              		.cfi_def_cfa_offset 16
 3800              		.cfi_offset 4, -16
 3801              		.cfi_offset 5, -12
 3802              		.cfi_offset 6, -8
 3803              		.cfi_offset 14, -4
 3804 0006 0446     		mov	r4, r0
 3805 0008 1546     		mov	r5, r2
 3806 000a 0E46     		mov	r6, r1
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3807              		.loc 1 518 0
 3808 000c 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3809 0010 13F0FF0F 		tst	r3, #255
 3810 0014 04D1     		bne	.L285
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3811              		.loc 1 521 0
 3812 0016 0023     		movs	r3, #0
 3813 0018 80F86830 		strb	r3, [r0, #104]
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3814              		.loc 1 524 0
 3815 001c FFF7FEFF 		bl	HAL_UART_MspInit
 3816              	.LVL321:
 3817              	.L285:
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3818              		.loc 1 527 0
 3819 0020 2423     		movs	r3, #36
 3820 0022 84F86930 		strb	r3, [r4, #105]
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3821              		.loc 1 530 0
ARM GAS  /tmp/ccfc96Pv.s 			page 123


 3822 0026 2268     		ldr	r2, [r4]
 3823 0028 1368     		ldr	r3, [r2]
 3824 002a 23F00103 		bic	r3, r3, #1
 3825 002e 1360     		str	r3, [r2]
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3826              		.loc 1 533 0
 3827 0030 2046     		mov	r0, r4
 3828 0032 FFF7FEFF 		bl	UART_SetConfig
 3829              	.LVL322:
 3830 0036 0128     		cmp	r0, #1
 3831 0038 2AD0     		beq	.L284
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3832              		.loc 1 538 0
 3833 003a 636A     		ldr	r3, [r4, #36]
 3834 003c 13B1     		cbz	r3, .L286
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3835              		.loc 1 540 0
 3836 003e 2046     		mov	r0, r4
 3837 0040 FFF7FEFF 		bl	UART_AdvFeatureConfig
 3838              	.LVL323:
 3839              	.L286:
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 3840              		.loc 1 546 0
 3841 0044 2268     		ldr	r2, [r4]
 3842 0046 5368     		ldr	r3, [r2, #4]
 3843 0048 23F49043 		bic	r3, r3, #18432
 3844 004c 5360     		str	r3, [r2, #4]
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3845              		.loc 1 547 0
 3846 004e 2268     		ldr	r2, [r4]
 3847 0050 9368     		ldr	r3, [r2, #8]
 3848 0052 23F02A03 		bic	r3, r3, #42
 3849 0056 9360     		str	r3, [r2, #8]
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3850              		.loc 1 549 0
 3851 0058 B5F5006F 		cmp	r5, #2048
 3852 005c 06D1     		bne	.L287
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3853              		.loc 1 552 0
 3854 005e 2368     		ldr	r3, [r4]
 3855 0060 5968     		ldr	r1, [r3, #4]
 3856 0062 21F07F41 		bic	r1, r1, #-16777216
 3857 0066 41EA0666 		orr	r6, r1, r6, lsl #24
 3858 006a 5E60     		str	r6, [r3, #4]
 3859              	.L287:
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3860              		.loc 1 556 0
 3861 006c 2168     		ldr	r1, [r4]
 3862 006e 0B68     		ldr	r3, [r1]
 3863 0070 23F40063 		bic	r3, r3, #2048
 3864 0074 45EA0302 		orr	r2, r5, r3
 3865 0078 0A60     		str	r2, [r1]
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3866              		.loc 1 559 0
 3867 007a 2268     		ldr	r2, [r4]
 3868 007c 1368     		ldr	r3, [r2]
 3869 007e 43F00103 		orr	r3, r3, #1
ARM GAS  /tmp/ccfc96Pv.s 			page 124


 3870 0082 1360     		str	r3, [r2]
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3871              		.loc 1 562 0
 3872 0084 2046     		mov	r0, r4
 3873 0086 FFF7FEFF 		bl	UART_CheckIdleState
 3874              	.LVL324:
 3875 008a 70BD     		pop	{r4, r5, r6, pc}
 3876              	.LVL325:
 3877              	.L288:
 3878              	.LCFI42:
 3879              		.cfi_def_cfa_offset 0
 3880              		.cfi_restore 4
 3881              		.cfi_restore 5
 3882              		.cfi_restore 6
 3883              		.cfi_restore 14
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3884              		.loc 1 512 0
 3885 008c 0120     		movs	r0, #1
 3886              	.LVL326:
 3887 008e 7047     		bx	lr
 3888              	.LVL327:
 3889              	.L284:
 3890              	.LCFI43:
 3891              		.cfi_def_cfa_offset 16
 3892              		.cfi_offset 4, -16
 3893              		.cfi_offset 5, -12
 3894              		.cfi_offset 6, -8
 3895              		.cfi_offset 14, -4
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3896              		.loc 1 563 0
 3897 0090 70BD     		pop	{r4, r5, r6, pc}
 3898              		.cfi_endproc
 3899              	.LFE127:
 3901 0092 00BF     		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 3902              		.align	2
 3903              		.global	HAL_MultiProcessor_EnableMuteMode
 3904              		.thumb
 3905              		.thumb_func
 3907              	HAL_MultiProcessor_EnableMuteMode:
 3908              	.LFB155:
1913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 3909              		.loc 1 1913 0
 3910              		.cfi_startproc
 3911              		@ args = 0, pretend = 0, frame = 0
 3912              		@ frame_needed = 0, uses_anonymous_args = 0
 3913              	.LVL328:
 3914 0000 08B5     		push	{r3, lr}
 3915              	.LCFI44:
 3916              		.cfi_def_cfa_offset 8
 3917              		.cfi_offset 3, -8
 3918              		.cfi_offset 14, -4
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3919              		.loc 1 1915 0
 3920 0002 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3921 0006 012B     		cmp	r3, #1
 3922 0008 10D0     		beq	.L293
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccfc96Pv.s 			page 125


 3923              		.loc 1 1915 0 is_stmt 0 discriminator 2
 3924 000a 0123     		movs	r3, #1
 3925 000c 80F86830 		strb	r3, [r0, #104]
1917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3926              		.loc 1 1917 0 is_stmt 1 discriminator 2
 3927 0010 2423     		movs	r3, #36
 3928 0012 80F86930 		strb	r3, [r0, #105]
1920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3929              		.loc 1 1920 0 discriminator 2
 3930 0016 0268     		ldr	r2, [r0]
 3931 0018 1368     		ldr	r3, [r2]
 3932 001a 43F40053 		orr	r3, r3, #8192
 3933 001e 1360     		str	r3, [r2]
1922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3934              		.loc 1 1922 0 discriminator 2
 3935 0020 2023     		movs	r3, #32
 3936 0022 80F86930 		strb	r3, [r0, #105]
1924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3937              		.loc 1 1924 0 discriminator 2
 3938 0026 FFF7FEFF 		bl	UART_CheckIdleState
 3939              	.LVL329:
 3940 002a 08BD     		pop	{r3, pc}
 3941              	.LVL330:
 3942              	.L293:
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3943              		.loc 1 1915 0
 3944 002c 0220     		movs	r0, #2
 3945              	.LVL331:
1925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3946              		.loc 1 1925 0
 3947 002e 08BD     		pop	{r3, pc}
 3948              		.cfi_endproc
 3949              	.LFE155:
 3951              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 3952              		.align	2
 3953              		.global	HAL_MultiProcessor_DisableMuteMode
 3954              		.thumb
 3955              		.thumb_func
 3957              	HAL_MultiProcessor_DisableMuteMode:
 3958              	.LFB156:
1934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Process Locked */
 3959              		.loc 1 1934 0
 3960              		.cfi_startproc
 3961              		@ args = 0, pretend = 0, frame = 0
 3962              		@ frame_needed = 0, uses_anonymous_args = 0
 3963              	.LVL332:
 3964 0000 08B5     		push	{r3, lr}
 3965              	.LCFI45:
 3966              		.cfi_def_cfa_offset 8
 3967              		.cfi_offset 3, -8
 3968              		.cfi_offset 14, -4
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3969              		.loc 1 1936 0
 3970 0002 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3971 0006 012B     		cmp	r3, #1
 3972 0008 10D0     		beq	.L297
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/ccfc96Pv.s 			page 126


 3973              		.loc 1 1936 0 is_stmt 0 discriminator 2
 3974 000a 0123     		movs	r3, #1
 3975 000c 80F86830 		strb	r3, [r0, #104]
1938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3976              		.loc 1 1938 0 is_stmt 1 discriminator 2
 3977 0010 2423     		movs	r3, #36
 3978 0012 80F86930 		strb	r3, [r0, #105]
1941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3979              		.loc 1 1941 0 discriminator 2
 3980 0016 0268     		ldr	r2, [r0]
 3981 0018 1368     		ldr	r3, [r2]
 3982 001a 23F40053 		bic	r3, r3, #8192
 3983 001e 1360     		str	r3, [r2]
1943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3984              		.loc 1 1943 0 discriminator 2
 3985 0020 2023     		movs	r3, #32
 3986 0022 80F86930 		strb	r3, [r0, #105]
1945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3987              		.loc 1 1945 0 discriminator 2
 3988 0026 FFF7FEFF 		bl	UART_CheckIdleState
 3989              	.LVL333:
 3990 002a 08BD     		pop	{r3, pc}
 3991              	.LVL334:
 3992              	.L297:
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3993              		.loc 1 1936 0
 3994 002c 0220     		movs	r0, #2
 3995              	.LVL335:
1946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3996              		.loc 1 1946 0
 3997 002e 08BD     		pop	{r3, pc}
 3998              		.cfi_endproc
 3999              	.LFE156:
 4001              		.section	.text.UART_Transmit_IT,"ax",%progbits
 4002              		.align	2
 4003              		.global	UART_Transmit_IT
 4004              		.thumb
 4005              		.thumb_func
 4007              	UART_Transmit_IT:
 4008              	.LFB179:
2642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Send an amount of data in interrupt mode.
2646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
2648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4009              		.loc 1 2652 0
 4010              		.cfi_startproc
 4011              		@ args = 0, pretend = 0, frame = 0
 4012              		@ frame_needed = 0, uses_anonymous_args = 0
 4013              		@ link register save eliminated.
 4014              	.LVL336:
ARM GAS  /tmp/ccfc96Pv.s 			page 127


2653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
2654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 4015              		.loc 1 2656 0
 4016 0000 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 4017 0004 DBB2     		uxtb	r3, r3
 4018 0006 212B     		cmp	r3, #33
 4019 0008 2ED1     		bne	.L304
2657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(huart->TxXferCount == 0U)
 4020              		.loc 1 2658 0
 4021 000a B0F85230 		ldrh	r3, [r0, #82]
 4022 000e 9BB2     		uxth	r3, r3
 4023 0010 5BB9     		cbnz	r3, .L301
2659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
2661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 4024              		.loc 1 2661 0
 4025 0012 0268     		ldr	r2, [r0]
 4026 0014 1368     		ldr	r3, [r2]
 4027 0016 23F08003 		bic	r3, r3, #128
 4028 001a 1360     		str	r3, [r2]
2662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
2664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 4029              		.loc 1 2664 0
 4030 001c 0268     		ldr	r2, [r0]
 4031 001e 1368     		ldr	r3, [r2]
 4032 0020 43F04003 		orr	r3, r3, #64
 4033 0024 1360     		str	r3, [r2]
2665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_OK;
 4034              		.loc 1 2666 0
 4035 0026 0020     		movs	r0, #0
 4036              	.LVL337:
 4037 0028 7047     		bx	lr
 4038              	.LVL338:
 4039              	.L301:
2667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
2669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 4040              		.loc 1 2670 0
 4041 002a 8368     		ldr	r3, [r0, #8]
 4042 002c B3F5805F 		cmp	r3, #4096
 4043 0030 0BD1     		bne	.L302
 4044              		.loc 1 2670 0 is_stmt 0 discriminator 1
 4045 0032 0369     		ldr	r3, [r0, #16]
 4046 0034 4BB9     		cbnz	r3, .L302
2671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         tmp = (uint16_t*) huart->pTxBuffPtr;
 4047              		.loc 1 2672 0 is_stmt 1
 4048 0036 C36C     		ldr	r3, [r0, #76]
 4049              	.LVL339:
2673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 4050              		.loc 1 2673 0
ARM GAS  /tmp/ccfc96Pv.s 			page 128


 4051 0038 0268     		ldr	r2, [r0]
 4052 003a 1B88     		ldrh	r3, [r3]
 4053              	.LVL340:
 4054 003c C3F30803 		ubfx	r3, r3, #0, #9
 4055 0040 1385     		strh	r3, [r2, #40]	@ movhi
 4056              	.LVL341:
2674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 4057              		.loc 1 2674 0
 4058 0042 C36C     		ldr	r3, [r0, #76]
 4059 0044 0233     		adds	r3, r3, #2
 4060 0046 C364     		str	r3, [r0, #76]
 4061 0048 05E0     		b	.L303
 4062              	.L302:
2675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
2677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFFU);
 4063              		.loc 1 2678 0
 4064 004a 0268     		ldr	r2, [r0]
 4065 004c C36C     		ldr	r3, [r0, #76]
 4066 004e 591C     		adds	r1, r3, #1
 4067 0050 C164     		str	r1, [r0, #76]
 4068 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4069 0054 1385     		strh	r3, [r2, #40]	@ movhi
 4070              	.L303:
2679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount--;
 4071              		.loc 1 2680 0
 4072 0056 B0F85230 		ldrh	r3, [r0, #82]
 4073 005a 9BB2     		uxth	r3, r3
 4074 005c 013B     		subs	r3, r3, #1
 4075 005e 9BB2     		uxth	r3, r3
 4076 0060 A0F85230 		strh	r3, [r0, #82]	@ movhi
2681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_OK;
 4077              		.loc 1 2682 0
 4078 0064 0020     		movs	r0, #0
 4079              	.LVL342:
 4080 0066 7047     		bx	lr
 4081              	.LVL343:
 4082              	.L304:
2683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 4083              		.loc 1 2687 0
 4084 0068 0220     		movs	r0, #2
 4085              	.LVL344:
2688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4086              		.loc 1 2689 0
 4087 006a 7047     		bx	lr
 4088              		.cfi_endproc
 4089              	.LFE179:
 4091              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 4092              		.align	2
ARM GAS  /tmp/ccfc96Pv.s 			page 129


 4093              		.global	UART_EndTransmit_IT
 4094              		.thumb
 4095              		.thumb_func
 4097              	UART_EndTransmit_IT:
 4098              	.LFB180:
2690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
2693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
2694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *               the configuration information for the specified UART module.
2695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4099              		.loc 1 2698 0
 4100              		.cfi_startproc
 4101              		@ args = 0, pretend = 0, frame = 0
 4102              		@ frame_needed = 0, uses_anonymous_args = 0
 4103              	.LVL345:
 4104 0000 08B5     		push	{r3, lr}
 4105              	.LCFI46:
 4106              		.cfi_def_cfa_offset 8
 4107              		.cfi_offset 3, -8
 4108              		.cfi_offset 14, -4
2699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
2700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 4109              		.loc 1 2700 0
 4110 0002 0168     		ldr	r1, [r0]
 4111 0004 0B68     		ldr	r3, [r1]
 4112 0006 23F04003 		bic	r3, r3, #64
 4113 000a 0B60     		str	r3, [r1]
2701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4114              		.loc 1 2703 0
 4115 000c 2023     		movs	r3, #32
 4116 000e 80F86930 		strb	r3, [r0, #105]
2704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 4117              		.loc 1 2705 0
 4118 0012 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 4119              	.LVL346:
2706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4120              		.loc 1 2708 0
 4121 0016 0020     		movs	r0, #0
 4122 0018 08BD     		pop	{r3, pc}
 4123              		.cfi_endproc
 4124              	.LFE180:
 4126 001a 00BF     		.section	.text.UART_Receive_IT,"ax",%progbits
 4127              		.align	2
 4128              		.global	UART_Receive_IT
 4129              		.thumb
 4130              		.thumb_func
 4132              	UART_Receive_IT:
 4133              	.LFB181:
ARM GAS  /tmp/ccfc96Pv.s 			page 130


2709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Receive an amount of data in interrupt mode.
2712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
2714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4134              		.loc 1 2718 0
 4135              		.cfi_startproc
 4136              		@ args = 0, pretend = 0, frame = 0
 4137              		@ frame_needed = 0, uses_anonymous_args = 0
 4138              	.LVL347:
2719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
2720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 4139              		.loc 1 2720 0
 4140 0000 B0F85C20 		ldrh	r2, [r0, #92]
 4141              	.LVL348:
2721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t  uhdata;
2722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 4142              		.loc 1 2724 0
 4143 0004 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 4144 0008 DBB2     		uxtb	r3, r3
 4145 000a 222B     		cmp	r3, #34
 4146 000c 2FD1     		bne	.L308
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t* tmp;
 4147              		.loc 1 2718 0
 4148 000e 10B5     		push	{r4, lr}
 4149              	.LCFI47:
 4150              		.cfi_def_cfa_offset 8
 4151              		.cfi_offset 4, -8
 4152              		.cfi_offset 14, -4
2725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 4153              		.loc 1 2726 0
 4154 0010 0368     		ldr	r3, [r0]
 4155 0012 9B8C     		ldrh	r3, [r3, #36]
 4156 0014 9BB2     		uxth	r3, r3
 4157              	.LVL349:
2727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 4158              		.loc 1 2727 0
 4159 0016 8168     		ldr	r1, [r0, #8]
 4160 0018 B1F5805F 		cmp	r1, #4096
 4161 001c 08D1     		bne	.L309
 4162              		.loc 1 2727 0 is_stmt 0 discriminator 1
 4163 001e 0169     		ldr	r1, [r0, #16]
 4164 0020 31B9     		cbnz	r1, .L309
2728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr ;
 4165              		.loc 1 2729 0 is_stmt 1
 4166 0022 416D     		ldr	r1, [r0, #84]
 4167              	.LVL350:
2730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
ARM GAS  /tmp/ccfc96Pv.s 			page 131


 4168              		.loc 1 2730 0
 4169 0024 1A40     		ands	r2, r2, r3
 4170              	.LVL351:
 4171 0026 0A80     		strh	r2, [r1]	@ movhi
 4172              	.LVL352:
2731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->pRxBuffPtr +=2U;
 4173              		.loc 1 2731 0
 4174 0028 436D     		ldr	r3, [r0, #84]
 4175              	.LVL353:
 4176 002a 0233     		adds	r3, r3, #2
 4177 002c 4365     		str	r3, [r0, #84]
 4178 002e 05E0     		b	.L310
 4179              	.LVL354:
 4180              	.L309:
2732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
2734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       *huart->pRxBuffPtr++ = (uint8_t)(uhdata & (uint8_t)uhMask);
 4181              		.loc 1 2735 0
 4182 0030 416D     		ldr	r1, [r0, #84]
 4183 0032 4C1C     		adds	r4, r1, #1
 4184 0034 4465     		str	r4, [r0, #84]
 4185 0036 D2B2     		uxtb	r2, r2
 4186              	.LVL355:
 4187 0038 1A40     		ands	r2, r2, r3
 4188 003a 0A70     		strb	r2, [r1]
 4189              	.LVL356:
 4190              	.L310:
2736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if(--huart->RxXferCount == 0U)
 4191              		.loc 1 2738 0
 4192 003c B0F85A30 		ldrh	r3, [r0, #90]
 4193 0040 9BB2     		uxth	r3, r3
 4194 0042 013B     		subs	r3, r3, #1
 4195 0044 9BB2     		uxth	r3, r3
 4196 0046 A0F85A30 		strh	r3, [r0, #90]	@ movhi
 4197 004a BBB9     		cbnz	r3, .L312
2739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
2741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 4198              		.loc 1 2741 0
 4199 004c 0268     		ldr	r2, [r0]
 4200 004e 1368     		ldr	r3, [r2]
 4201 0050 23F49073 		bic	r3, r3, #288
 4202 0054 1360     		str	r3, [r2]
2742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4203              		.loc 1 2744 0
 4204 0056 0268     		ldr	r2, [r0]
 4205 0058 9368     		ldr	r3, [r2, #8]
 4206 005a 23F00103 		bic	r3, r3, #1
 4207 005e 9360     		str	r3, [r2, #8]
2745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
2747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
ARM GAS  /tmp/ccfc96Pv.s 			page 132


 4208              		.loc 1 2747 0
 4209 0060 2023     		movs	r3, #32
 4210 0062 80F86A30 		strb	r3, [r0, #106]
2748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 4211              		.loc 1 2749 0
 4212 0066 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 4213              	.LVL357:
2750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_OK;
 4214              		.loc 1 2751 0
 4215 006a 0020     		movs	r0, #0
 4216 006c 10BD     		pop	{r4, pc}
 4217              	.LVL358:
 4218              	.L308:
 4219              	.LCFI48:
 4220              		.cfi_def_cfa_offset 0
 4221              		.cfi_restore 4
 4222              		.cfi_restore 14
2752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
2755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
2759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 4223              		.loc 1 2759 0
 4224 006e 0268     		ldr	r2, [r0]
 4225              	.LVL359:
 4226 0070 9369     		ldr	r3, [r2, #24]
 4227 0072 43F00803 		orr	r3, r3, #8
 4228 0076 9361     		str	r3, [r2, #24]
 4229              	.LVL360:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
 4230              		.loc 1 2761 0
 4231 0078 0220     		movs	r0, #2
 4232              	.LVL361:
2762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4233              		.loc 1 2763 0
 4234 007a 7047     		bx	lr
 4235              	.LVL362:
 4236              	.L312:
 4237              	.LCFI49:
 4238              		.cfi_def_cfa_offset 8
 4239              		.cfi_offset 4, -8
 4240              		.cfi_offset 14, -4
2754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4241              		.loc 1 2754 0
 4242 007c 0020     		movs	r0, #0
 4243              	.LVL363:
 4244              		.loc 1 2763 0
 4245 007e 10BD     		pop	{r4, pc}
 4246              		.cfi_endproc
 4247              	.LFE181:
ARM GAS  /tmp/ccfc96Pv.s 			page 133


 4249              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 4250              		.align	2
 4251              		.global	HAL_UART_IRQHandler
 4252              		.thumb
 4253              		.thumb_func
 4255              	HAL_UART_IRQHandler:
 4256              	.LFB146:
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 4257              		.loc 1 1617 0
 4258              		.cfi_startproc
 4259              		@ args = 0, pretend = 0, frame = 0
 4260              		@ frame_needed = 0, uses_anonymous_args = 0
 4261              	.LVL364:
 4262 0000 38B5     		push	{r3, r4, r5, lr}
 4263              	.LCFI50:
 4264              		.cfi_def_cfa_offset 16
 4265              		.cfi_offset 3, -16
 4266              		.cfi_offset 4, -12
 4267              		.cfi_offset 5, -8
 4268              		.cfi_offset 14, -4
 4269 0002 0446     		mov	r4, r0
1618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 4270              		.loc 1 1618 0
 4271 0004 0268     		ldr	r2, [r0]
 4272 0006 D369     		ldr	r3, [r2, #28]
 4273              	.LVL365:
1619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr3its;
 4274              		.loc 1 1619 0
 4275 0008 1168     		ldr	r1, [r2]
 4276              	.LVL366:
1625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4277              		.loc 1 1625 0
 4278 000a 13F00F05 		ands	r5, r3, #15
 4279              	.LVL367:
 4280 000e 08D1     		bne	.L315
1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4281              		.loc 1 1628 0
 4282 0010 13F0200F 		tst	r3, #32
 4283 0014 05D0     		beq	.L315
1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4284              		.loc 1 1628 0 is_stmt 0 discriminator 1
 4285 0016 11F0200F 		tst	r1, #32
 4286 001a 02D0     		beq	.L315
1630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
 4287              		.loc 1 1630 0 is_stmt 1
 4288 001c FFF7FEFF 		bl	UART_Receive_IT
 4289              	.LVL368:
1631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4290              		.loc 1 1631 0
 4291 0020 38BD     		pop	{r3, r4, r5, pc}
 4292              	.LVL369:
 4293              	.L315:
1636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if(   (errorflags != RESET)
 4294              		.loc 1 1636 0
 4295 0022 9068     		ldr	r0, [r2, #8]
 4296              	.LVL370:
1637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
ARM GAS  /tmp/ccfc96Pv.s 			page 134


 4297              		.loc 1 1637 0
 4298 0024 002D     		cmp	r5, #0
 4299 0026 6FD0     		beq	.L317
1638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
 4300              		.loc 1 1638 0
 4301 0028 10F00105 		ands	r5, r0, #1
 4302              	.LVL371:
 4303 002c 02D1     		bne	.L318
1639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4304              		.loc 1 1639 0
 4305 002e 11F4907F 		tst	r1, #288
 4306 0032 69D0     		beq	.L317
 4307              	.L318:
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4308              		.loc 1 1642 0
 4309 0034 13F0010F 		tst	r3, #1
 4310 0038 07D0     		beq	.L319
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4311              		.loc 1 1642 0 is_stmt 0 discriminator 1
 4312 003a 11F4807F 		tst	r1, #256
 4313 003e 04D0     		beq	.L319
1644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4314              		.loc 1 1644 0 is_stmt 1
 4315 0040 0120     		movs	r0, #1
 4316              	.LVL372:
 4317 0042 1062     		str	r0, [r2, #32]
1646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4318              		.loc 1 1646 0
 4319 0044 E26E     		ldr	r2, [r4, #108]
 4320 0046 0243     		orrs	r2, r2, r0
 4321 0048 E266     		str	r2, [r4, #108]
 4322              	.L319:
1650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4323              		.loc 1 1650 0
 4324 004a 13F0020F 		tst	r3, #2
 4325 004e 07D0     		beq	.L320
1650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4326              		.loc 1 1650 0 is_stmt 0 discriminator 1
 4327 0050 35B1     		cbz	r5, .L320
1652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4328              		.loc 1 1652 0 is_stmt 1
 4329 0052 2268     		ldr	r2, [r4]
 4330 0054 0220     		movs	r0, #2
 4331 0056 1062     		str	r0, [r2, #32]
1654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4332              		.loc 1 1654 0
 4333 0058 E26E     		ldr	r2, [r4, #108]
 4334 005a 42F00402 		orr	r2, r2, #4
 4335 005e E266     		str	r2, [r4, #108]
 4336              	.L320:
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4337              		.loc 1 1658 0
 4338 0060 13F0040F 		tst	r3, #4
 4339 0064 07D0     		beq	.L321
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4340              		.loc 1 1658 0 is_stmt 0 discriminator 1
 4341 0066 35B1     		cbz	r5, .L321
ARM GAS  /tmp/ccfc96Pv.s 			page 135


1660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4342              		.loc 1 1660 0 is_stmt 1
 4343 0068 2268     		ldr	r2, [r4]
 4344 006a 0420     		movs	r0, #4
 4345 006c 1062     		str	r0, [r2, #32]
1662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4346              		.loc 1 1662 0
 4347 006e E26E     		ldr	r2, [r4, #108]
 4348 0070 42F00202 		orr	r2, r2, #2
 4349 0074 E266     		str	r2, [r4, #108]
 4350              	.L321:
1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 4351              		.loc 1 1666 0
 4352 0076 13F0080F 		tst	r3, #8
 4353 007a 09D0     		beq	.L322
1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 4354              		.loc 1 1666 0 is_stmt 0 discriminator 1
 4355 007c 11F0200F 		tst	r1, #32
 4356 0080 00D1     		bne	.L323
1667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4357              		.loc 1 1667 0 is_stmt 1
 4358 0082 2DB1     		cbz	r5, .L322
 4359              	.L323:
1669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4360              		.loc 1 1669 0
 4361 0084 2268     		ldr	r2, [r4]
 4362 0086 0820     		movs	r0, #8
 4363 0088 1062     		str	r0, [r2, #32]
1671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4364              		.loc 1 1671 0
 4365 008a E26E     		ldr	r2, [r4, #108]
 4366 008c 0243     		orrs	r2, r2, r0
 4367 008e E266     		str	r2, [r4, #108]
 4368              	.L322:
1675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4369              		.loc 1 1675 0
 4370 0090 E26E     		ldr	r2, [r4, #108]
 4371 0092 002A     		cmp	r2, #0
 4372 0094 5DD0     		beq	.L314
1678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 4373              		.loc 1 1678 0
 4374 0096 13F0200F 		tst	r3, #32
 4375 009a 05D0     		beq	.L324
1678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 4376              		.loc 1 1678 0 is_stmt 0 discriminator 1
 4377 009c 11F0200F 		tst	r1, #32
 4378 00a0 02D0     		beq	.L324
1680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 4379              		.loc 1 1680 0 is_stmt 1
 4380 00a2 2046     		mov	r0, r4
 4381 00a4 FFF7FEFF 		bl	UART_Receive_IT
 4382              	.LVL373:
 4383              	.L324:
1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 4384              		.loc 1 1685 0
 4385 00a8 E36E     		ldr	r3, [r4, #108]
 4386 00aa 13F0080F 		tst	r3, #8
ARM GAS  /tmp/ccfc96Pv.s 			page 136


 4387 00ae 04D1     		bne	.L325
1686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {  
 4388              		.loc 1 1686 0 discriminator 1
 4389 00b0 2368     		ldr	r3, [r4]
 4390 00b2 9B68     		ldr	r3, [r3, #8]
1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 4391              		.loc 1 1685 0 discriminator 1
 4392 00b4 13F0400F 		tst	r3, #64
 4393 00b8 20D0     		beq	.L326
 4394              	.L325:
1691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4395              		.loc 1 1691 0
 4396 00ba 2046     		mov	r0, r4
 4397 00bc FFF7FEFF 		bl	UART_EndRxTransfer
 4398              	.LVL374:
1694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 4399              		.loc 1 1694 0
 4400 00c0 2368     		ldr	r3, [r4]
 4401 00c2 9A68     		ldr	r2, [r3, #8]
 4402 00c4 12F0400F 		tst	r2, #64
 4403 00c8 14D0     		beq	.L327
1696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4404              		.loc 1 1696 0
 4405 00ca 9A68     		ldr	r2, [r3, #8]
 4406 00cc 22F04002 		bic	r2, r2, #64
 4407 00d0 9A60     		str	r2, [r3, #8]
1699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           {
 4408              		.loc 1 1699 0
 4409 00d2 636E     		ldr	r3, [r4, #100]
 4410 00d4 53B1     		cbz	r3, .L328
1703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4411              		.loc 1 1703 0
 4412 00d6 1F4A     		ldr	r2, .L332
 4413 00d8 5A63     		str	r2, [r3, #52]
1706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             {
 4414              		.loc 1 1706 0
 4415 00da 606E     		ldr	r0, [r4, #100]
 4416 00dc FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4417              	.LVL375:
 4418 00e0 0028     		cmp	r0, #0
 4419 00e2 36D0     		beq	.L314
1709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             }
 4420              		.loc 1 1709 0
 4421 00e4 606E     		ldr	r0, [r4, #100]
 4422 00e6 436B     		ldr	r3, [r0, #52]
 4423 00e8 9847     		blx	r3
 4424              	.LVL376:
 4425 00ea 38BD     		pop	{r3, r4, r5, pc}
 4426              	.LVL377:
 4427              	.L328:
1715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           }
 4428              		.loc 1 1715 0
 4429 00ec 2046     		mov	r0, r4
 4430 00ee FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4431              	.LVL378:
 4432 00f2 38BD     		pop	{r3, r4, r5, pc}
 4433              	.LVL379:
ARM GAS  /tmp/ccfc96Pv.s 			page 137


 4434              	.L327:
1721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
 4435              		.loc 1 1721 0
 4436 00f4 2046     		mov	r0, r4
 4437 00f6 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4438              	.LVL380:
 4439 00fa 38BD     		pop	{r3, r4, r5, pc}
 4440              	.LVL381:
 4441              	.L326:
1728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 4442              		.loc 1 1728 0
 4443 00fc 2046     		mov	r0, r4
 4444 00fe FFF7FEFF 		bl	HAL_UART_ErrorCallback
 4445              	.LVL382:
1729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 4446              		.loc 1 1729 0
 4447 0102 0023     		movs	r3, #0
 4448 0104 E366     		str	r3, [r4, #108]
 4449 0106 38BD     		pop	{r3, r4, r5, pc}
 4450              	.LVL383:
 4451              	.L317:
1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4452              		.loc 1 1737 0
 4453 0108 13F4801F 		tst	r3, #1048576
 4454 010c 0ED0     		beq	.L329
1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4455              		.loc 1 1737 0 is_stmt 0 discriminator 1
 4456 010e 10F4800F 		tst	r0, #4194304
 4457 0112 0BD0     		beq	.L329
1739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
 4458              		.loc 1 1739 0 is_stmt 1
 4459 0114 4FF48013 		mov	r3, #1048576
 4460              	.LVL384:
 4461 0118 1362     		str	r3, [r2, #32]
1741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4462              		.loc 1 1741 0
 4463 011a 2023     		movs	r3, #32
 4464 011c 84F86930 		strb	r3, [r4, #105]
1742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
 4465              		.loc 1 1742 0
 4466 0120 84F86A30 		strb	r3, [r4, #106]
1743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
 4467              		.loc 1 1743 0
 4468 0124 2046     		mov	r0, r4
 4469              	.LVL385:
 4470 0126 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
 4471              	.LVL386:
1744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4472              		.loc 1 1744 0
 4473 012a 38BD     		pop	{r3, r4, r5, pc}
 4474              	.LVL387:
 4475              	.L329:
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4476              		.loc 1 1748 0
 4477 012c 13F0800F 		tst	r3, #128
 4478 0130 06D0     		beq	.L330
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
ARM GAS  /tmp/ccfc96Pv.s 			page 138


 4479              		.loc 1 1748 0 is_stmt 0 discriminator 1
 4480 0132 11F0800F 		tst	r1, #128
 4481 0136 03D0     		beq	.L330
1750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
 4482              		.loc 1 1750 0 is_stmt 1
 4483 0138 2046     		mov	r0, r4
 4484              	.LVL388:
 4485 013a FFF7FEFF 		bl	UART_Transmit_IT
 4486              	.LVL389:
1751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4487              		.loc 1 1751 0
 4488 013e 38BD     		pop	{r3, r4, r5, pc}
 4489              	.LVL390:
 4490              	.L330:
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4491              		.loc 1 1755 0
 4492 0140 13F0400F 		tst	r3, #64
 4493 0144 05D0     		beq	.L314
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4494              		.loc 1 1755 0 is_stmt 0 discriminator 1
 4495 0146 11F0400F 		tst	r1, #64
 4496 014a 02D0     		beq	.L314
1757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
 4497              		.loc 1 1757 0 is_stmt 1
 4498 014c 2046     		mov	r0, r4
 4499              	.LVL391:
 4500 014e FFF7FEFF 		bl	UART_EndTransmit_IT
 4501              	.LVL392:
 4502              	.L314:
 4503 0152 38BD     		pop	{r3, r4, r5, pc}
 4504              	.LVL393:
 4505              	.L333:
 4506              		.align	2
 4507              	.L332:
 4508 0154 00000000 		.word	UART_DMAAbortOnError
 4509              		.cfi_endproc
 4510              	.LFE146:
 4512              		.section	.text.UART_Wakeup_AddressConfig,"ax",%progbits
 4513              		.align	2
 4514              		.global	UART_Wakeup_AddressConfig
 4515              		.thumb
 4516              		.thumb_func
 4518              	UART_Wakeup_AddressConfig:
 4519              	.LFB182:
2764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the UART wake-up from stop mode parameters when triggered by address detectio
2767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param WakeUpSelection UART wake up from stop mode parameters.
2769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void UART_Wakeup_AddressConfig(UART_HandleTypeDef *huart, UART_WakeUpTypeDef WakeUpSelection)
2772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 4520              		.loc 1 2772 0
 4521              		.cfi_startproc
 4522              		@ args = 0, pretend = 0, frame = 8
 4523              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccfc96Pv.s 			page 139


 4524              		@ link register save eliminated.
 4525              	.LVL394:
 4526 0000 82B0     		sub	sp, sp, #8
 4527              	.LCFI51:
 4528              		.cfi_def_cfa_offset 8
 4529 0002 02AB     		add	r3, sp, #8
 4530 0004 03E90600 		stmdb	r3, {r1, r2}
2773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ADDRESSLENGTH_DETECT(WakeUpSelection.AddressLength));
2774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the USART address length */
2776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADDM7, WakeUpSelection.AddressLength);
 4531              		.loc 1 2776 0
 4532 0008 0268     		ldr	r2, [r0]
 4533 000a 5368     		ldr	r3, [r2, #4]
 4534 000c 23F01003 		bic	r3, r3, #16
 4535 0010 BDF80410 		ldrh	r1, [sp, #4]
 4536 0014 0B43     		orrs	r3, r3, r1
 4537 0016 5360     		str	r3, [r2, #4]
2777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the USART address node */
2779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)WakeUpSelection.Address << UART_CR2_AD
 4538              		.loc 1 2779 0
 4539 0018 0268     		ldr	r2, [r0]
 4540 001a 5368     		ldr	r3, [r2, #4]
 4541 001c 23F07F43 		bic	r3, r3, #-16777216
 4542 0020 9DF80610 		ldrb	r1, [sp, #6]	@ zero_extendqisi2
 4543 0024 43EA0163 		orr	r3, r3, r1, lsl #24
 4544 0028 5360     		str	r3, [r2, #4]
2780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4545              		.loc 1 2780 0
 4546 002a 02B0     		add	sp, sp, #8
 4547              	.LCFI52:
 4548              		.cfi_def_cfa_offset 0
 4549              		@ sp needed
 4550 002c 7047     		bx	lr
 4551              		.cfi_endproc
 4552              	.LFE182:
 4554 002e 00BF     		.text
 4555              	.Letext0:
 4556              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 4557              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 4558              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 4559              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 4560              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 4561              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 4562              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 4563              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 4564              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 4565              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart_ex.h"
 4566              		.file 12 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/ccfc96Pv.s 			page 140


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f3xx_hal_uart.c
     /tmp/ccfc96Pv.s:22     .text.UART_EndTxTransfer:00000000 $t
     /tmp/ccfc96Pv.s:26     .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
     /tmp/ccfc96Pv.s:48     .text.UART_EndRxTransfer:00000000 $t
     /tmp/ccfc96Pv.s:52     .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
     /tmp/ccfc96Pv.s:78     .text.HAL_UART_MspInit:00000000 $t
     /tmp/ccfc96Pv.s:83     .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
     /tmp/ccfc96Pv.s:96     .text.HAL_UART_MspDeInit:00000000 $t
     /tmp/ccfc96Pv.s:101    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
     /tmp/ccfc96Pv.s:114    .text.HAL_UART_DeInit:00000000 $t
     /tmp/ccfc96Pv.s:119    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
     /tmp/ccfc96Pv.s:185    .text.HAL_UART_Transmit_IT:00000000 $t
     /tmp/ccfc96Pv.s:190    .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
     /tmp/ccfc96Pv.s:265    .text.HAL_UART_Receive_IT:00000000 $t
     /tmp/ccfc96Pv.s:270    .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
     /tmp/ccfc96Pv.s:402    .text.HAL_UART_Transmit_DMA:00000000 $t
     /tmp/ccfc96Pv.s:407    .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
     /tmp/ccfc96Pv.s:520    .text.HAL_UART_Transmit_DMA:00000084 $d
     /tmp/ccfc96Pv.s:1124   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
     /tmp/ccfc96Pv.s:1194   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
     /tmp/ccfc96Pv.s:1361   .text.UART_DMAError:00000000 UART_DMAError
     /tmp/ccfc96Pv.s:527    .text.HAL_UART_Receive_DMA:00000000 $t
     /tmp/ccfc96Pv.s:532    .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
     /tmp/ccfc96Pv.s:649    .text.HAL_UART_Receive_DMA:00000090 $d
     /tmp/ccfc96Pv.s:1240   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
     /tmp/ccfc96Pv.s:1315   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
     /tmp/ccfc96Pv.s:656    .text.HAL_UART_DMAPause:00000000 $t
     /tmp/ccfc96Pv.s:661    .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
     /tmp/ccfc96Pv.s:736    .text.HAL_UART_DMAResume:00000000 $t
     /tmp/ccfc96Pv.s:741    .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
     /tmp/ccfc96Pv.s:810    .text.HAL_UART_DMAStop:00000000 $t
     /tmp/ccfc96Pv.s:815    .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
     /tmp/ccfc96Pv.s:890    .text.HAL_UART_Abort:00000000 $t
     /tmp/ccfc96Pv.s:895    .text.HAL_UART_Abort:00000000 HAL_UART_Abort
     /tmp/ccfc96Pv.s:981    .text.HAL_UART_AbortTransmit:00000000 $t
     /tmp/ccfc96Pv.s:986    .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
     /tmp/ccfc96Pv.s:1037   .text.HAL_UART_AbortReceive:00000000 $t
     /tmp/ccfc96Pv.s:1042   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
     /tmp/ccfc96Pv.s:1102   .text.HAL_UART_TxCpltCallback:00000000 $t
     /tmp/ccfc96Pv.s:1107   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
     /tmp/ccfc96Pv.s:1120   .text.UART_DMATransmitCplt:00000000 $t
     /tmp/ccfc96Pv.s:1172   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
     /tmp/ccfc96Pv.s:1177   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccfc96Pv.s:1190   .text.UART_DMATxHalfCplt:00000000 $t
     /tmp/ccfc96Pv.s:1218   .text.HAL_UART_RxCpltCallback:00000000 $t
     /tmp/ccfc96Pv.s:1223   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
     /tmp/ccfc96Pv.s:1236   .text.UART_DMAReceiveCplt:00000000 $t
     /tmp/ccfc96Pv.s:1293   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
     /tmp/ccfc96Pv.s:1298   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccfc96Pv.s:1311   .text.UART_DMARxHalfCplt:00000000 $t
     /tmp/ccfc96Pv.s:1339   .text.HAL_UART_ErrorCallback:00000000 $t
     /tmp/ccfc96Pv.s:1344   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
     /tmp/ccfc96Pv.s:1357   .text.UART_DMAError:00000000 $t
     /tmp/ccfc96Pv.s:1427   .text.UART_DMAAbortOnError:00000000 $t
     /tmp/ccfc96Pv.s:1431   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
     /tmp/ccfc96Pv.s:1459   .text.HAL_UART_AbortCpltCallback:00000000 $t
ARM GAS  /tmp/ccfc96Pv.s 			page 141


     /tmp/ccfc96Pv.s:1464   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
     /tmp/ccfc96Pv.s:1477   .text.HAL_UART_Abort_IT:00000000 $t
     /tmp/ccfc96Pv.s:1482   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
     /tmp/ccfc96Pv.s:1639   .text.HAL_UART_Abort_IT:000000c8 $d
     /tmp/ccfc96Pv.s:1704   .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
     /tmp/ccfc96Pv.s:1649   .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
     /tmp/ccfc96Pv.s:1645   .text.UART_DMARxAbortCallback:00000000 $t
     /tmp/ccfc96Pv.s:1700   .text.UART_DMATxAbortCallback:00000000 $t
     /tmp/ccfc96Pv.s:1755   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
     /tmp/ccfc96Pv.s:1760   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccfc96Pv.s:1773   .text.HAL_UART_AbortTransmit_IT:00000000 $t
     /tmp/ccfc96Pv.s:1778   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
     /tmp/ccfc96Pv.s:1855   .text.HAL_UART_AbortTransmit_IT:00000060 $d
     /tmp/ccfc96Pv.s:1864   .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
     /tmp/ccfc96Pv.s:1860   .text.UART_DMATxOnlyAbortCallback:00000000 $t
     /tmp/ccfc96Pv.s:1893   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
     /tmp/ccfc96Pv.s:1898   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccfc96Pv.s:1911   .text.HAL_UART_AbortReceive_IT:00000000 $t
     /tmp/ccfc96Pv.s:1916   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
     /tmp/ccfc96Pv.s:2005   .text.HAL_UART_AbortReceive_IT:00000074 $d
     /tmp/ccfc96Pv.s:2014   .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
     /tmp/ccfc96Pv.s:2010   .text.UART_DMARxOnlyAbortCallback:00000000 $t
     /tmp/ccfc96Pv.s:2047   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
     /tmp/ccfc96Pv.s:2052   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccfc96Pv.s:2070   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
     /tmp/ccfc96Pv.s:2075   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccfc96Pv.s:2124   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
     /tmp/ccfc96Pv.s:2129   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccfc96Pv.s:2178   .text.HAL_LIN_SendBreak:00000000 $t
     /tmp/ccfc96Pv.s:2183   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
     /tmp/ccfc96Pv.s:2227   .text.HAL_UART_GetState:00000000 $t
     /tmp/ccfc96Pv.s:2232   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
     /tmp/ccfc96Pv.s:2254   .text.HAL_UART_GetError:00000000 $t
     /tmp/ccfc96Pv.s:2259   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
     /tmp/ccfc96Pv.s:2276   .text.UART_SetConfig:00000000 $t
     /tmp/ccfc96Pv.s:2281   .text.UART_SetConfig:00000000 UART_SetConfig
     /tmp/ccfc96Pv.s:2347   .text.UART_SetConfig:00000058 $d
     /tmp/ccfc96Pv.s:2351   .text.UART_SetConfig:0000005c $t
     /tmp/ccfc96Pv.s:2559   .text.UART_SetConfig:0000017a $d
     /tmp/ccfc96Pv.s:2669   .text.UART_SetConfig:0000020a $d
     /tmp/ccfc96Pv.s:2760   .text.UART_SetConfig:00000288 $d
     /tmp/ccfc96Pv.s:2770   .text.UART_AdvFeatureConfig:00000000 $t
     /tmp/ccfc96Pv.s:2775   .text.UART_AdvFeatureConfig:00000000 UART_AdvFeatureConfig
     /tmp/ccfc96Pv.s:2895   .text.UART_WaitOnFlagUntilTimeout:00000000 $t
     /tmp/ccfc96Pv.s:2900   .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccfc96Pv.s:2977   .text.HAL_UART_Transmit:00000000 $t
     /tmp/ccfc96Pv.s:2982   .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
     /tmp/ccfc96Pv.s:3146   .text.HAL_UART_Receive:00000000 $t
     /tmp/ccfc96Pv.s:3151   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
     /tmp/ccfc96Pv.s:3357   .text.UART_CheckIdleState:00000000 $t
     /tmp/ccfc96Pv.s:3362   .text.UART_CheckIdleState:00000000 UART_CheckIdleState
     /tmp/ccfc96Pv.s:3449   .text.HAL_UART_Init:00000000 $t
     /tmp/ccfc96Pv.s:3454   .text.HAL_UART_Init:00000000 HAL_UART_Init
     /tmp/ccfc96Pv.s:3545   .text.HAL_HalfDuplex_Init:00000000 $t
     /tmp/ccfc96Pv.s:3550   .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
     /tmp/ccfc96Pv.s:3647   .text.HAL_LIN_Init:00000000 $t
     /tmp/ccfc96Pv.s:3652   .text.HAL_LIN_Init:00000000 HAL_LIN_Init
ARM GAS  /tmp/ccfc96Pv.s 			page 142


     /tmp/ccfc96Pv.s:3781   .text.HAL_MultiProcessor_Init:00000000 $t
     /tmp/ccfc96Pv.s:3786   .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
     /tmp/ccfc96Pv.s:3902   .text.HAL_MultiProcessor_EnableMuteMode:00000000 $t
     /tmp/ccfc96Pv.s:3907   .text.HAL_MultiProcessor_EnableMuteMode:00000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/ccfc96Pv.s:3952   .text.HAL_MultiProcessor_DisableMuteMode:00000000 $t
     /tmp/ccfc96Pv.s:3957   .text.HAL_MultiProcessor_DisableMuteMode:00000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/ccfc96Pv.s:4002   .text.UART_Transmit_IT:00000000 $t
     /tmp/ccfc96Pv.s:4007   .text.UART_Transmit_IT:00000000 UART_Transmit_IT
     /tmp/ccfc96Pv.s:4092   .text.UART_EndTransmit_IT:00000000 $t
     /tmp/ccfc96Pv.s:4097   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
     /tmp/ccfc96Pv.s:4127   .text.UART_Receive_IT:00000000 $t
     /tmp/ccfc96Pv.s:4132   .text.UART_Receive_IT:00000000 UART_Receive_IT
     /tmp/ccfc96Pv.s:4250   .text.HAL_UART_IRQHandler:00000000 $t
     /tmp/ccfc96Pv.s:4255   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
     /tmp/ccfc96Pv.s:4508   .text.HAL_UART_IRQHandler:00000154 $d
     /tmp/ccfc96Pv.s:4513   .text.UART_Wakeup_AddressConfig:00000000 $t
     /tmp/ccfc96Pv.s:4518   .text.UART_Wakeup_AddressConfig:00000000 UART_Wakeup_AddressConfig
                     .debug_frame:00000010 $d
     /tmp/ccfc96Pv.s:2568   .text.UART_SetConfig:00000183 $d
     /tmp/ccfc96Pv.s:2568   .text.UART_SetConfig:00000184 $t
     /tmp/ccfc96Pv.s:2678   .text.UART_SetConfig:00000213 $d
     /tmp/ccfc96Pv.s:2678   .text.UART_SetConfig:00000214 $t

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetSysClockFreq
HAL_GetTick
HAL_UARTEx_WakeupCallback
